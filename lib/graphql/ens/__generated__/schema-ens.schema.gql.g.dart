// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'schema-ens.schema.gql.dart';

// **************************************************************************
// BuiltValueGenerator
// **************************************************************************

const GEpisodeCategory _$gEpisodeCategoryALL = const GEpisodeCategory._('ALL');
const GEpisodeCategory _$gEpisodeCategoryDISEASE =
    const GEpisodeCategory._('DISEASE');
const GEpisodeCategory _$gEpisodeCategoryBIOLOGY =
    const GEpisodeCategory._('BIOLOGY');
const GEpisodeCategory _$gEpisodeCategoryMEDICINE =
    const GEpisodeCategory._('MEDICINE');
const GEpisodeCategory _$gEpisodeCategoryMEDICAL_DENTAL_CARE =
    const GEpisodeCategory._('MEDICAL_DENTAL_CARE');
const GEpisodeCategory _$gEpisodeCategoryHOSPITALIZATION =
    const GEpisodeCategory._('HOSPITALIZATION');
const GEpisodeCategory _$gEpisodeCategoryRADIOLOGY =
    const GEpisodeCategory._('RADIOLOGY');
const GEpisodeCategory _$gEpisodeCategoryMEDICAL_DEVICE =
    const GEpisodeCategory._('MEDICAL_DEVICE');
const GEpisodeCategory _$gEpisodeCategoryVACCINE =
    const GEpisodeCategory._('VACCINE');
const GEpisodeCategory _$gEpisodeCategoryCVA_VACCINE =
    const GEpisodeCategory._('CVA_VACCINE');
const GEpisodeCategory _$gEpisodeCategorygUnknownEnumValue =
    const GEpisodeCategory._('gUnknownEnumValue');

GEpisodeCategory _$gEpisodeCategoryValueOf(String name) {
  switch (name) {
    case 'ALL':
      return _$gEpisodeCategoryALL;
    case 'DISEASE':
      return _$gEpisodeCategoryDISEASE;
    case 'BIOLOGY':
      return _$gEpisodeCategoryBIOLOGY;
    case 'MEDICINE':
      return _$gEpisodeCategoryMEDICINE;
    case 'MEDICAL_DENTAL_CARE':
      return _$gEpisodeCategoryMEDICAL_DENTAL_CARE;
    case 'HOSPITALIZATION':
      return _$gEpisodeCategoryHOSPITALIZATION;
    case 'RADIOLOGY':
      return _$gEpisodeCategoryRADIOLOGY;
    case 'MEDICAL_DEVICE':
      return _$gEpisodeCategoryMEDICAL_DEVICE;
    case 'VACCINE':
      return _$gEpisodeCategoryVACCINE;
    case 'CVA_VACCINE':
      return _$gEpisodeCategoryCVA_VACCINE;
    case 'gUnknownEnumValue':
      return _$gEpisodeCategorygUnknownEnumValue;
    default:
      return _$gEpisodeCategorygUnknownEnumValue;
  }
}

final BuiltSet<GEpisodeCategory> _$gEpisodeCategoryValues =
    new BuiltSet<GEpisodeCategory>(const <GEpisodeCategory>[
  _$gEpisodeCategoryALL,
  _$gEpisodeCategoryDISEASE,
  _$gEpisodeCategoryBIOLOGY,
  _$gEpisodeCategoryMEDICINE,
  _$gEpisodeCategoryMEDICAL_DENTAL_CARE,
  _$gEpisodeCategoryHOSPITALIZATION,
  _$gEpisodeCategoryRADIOLOGY,
  _$gEpisodeCategoryMEDICAL_DEVICE,
  _$gEpisodeCategoryVACCINE,
  _$gEpisodeCategoryCVA_VACCINE,
  _$gEpisodeCategorygUnknownEnumValue,
]);

const GPreferenceNotificationEnum _$gPreferenceNotificationEnumNOTIF_MESSAGE =
    const GPreferenceNotificationEnum._('NOTIF_MESSAGE');
const GPreferenceNotificationEnum _$gPreferenceNotificationEnumNOTIF_DOCUMENT =
    const GPreferenceNotificationEnum._('NOTIF_DOCUMENT');
const GPreferenceNotificationEnum
    _$gPreferenceNotificationEnumNOTIF_APPOINTMENT =
    const GPreferenceNotificationEnum._('NOTIF_APPOINTMENT');
const GPreferenceNotificationEnum
    _$gPreferenceNotificationEnumNOTIF_SYNCHRONIZED_SERVICE =
    const GPreferenceNotificationEnum._('NOTIF_SYNCHRONIZED_SERVICE');
const GPreferenceNotificationEnum _$gPreferenceNotificationEnumNOTIF_DEPISTAGE =
    const GPreferenceNotificationEnum._('NOTIF_DEPISTAGE');
const GPreferenceNotificationEnum
    _$gPreferenceNotificationEnumgUnknownEnumValue =
    const GPreferenceNotificationEnum._('gUnknownEnumValue');

GPreferenceNotificationEnum _$gPreferenceNotificationEnumValueOf(String name) {
  switch (name) {
    case 'NOTIF_MESSAGE':
      return _$gPreferenceNotificationEnumNOTIF_MESSAGE;
    case 'NOTIF_DOCUMENT':
      return _$gPreferenceNotificationEnumNOTIF_DOCUMENT;
    case 'NOTIF_APPOINTMENT':
      return _$gPreferenceNotificationEnumNOTIF_APPOINTMENT;
    case 'NOTIF_SYNCHRONIZED_SERVICE':
      return _$gPreferenceNotificationEnumNOTIF_SYNCHRONIZED_SERVICE;
    case 'NOTIF_DEPISTAGE':
      return _$gPreferenceNotificationEnumNOTIF_DEPISTAGE;
    case 'gUnknownEnumValue':
      return _$gPreferenceNotificationEnumgUnknownEnumValue;
    default:
      return _$gPreferenceNotificationEnumgUnknownEnumValue;
  }
}

final BuiltSet<GPreferenceNotificationEnum>
    _$gPreferenceNotificationEnumValues = new BuiltSet<
        GPreferenceNotificationEnum>(const <GPreferenceNotificationEnum>[
  _$gPreferenceNotificationEnumNOTIF_MESSAGE,
  _$gPreferenceNotificationEnumNOTIF_DOCUMENT,
  _$gPreferenceNotificationEnumNOTIF_APPOINTMENT,
  _$gPreferenceNotificationEnumNOTIF_SYNCHRONIZED_SERVICE,
  _$gPreferenceNotificationEnumNOTIF_DEPISTAGE,
  _$gPreferenceNotificationEnumgUnknownEnumValue,
]);

const GDemandeAccesStatutEnum _$gDemandeAccesStatutEnumWAITING =
    const GDemandeAccesStatutEnum._('WAITING');
const GDemandeAccesStatutEnum _$gDemandeAccesStatutEnumVALIDATED =
    const GDemandeAccesStatutEnum._('VALIDATED');
const GDemandeAccesStatutEnum _$gDemandeAccesStatutEnumREFUSED =
    const GDemandeAccesStatutEnum._('REFUSED');
const GDemandeAccesStatutEnum _$gDemandeAccesStatutEnumgUnknownEnumValue =
    const GDemandeAccesStatutEnum._('gUnknownEnumValue');

GDemandeAccesStatutEnum _$gDemandeAccesStatutEnumValueOf(String name) {
  switch (name) {
    case 'WAITING':
      return _$gDemandeAccesStatutEnumWAITING;
    case 'VALIDATED':
      return _$gDemandeAccesStatutEnumVALIDATED;
    case 'REFUSED':
      return _$gDemandeAccesStatutEnumREFUSED;
    case 'gUnknownEnumValue':
      return _$gDemandeAccesStatutEnumgUnknownEnumValue;
    default:
      return _$gDemandeAccesStatutEnumgUnknownEnumValue;
  }
}

final BuiltSet<GDemandeAccesStatutEnum> _$gDemandeAccesStatutEnumValues =
    new BuiltSet<GDemandeAccesStatutEnum>(const <GDemandeAccesStatutEnum>[
  _$gDemandeAccesStatutEnumWAITING,
  _$gDemandeAccesStatutEnumVALIDATED,
  _$gDemandeAccesStatutEnumREFUSED,
  _$gDemandeAccesStatutEnumgUnknownEnumValue,
]);

const GHealthProfessionalEnum _$gHealthProfessionalEnumGENERAL_PRACTITIONER =
    const GHealthProfessionalEnum._('GENERAL_PRACTITIONER');
const GHealthProfessionalEnum _$gHealthProfessionalEnumALLERGIST =
    const GHealthProfessionalEnum._('ALLERGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumCARDIOLOGIST =
    const GHealthProfessionalEnum._('CARDIOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumDENTIST =
    const GHealthProfessionalEnum._('DENTIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumDERMATOLOGIST =
    const GHealthProfessionalEnum._('DERMATOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumENDOCRINOLOGIST =
    const GHealthProfessionalEnum._('ENDOCRINOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumGASTROENTEROLOGIST =
    const GHealthProfessionalEnum._('GASTROENTEROLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumGERIATRICIAN =
    const GHealthProfessionalEnum._('GERIATRICIAN');
const GHealthProfessionalEnum _$gHealthProfessionalEnumGYNECOLOGIST =
    const GHealthProfessionalEnum._('GYNECOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumINFECTOLOGIST =
    const GHealthProfessionalEnum._('INFECTOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumNURSE =
    const GHealthProfessionalEnum._('NURSE');
const GHealthProfessionalEnum _$gHealthProfessionalEnumPHYSIOTHERAPIST =
    const GHealthProfessionalEnum._('PHYSIOTHERAPIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumNEUROLOGIST =
    const GHealthProfessionalEnum._('NEUROLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumONCOLOGIST =
    const GHealthProfessionalEnum._('ONCOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumOPHTHALMOLOGIST =
    const GHealthProfessionalEnum._('OPHTHALMOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumORTHOPEDIST =
    const GHealthProfessionalEnum._('ORTHOPEDIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumSPEECH_THERAPIST =
    const GHealthProfessionalEnum._('SPEECH_THERAPIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumORTHOPTIST =
    const GHealthProfessionalEnum._('ORTHOPTIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumENT_SPECIALIST =
    const GHealthProfessionalEnum._('ENT_SPECIALIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumPEDIATRICIAN =
    const GHealthProfessionalEnum._('PEDIATRICIAN');
const GHealthProfessionalEnum _$gHealthProfessionalEnumPHARMACIST =
    const GHealthProfessionalEnum._('PHARMACIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumPODIATRIST =
    const GHealthProfessionalEnum._('PODIATRIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumPULMONOLOGIST =
    const GHealthProfessionalEnum._('PULMONOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumPSYCHIATRIST =
    const GHealthProfessionalEnum._('PSYCHIATRIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumRHEUMATOLOGIST =
    const GHealthProfessionalEnum._('RHEUMATOLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumMIDWIFE =
    const GHealthProfessionalEnum._('MIDWIFE');
const GHealthProfessionalEnum _$gHealthProfessionalEnumUROLOGIST =
    const GHealthProfessionalEnum._('UROLOGIST');
const GHealthProfessionalEnum _$gHealthProfessionalEnumOTHER =
    const GHealthProfessionalEnum._('OTHER');
const GHealthProfessionalEnum _$gHealthProfessionalEnumgUnknownEnumValue =
    const GHealthProfessionalEnum._('gUnknownEnumValue');

GHealthProfessionalEnum _$gHealthProfessionalEnumValueOf(String name) {
  switch (name) {
    case 'GENERAL_PRACTITIONER':
      return _$gHealthProfessionalEnumGENERAL_PRACTITIONER;
    case 'ALLERGIST':
      return _$gHealthProfessionalEnumALLERGIST;
    case 'CARDIOLOGIST':
      return _$gHealthProfessionalEnumCARDIOLOGIST;
    case 'DENTIST':
      return _$gHealthProfessionalEnumDENTIST;
    case 'DERMATOLOGIST':
      return _$gHealthProfessionalEnumDERMATOLOGIST;
    case 'ENDOCRINOLOGIST':
      return _$gHealthProfessionalEnumENDOCRINOLOGIST;
    case 'GASTROENTEROLOGIST':
      return _$gHealthProfessionalEnumGASTROENTEROLOGIST;
    case 'GERIATRICIAN':
      return _$gHealthProfessionalEnumGERIATRICIAN;
    case 'GYNECOLOGIST':
      return _$gHealthProfessionalEnumGYNECOLOGIST;
    case 'INFECTOLOGIST':
      return _$gHealthProfessionalEnumINFECTOLOGIST;
    case 'NURSE':
      return _$gHealthProfessionalEnumNURSE;
    case 'PHYSIOTHERAPIST':
      return _$gHealthProfessionalEnumPHYSIOTHERAPIST;
    case 'NEUROLOGIST':
      return _$gHealthProfessionalEnumNEUROLOGIST;
    case 'ONCOLOGIST':
      return _$gHealthProfessionalEnumONCOLOGIST;
    case 'OPHTHALMOLOGIST':
      return _$gHealthProfessionalEnumOPHTHALMOLOGIST;
    case 'ORTHOPEDIST':
      return _$gHealthProfessionalEnumORTHOPEDIST;
    case 'SPEECH_THERAPIST':
      return _$gHealthProfessionalEnumSPEECH_THERAPIST;
    case 'ORTHOPTIST':
      return _$gHealthProfessionalEnumORTHOPTIST;
    case 'ENT_SPECIALIST':
      return _$gHealthProfessionalEnumENT_SPECIALIST;
    case 'PEDIATRICIAN':
      return _$gHealthProfessionalEnumPEDIATRICIAN;
    case 'PHARMACIST':
      return _$gHealthProfessionalEnumPHARMACIST;
    case 'PODIATRIST':
      return _$gHealthProfessionalEnumPODIATRIST;
    case 'PULMONOLOGIST':
      return _$gHealthProfessionalEnumPULMONOLOGIST;
    case 'PSYCHIATRIST':
      return _$gHealthProfessionalEnumPSYCHIATRIST;
    case 'RHEUMATOLOGIST':
      return _$gHealthProfessionalEnumRHEUMATOLOGIST;
    case 'MIDWIFE':
      return _$gHealthProfessionalEnumMIDWIFE;
    case 'UROLOGIST':
      return _$gHealthProfessionalEnumUROLOGIST;
    case 'OTHER':
      return _$gHealthProfessionalEnumOTHER;
    case 'gUnknownEnumValue':
      return _$gHealthProfessionalEnumgUnknownEnumValue;
    default:
      return _$gHealthProfessionalEnumgUnknownEnumValue;
  }
}

final BuiltSet<GHealthProfessionalEnum> _$gHealthProfessionalEnumValues =
    new BuiltSet<GHealthProfessionalEnum>(const <GHealthProfessionalEnum>[
  _$gHealthProfessionalEnumGENERAL_PRACTITIONER,
  _$gHealthProfessionalEnumALLERGIST,
  _$gHealthProfessionalEnumCARDIOLOGIST,
  _$gHealthProfessionalEnumDENTIST,
  _$gHealthProfessionalEnumDERMATOLOGIST,
  _$gHealthProfessionalEnumENDOCRINOLOGIST,
  _$gHealthProfessionalEnumGASTROENTEROLOGIST,
  _$gHealthProfessionalEnumGERIATRICIAN,
  _$gHealthProfessionalEnumGYNECOLOGIST,
  _$gHealthProfessionalEnumINFECTOLOGIST,
  _$gHealthProfessionalEnumNURSE,
  _$gHealthProfessionalEnumPHYSIOTHERAPIST,
  _$gHealthProfessionalEnumNEUROLOGIST,
  _$gHealthProfessionalEnumONCOLOGIST,
  _$gHealthProfessionalEnumOPHTHALMOLOGIST,
  _$gHealthProfessionalEnumORTHOPEDIST,
  _$gHealthProfessionalEnumSPEECH_THERAPIST,
  _$gHealthProfessionalEnumORTHOPTIST,
  _$gHealthProfessionalEnumENT_SPECIALIST,
  _$gHealthProfessionalEnumPEDIATRICIAN,
  _$gHealthProfessionalEnumPHARMACIST,
  _$gHealthProfessionalEnumPODIATRIST,
  _$gHealthProfessionalEnumPULMONOLOGIST,
  _$gHealthProfessionalEnumPSYCHIATRIST,
  _$gHealthProfessionalEnumRHEUMATOLOGIST,
  _$gHealthProfessionalEnumMIDWIFE,
  _$gHealthProfessionalEnumUROLOGIST,
  _$gHealthProfessionalEnumOTHER,
  _$gHealthProfessionalEnumgUnknownEnumValue,
]);

const GHealthProfessionalRoleEnum
    _$gHealthProfessionalRoleEnumSAGE_FEMME_REFERENTE =
    const GHealthProfessionalRoleEnum._('SAGE_FEMME_REFERENTE');
const GHealthProfessionalRoleEnum
    _$gHealthProfessionalRoleEnumPHARMACIEN_CORRESPONDANT =
    const GHealthProfessionalRoleEnum._('PHARMACIEN_CORRESPONDANT');
const GHealthProfessionalRoleEnum
    _$gHealthProfessionalRoleEnumMEDECIN_TRAITANT =
    const GHealthProfessionalRoleEnum._('MEDECIN_TRAITANT');
const GHealthProfessionalRoleEnum
    _$gHealthProfessionalRoleEnumgUnknownEnumValue =
    const GHealthProfessionalRoleEnum._('gUnknownEnumValue');

GHealthProfessionalRoleEnum _$gHealthProfessionalRoleEnumValueOf(String name) {
  switch (name) {
    case 'SAGE_FEMME_REFERENTE':
      return _$gHealthProfessionalRoleEnumSAGE_FEMME_REFERENTE;
    case 'PHARMACIEN_CORRESPONDANT':
      return _$gHealthProfessionalRoleEnumPHARMACIEN_CORRESPONDANT;
    case 'MEDECIN_TRAITANT':
      return _$gHealthProfessionalRoleEnumMEDECIN_TRAITANT;
    case 'gUnknownEnumValue':
      return _$gHealthProfessionalRoleEnumgUnknownEnumValue;
    default:
      return _$gHealthProfessionalRoleEnumgUnknownEnumValue;
  }
}

final BuiltSet<GHealthProfessionalRoleEnum>
    _$gHealthProfessionalRoleEnumValues = new BuiltSet<
        GHealthProfessionalRoleEnum>(const <GHealthProfessionalRoleEnum>[
  _$gHealthProfessionalRoleEnumSAGE_FEMME_REFERENTE,
  _$gHealthProfessionalRoleEnumPHARMACIEN_CORRESPONDANT,
  _$gHealthProfessionalRoleEnumMEDECIN_TRAITANT,
  _$gHealthProfessionalRoleEnumgUnknownEnumValue,
]);

const GReplyTypeEnum _$gReplyTypeEnumREPLY = const GReplyTypeEnum._('REPLY');
const GReplyTypeEnum _$gReplyTypeEnumREPLY_TO_ALL =
    const GReplyTypeEnum._('REPLY_TO_ALL');
const GReplyTypeEnum _$gReplyTypeEnumREPLY_BLOCKED =
    const GReplyTypeEnum._('REPLY_BLOCKED');
const GReplyTypeEnum _$gReplyTypeEnumNO_REPLY =
    const GReplyTypeEnum._('NO_REPLY');
const GReplyTypeEnum _$gReplyTypeEnumNEW_MESSAGE =
    const GReplyTypeEnum._('NEW_MESSAGE');
const GReplyTypeEnum _$gReplyTypeEnumgUnknownEnumValue =
    const GReplyTypeEnum._('gUnknownEnumValue');

GReplyTypeEnum _$gReplyTypeEnumValueOf(String name) {
  switch (name) {
    case 'REPLY':
      return _$gReplyTypeEnumREPLY;
    case 'REPLY_TO_ALL':
      return _$gReplyTypeEnumREPLY_TO_ALL;
    case 'REPLY_BLOCKED':
      return _$gReplyTypeEnumREPLY_BLOCKED;
    case 'NO_REPLY':
      return _$gReplyTypeEnumNO_REPLY;
    case 'NEW_MESSAGE':
      return _$gReplyTypeEnumNEW_MESSAGE;
    case 'gUnknownEnumValue':
      return _$gReplyTypeEnumgUnknownEnumValue;
    default:
      return _$gReplyTypeEnumgUnknownEnumValue;
  }
}

final BuiltSet<GReplyTypeEnum> _$gReplyTypeEnumValues =
    new BuiltSet<GReplyTypeEnum>(const <GReplyTypeEnum>[
  _$gReplyTypeEnumREPLY,
  _$gReplyTypeEnumREPLY_TO_ALL,
  _$gReplyTypeEnumREPLY_BLOCKED,
  _$gReplyTypeEnumNO_REPLY,
  _$gReplyTypeEnumNEW_MESSAGE,
  _$gReplyTypeEnumgUnknownEnumValue,
]);

const GAgendaAuthorTypeEnum _$gAgendaAuthorTypeEnumPATIENT =
    const GAgendaAuthorTypeEnum._('PATIENT');
const GAgendaAuthorTypeEnum _$gAgendaAuthorTypeEnumEDITOR_SOLUTION =
    const GAgendaAuthorTypeEnum._('EDITOR_SOLUTION');
const GAgendaAuthorTypeEnum _$gAgendaAuthorTypeEnumgUnknownEnumValue =
    const GAgendaAuthorTypeEnum._('gUnknownEnumValue');

GAgendaAuthorTypeEnum _$gAgendaAuthorTypeEnumValueOf(String name) {
  switch (name) {
    case 'PATIENT':
      return _$gAgendaAuthorTypeEnumPATIENT;
    case 'EDITOR_SOLUTION':
      return _$gAgendaAuthorTypeEnumEDITOR_SOLUTION;
    case 'gUnknownEnumValue':
      return _$gAgendaAuthorTypeEnumgUnknownEnumValue;
    default:
      return _$gAgendaAuthorTypeEnumgUnknownEnumValue;
  }
}

final BuiltSet<GAgendaAuthorTypeEnum> _$gAgendaAuthorTypeEnumValues =
    new BuiltSet<GAgendaAuthorTypeEnum>(const <GAgendaAuthorTypeEnum>[
  _$gAgendaAuthorTypeEnumPATIENT,
  _$gAgendaAuthorTypeEnumEDITOR_SOLUTION,
  _$gAgendaAuthorTypeEnumgUnknownEnumValue,
]);

const GAppointmentType _$gAppointmentTypePRACTITIONER =
    const GAppointmentType._('PRACTITIONER');
const GAppointmentType _$gAppointmentTypeHEALTHCARE_SERVICE =
    const GAppointmentType._('HEALTHCARE_SERVICE');
const GAppointmentType _$gAppointmentTypegUnknownEnumValue =
    const GAppointmentType._('gUnknownEnumValue');

GAppointmentType _$gAppointmentTypeValueOf(String name) {
  switch (name) {
    case 'PRACTITIONER':
      return _$gAppointmentTypePRACTITIONER;
    case 'HEALTHCARE_SERVICE':
      return _$gAppointmentTypeHEALTHCARE_SERVICE;
    case 'gUnknownEnumValue':
      return _$gAppointmentTypegUnknownEnumValue;
    default:
      return _$gAppointmentTypegUnknownEnumValue;
  }
}

final BuiltSet<GAppointmentType> _$gAppointmentTypeValues =
    new BuiltSet<GAppointmentType>(const <GAppointmentType>[
  _$gAppointmentTypePRACTITIONER,
  _$gAppointmentTypeHEALTHCARE_SERVICE,
  _$gAppointmentTypegUnknownEnumValue,
]);

const GPreventionTypeEnum _$gPreventionTypeEnumTO_PLAN =
    const GPreventionTypeEnum._('TO_PLAN');
const GPreventionTypeEnum _$gPreventionTypeEnumNOT_SPECIFIED =
    const GPreventionTypeEnum._('NOT_SPECIFIED');
const GPreventionTypeEnum _$gPreventionTypeEnumDONE =
    const GPreventionTypeEnum._('DONE');
const GPreventionTypeEnum _$gPreventionTypeEnumNOT_DONE =
    const GPreventionTypeEnum._('NOT_DONE');
const GPreventionTypeEnum _$gPreventionTypeEnumgUnknownEnumValue =
    const GPreventionTypeEnum._('gUnknownEnumValue');

GPreventionTypeEnum _$gPreventionTypeEnumValueOf(String name) {
  switch (name) {
    case 'TO_PLAN':
      return _$gPreventionTypeEnumTO_PLAN;
    case 'NOT_SPECIFIED':
      return _$gPreventionTypeEnumNOT_SPECIFIED;
    case 'DONE':
      return _$gPreventionTypeEnumDONE;
    case 'NOT_DONE':
      return _$gPreventionTypeEnumNOT_DONE;
    case 'gUnknownEnumValue':
      return _$gPreventionTypeEnumgUnknownEnumValue;
    default:
      return _$gPreventionTypeEnumgUnknownEnumValue;
  }
}

final BuiltSet<GPreventionTypeEnum> _$gPreventionTypeEnumValues =
    new BuiltSet<GPreventionTypeEnum>(const <GPreventionTypeEnum>[
  _$gPreventionTypeEnumTO_PLAN,
  _$gPreventionTypeEnumNOT_SPECIFIED,
  _$gPreventionTypeEnumDONE,
  _$gPreventionTypeEnumNOT_DONE,
  _$gPreventionTypeEnumgUnknownEnumValue,
]);

const GSourceAuthor _$gSourceAuthorPRACTITIONER =
    const GSourceAuthor._('PRACTITIONER');
const GSourceAuthor _$gSourceAuthorPATIENT = const GSourceAuthor._('PATIENT');
const GSourceAuthor _$gSourceAuthorDISPOSITIF =
    const GSourceAuthor._('DISPOSITIF');
const GSourceAuthor _$gSourceAuthorORGANISATION =
    const GSourceAuthor._('ORGANISATION');
const GSourceAuthor _$gSourceAuthorgUnknownEnumValue =
    const GSourceAuthor._('gUnknownEnumValue');

GSourceAuthor _$gSourceAuthorValueOf(String name) {
  switch (name) {
    case 'PRACTITIONER':
      return _$gSourceAuthorPRACTITIONER;
    case 'PATIENT':
      return _$gSourceAuthorPATIENT;
    case 'DISPOSITIF':
      return _$gSourceAuthorDISPOSITIF;
    case 'ORGANISATION':
      return _$gSourceAuthorORGANISATION;
    case 'gUnknownEnumValue':
      return _$gSourceAuthorgUnknownEnumValue;
    default:
      return _$gSourceAuthorgUnknownEnumValue;
  }
}

final BuiltSet<GSourceAuthor> _$gSourceAuthorValues =
    new BuiltSet<GSourceAuthor>(const <GSourceAuthor>[
  _$gSourceAuthorPRACTITIONER,
  _$gSourceAuthorPATIENT,
  _$gSourceAuthorDISPOSITIF,
  _$gSourceAuthorORGANISATION,
  _$gSourceAuthorgUnknownEnumValue,
]);

const GCategory _$gCategorySYNTHESE = const GCategory._('SYNTHESE');
const GCategory _$gCategoryORD_SOIN = const GCategory._('ORD_SOIN');
const GCategory _$gCategoryRADIO_SC = const GCategory._('RADIO_SC');
const GCategory _$gCategoryBIOLOGIE = const GCategory._('BIOLOGIE');
const GCategory _$gCategoryCPT_REND = const GCategory._('CPT_REND');
const GCategory _$gCategoryDEPISTAG = const GCategory._('DEPISTAG');
const GCategory _$gCategoryCERT_MED = const GCategory._('CERT_MED');
const GCategory _$gCategoryAUTR_DOC = const GCategory._('AUTR_DOC');
const GCategory _$gCategoryDOC_ADM = const GCategory._('DOC_ADM');
const GCategory _$gCategorySYNTH_PML = const GCategory._('SYNTH_PML');
const GCategory _$gCategoryDIR_ANT = const GCategory._('DIR_ANT');
const GCategory _$gCategoryCAR_VAC = const GCategory._('CAR_VAC');
const GCategory _$gCategoryVDP = const GCategory._('VDP');
const GCategory _$gCategoryREMB = const GCategory._('REMB');
const GCategory _$gCategoryQUEST_SANTE = const GCategory._('QUEST_SANTE');
const GCategory _$gCategorygUnknownEnumValue =
    const GCategory._('gUnknownEnumValue');

GCategory _$gCategoryValueOf(String name) {
  switch (name) {
    case 'SYNTHESE':
      return _$gCategorySYNTHESE;
    case 'ORD_SOIN':
      return _$gCategoryORD_SOIN;
    case 'RADIO_SC':
      return _$gCategoryRADIO_SC;
    case 'BIOLOGIE':
      return _$gCategoryBIOLOGIE;
    case 'CPT_REND':
      return _$gCategoryCPT_REND;
    case 'DEPISTAG':
      return _$gCategoryDEPISTAG;
    case 'CERT_MED':
      return _$gCategoryCERT_MED;
    case 'AUTR_DOC':
      return _$gCategoryAUTR_DOC;
    case 'DOC_ADM':
      return _$gCategoryDOC_ADM;
    case 'SYNTH_PML':
      return _$gCategorySYNTH_PML;
    case 'DIR_ANT':
      return _$gCategoryDIR_ANT;
    case 'CAR_VAC':
      return _$gCategoryCAR_VAC;
    case 'VDP':
      return _$gCategoryVDP;
    case 'REMB':
      return _$gCategoryREMB;
    case 'QUEST_SANTE':
      return _$gCategoryQUEST_SANTE;
    case 'gUnknownEnumValue':
      return _$gCategorygUnknownEnumValue;
    default:
      return _$gCategorygUnknownEnumValue;
  }
}

final BuiltSet<GCategory> _$gCategoryValues =
    new BuiltSet<GCategory>(const <GCategory>[
  _$gCategorySYNTHESE,
  _$gCategoryORD_SOIN,
  _$gCategoryRADIO_SC,
  _$gCategoryBIOLOGIE,
  _$gCategoryCPT_REND,
  _$gCategoryDEPISTAG,
  _$gCategoryCERT_MED,
  _$gCategoryAUTR_DOC,
  _$gCategoryDOC_ADM,
  _$gCategorySYNTH_PML,
  _$gCategoryDIR_ANT,
  _$gCategoryCAR_VAC,
  _$gCategoryVDP,
  _$gCategoryREMB,
  _$gCategoryQUEST_SANTE,
  _$gCategorygUnknownEnumValue,
]);

const GConfidentiality _$gConfidentialityMASQUE_PS =
    const GConfidentiality._('MASQUE_PS');
const GConfidentiality _$gConfidentialityN = const GConfidentiality._('N');
const GConfidentiality _$gConfidentialityINVISIBLE_REPRESENTANTS_LEGAUX =
    const GConfidentiality._('INVISIBLE_REPRESENTANTS_LEGAUX');
const GConfidentiality _$gConfidentialitygUnknownEnumValue =
    const GConfidentiality._('gUnknownEnumValue');

GConfidentiality _$gConfidentialityValueOf(String name) {
  switch (name) {
    case 'MASQUE_PS':
      return _$gConfidentialityMASQUE_PS;
    case 'N':
      return _$gConfidentialityN;
    case 'INVISIBLE_REPRESENTANTS_LEGAUX':
      return _$gConfidentialityINVISIBLE_REPRESENTANTS_LEGAUX;
    case 'gUnknownEnumValue':
      return _$gConfidentialitygUnknownEnumValue;
    default:
      return _$gConfidentialitygUnknownEnumValue;
  }
}

final BuiltSet<GConfidentiality> _$gConfidentialityValues =
    new BuiltSet<GConfidentiality>(const <GConfidentiality>[
  _$gConfidentialityMASQUE_PS,
  _$gConfidentialityN,
  _$gConfidentialityINVISIBLE_REPRESENTANTS_LEGAUX,
  _$gConfidentialitygUnknownEnumValue,
]);

const GContactType _$gContactTypeEMERGENCY_CONTACT =
    const GContactType._('EMERGENCY_CONTACT');
const GContactType _$gContactTypeTRUSTED_CONTACT =
    const GContactType._('TRUSTED_CONTACT');
const GContactType _$gContactTypeCAREGIVER_CONTACT =
    const GContactType._('CAREGIVER_CONTACT');
const GContactType _$gContactTypeHELP_CONTACT =
    const GContactType._('HELP_CONTACT');
const GContactType _$gContactTypegUnknownEnumValue =
    const GContactType._('gUnknownEnumValue');

GContactType _$gContactTypeValueOf(String name) {
  switch (name) {
    case 'EMERGENCY_CONTACT':
      return _$gContactTypeEMERGENCY_CONTACT;
    case 'TRUSTED_CONTACT':
      return _$gContactTypeTRUSTED_CONTACT;
    case 'CAREGIVER_CONTACT':
      return _$gContactTypeCAREGIVER_CONTACT;
    case 'HELP_CONTACT':
      return _$gContactTypeHELP_CONTACT;
    case 'gUnknownEnumValue':
      return _$gContactTypegUnknownEnumValue;
    default:
      return _$gContactTypegUnknownEnumValue;
  }
}

final BuiltSet<GContactType> _$gContactTypeValues =
    new BuiltSet<GContactType>(const <GContactType>[
  _$gContactTypeEMERGENCY_CONTACT,
  _$gContactTypeTRUSTED_CONTACT,
  _$gContactTypeCAREGIVER_CONTACT,
  _$gContactTypeHELP_CONTACT,
  _$gContactTypegUnknownEnumValue,
]);

const GEntourageRelation _$gEntourageRelationMOTHER =
    const GEntourageRelation._('MOTHER');
const GEntourageRelation _$gEntourageRelationFATHER =
    const GEntourageRelation._('FATHER');
const GEntourageRelation _$gEntourageRelationCHILD =
    const GEntourageRelation._('CHILD');
const GEntourageRelation _$gEntourageRelationSPOUSE =
    const GEntourageRelation._('SPOUSE');
const GEntourageRelation _$gEntourageRelationTUTEUR =
    const GEntourageRelation._('TUTEUR');
const GEntourageRelation _$gEntourageRelationOTHER =
    const GEntourageRelation._('OTHER');
const GEntourageRelation _$gEntourageRelationgUnknownEnumValue =
    const GEntourageRelation._('gUnknownEnumValue');

GEntourageRelation _$gEntourageRelationValueOf(String name) {
  switch (name) {
    case 'MOTHER':
      return _$gEntourageRelationMOTHER;
    case 'FATHER':
      return _$gEntourageRelationFATHER;
    case 'CHILD':
      return _$gEntourageRelationCHILD;
    case 'SPOUSE':
      return _$gEntourageRelationSPOUSE;
    case 'TUTEUR':
      return _$gEntourageRelationTUTEUR;
    case 'OTHER':
      return _$gEntourageRelationOTHER;
    case 'gUnknownEnumValue':
      return _$gEntourageRelationgUnknownEnumValue;
    default:
      return _$gEntourageRelationgUnknownEnumValue;
  }
}

final BuiltSet<GEntourageRelation> _$gEntourageRelationValues =
    new BuiltSet<GEntourageRelation>(const <GEntourageRelation>[
  _$gEntourageRelationMOTHER,
  _$gEntourageRelationFATHER,
  _$gEntourageRelationCHILD,
  _$gEntourageRelationSPOUSE,
  _$gEntourageRelationTUTEUR,
  _$gEntourageRelationOTHER,
  _$gEntourageRelationgUnknownEnumValue,
]);

const GLinkType _$gLinkTypeDOCUMENT = const GLinkType._('DOCUMENT');
const GLinkType _$gLinkTypeDISEASE = const GLinkType._('DISEASE');
const GLinkType _$gLinkTypeHOSPITALIZATION =
    const GLinkType._('HOSPITALIZATION');
const GLinkType _$gLinkTypeFOLDER = const GLinkType._('FOLDER');
const GLinkType _$gLinkTypeTREATMENT = const GLinkType._('TREATMENT');
const GLinkType _$gLinkTypeMEASURE = const GLinkType._('MEASURE');
const GLinkType _$gLinkTypeALLERGY = const GLinkType._('ALLERGY');
const GLinkType _$gLinkTypegUnknownEnumValue =
    const GLinkType._('gUnknownEnumValue');

GLinkType _$gLinkTypeValueOf(String name) {
  switch (name) {
    case 'DOCUMENT':
      return _$gLinkTypeDOCUMENT;
    case 'DISEASE':
      return _$gLinkTypeDISEASE;
    case 'HOSPITALIZATION':
      return _$gLinkTypeHOSPITALIZATION;
    case 'FOLDER':
      return _$gLinkTypeFOLDER;
    case 'TREATMENT':
      return _$gLinkTypeTREATMENT;
    case 'MEASURE':
      return _$gLinkTypeMEASURE;
    case 'ALLERGY':
      return _$gLinkTypeALLERGY;
    case 'gUnknownEnumValue':
      return _$gLinkTypegUnknownEnumValue;
    default:
      return _$gLinkTypegUnknownEnumValue;
  }
}

final BuiltSet<GLinkType> _$gLinkTypeValues =
    new BuiltSet<GLinkType>(const <GLinkType>[
  _$gLinkTypeDOCUMENT,
  _$gLinkTypeDISEASE,
  _$gLinkTypeHOSPITALIZATION,
  _$gLinkTypeFOLDER,
  _$gLinkTypeTREATMENT,
  _$gLinkTypeMEASURE,
  _$gLinkTypeALLERGY,
  _$gLinkTypegUnknownEnumValue,
]);

const GServiceStatusEnum _$gServiceStatusEnumEN_LIGNE =
    const GServiceStatusEnum._('EN_LIGNE');
const GServiceStatusEnum _$gServiceStatusEnumHORS_LIGNE =
    const GServiceStatusEnum._('HORS_LIGNE');
const GServiceStatusEnum _$gServiceStatusEnumDEREFERENCEE =
    const GServiceStatusEnum._('DEREFERENCEE');
const GServiceStatusEnum _$gServiceStatusEnumPRESERIE =
    const GServiceStatusEnum._('PRESERIE');
const GServiceStatusEnum _$gServiceStatusEnumSUSPENDUE =
    const GServiceStatusEnum._('SUSPENDUE');
const GServiceStatusEnum _$gServiceStatusEnumgUnknownEnumValue =
    const GServiceStatusEnum._('gUnknownEnumValue');

GServiceStatusEnum _$gServiceStatusEnumValueOf(String name) {
  switch (name) {
    case 'EN_LIGNE':
      return _$gServiceStatusEnumEN_LIGNE;
    case 'HORS_LIGNE':
      return _$gServiceStatusEnumHORS_LIGNE;
    case 'DEREFERENCEE':
      return _$gServiceStatusEnumDEREFERENCEE;
    case 'PRESERIE':
      return _$gServiceStatusEnumPRESERIE;
    case 'SUSPENDUE':
      return _$gServiceStatusEnumSUSPENDUE;
    case 'gUnknownEnumValue':
      return _$gServiceStatusEnumgUnknownEnumValue;
    default:
      return _$gServiceStatusEnumgUnknownEnumValue;
  }
}

final BuiltSet<GServiceStatusEnum> _$gServiceStatusEnumValues =
    new BuiltSet<GServiceStatusEnum>(const <GServiceStatusEnum>[
  _$gServiceStatusEnumEN_LIGNE,
  _$gServiceStatusEnumHORS_LIGNE,
  _$gServiceStatusEnumDEREFERENCEE,
  _$gServiceStatusEnumPRESERIE,
  _$gServiceStatusEnumSUSPENDUE,
  _$gServiceStatusEnumgUnknownEnumValue,
]);

const GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumSENSORY =
    const GDisabilitiesTypesEnum._('SENSORY');
const GDisabilitiesTypesEnum
    _$gDisabilitiesTypesEnumNEURO_DEVELOPMENTAL_DISORDER =
    const GDisabilitiesTypesEnum._('NEURO_DEVELOPMENTAL_DISORDER');
const GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumPSYCHIC =
    const GDisabilitiesTypesEnum._('PSYCHIC');
const GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumENGINE =
    const GDisabilitiesTypesEnum._('ENGINE');
const GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumPOLY_DISABILITY =
    const GDisabilitiesTypesEnum._('POLY_DISABILITY');
const GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumDISABLING_DISEASES =
    const GDisabilitiesTypesEnum._('DISABLING_DISEASES');
const GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumOTHERS =
    const GDisabilitiesTypesEnum._('OTHERS');
const GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumgUnknownEnumValue =
    const GDisabilitiesTypesEnum._('gUnknownEnumValue');

GDisabilitiesTypesEnum _$gDisabilitiesTypesEnumValueOf(String name) {
  switch (name) {
    case 'SENSORY':
      return _$gDisabilitiesTypesEnumSENSORY;
    case 'NEURO_DEVELOPMENTAL_DISORDER':
      return _$gDisabilitiesTypesEnumNEURO_DEVELOPMENTAL_DISORDER;
    case 'PSYCHIC':
      return _$gDisabilitiesTypesEnumPSYCHIC;
    case 'ENGINE':
      return _$gDisabilitiesTypesEnumENGINE;
    case 'POLY_DISABILITY':
      return _$gDisabilitiesTypesEnumPOLY_DISABILITY;
    case 'DISABLING_DISEASES':
      return _$gDisabilitiesTypesEnumDISABLING_DISEASES;
    case 'OTHERS':
      return _$gDisabilitiesTypesEnumOTHERS;
    case 'gUnknownEnumValue':
      return _$gDisabilitiesTypesEnumgUnknownEnumValue;
    default:
      return _$gDisabilitiesTypesEnumgUnknownEnumValue;
  }
}

final BuiltSet<GDisabilitiesTypesEnum> _$gDisabilitiesTypesEnumValues =
    new BuiltSet<GDisabilitiesTypesEnum>(const <GDisabilitiesTypesEnum>[
  _$gDisabilitiesTypesEnumSENSORY,
  _$gDisabilitiesTypesEnumNEURO_DEVELOPMENTAL_DISORDER,
  _$gDisabilitiesTypesEnumPSYCHIC,
  _$gDisabilitiesTypesEnumENGINE,
  _$gDisabilitiesTypesEnumPOLY_DISABILITY,
  _$gDisabilitiesTypesEnumDISABLING_DISEASES,
  _$gDisabilitiesTypesEnumOTHERS,
  _$gDisabilitiesTypesEnumgUnknownEnumValue,
]);

const GDisabilityRateEnum _$gDisabilityRateEnumLESS_THAN_50 =
    const GDisabilityRateEnum._('LESS_THAN_50');
const GDisabilityRateEnum _$gDisabilityRateEnumBETWEEN_50_AND_79 =
    const GDisabilityRateEnum._('BETWEEN_50_AND_79');
const GDisabilityRateEnum _$gDisabilityRateEnumBIGGER_THAN_80_OR_EQUAL =
    const GDisabilityRateEnum._('BIGGER_THAN_80_OR_EQUAL');
const GDisabilityRateEnum _$gDisabilityRateEnumUNKNOWN =
    const GDisabilityRateEnum._('UNKNOWN');
const GDisabilityRateEnum _$gDisabilityRateEnumgUnknownEnumValue =
    const GDisabilityRateEnum._('gUnknownEnumValue');

GDisabilityRateEnum _$gDisabilityRateEnumValueOf(String name) {
  switch (name) {
    case 'LESS_THAN_50':
      return _$gDisabilityRateEnumLESS_THAN_50;
    case 'BETWEEN_50_AND_79':
      return _$gDisabilityRateEnumBETWEEN_50_AND_79;
    case 'BIGGER_THAN_80_OR_EQUAL':
      return _$gDisabilityRateEnumBIGGER_THAN_80_OR_EQUAL;
    case 'UNKNOWN':
      return _$gDisabilityRateEnumUNKNOWN;
    case 'gUnknownEnumValue':
      return _$gDisabilityRateEnumgUnknownEnumValue;
    default:
      return _$gDisabilityRateEnumgUnknownEnumValue;
  }
}

final BuiltSet<GDisabilityRateEnum> _$gDisabilityRateEnumValues =
    new BuiltSet<GDisabilityRateEnum>(const <GDisabilityRateEnum>[
  _$gDisabilityRateEnumLESS_THAN_50,
  _$gDisabilityRateEnumBETWEEN_50_AND_79,
  _$gDisabilityRateEnumBIGGER_THAN_80_OR_EQUAL,
  _$gDisabilityRateEnumUNKNOWN,
  _$gDisabilityRateEnumgUnknownEnumValue,
]);

const GHumanHelpEnum _$gHumanHelpEnumYES = const GHumanHelpEnum._('YES');
const GHumanHelpEnum _$gHumanHelpEnumNO = const GHumanHelpEnum._('NO');
const GHumanHelpEnum _$gHumanHelpEnumNONE = const GHumanHelpEnum._('NONE');
const GHumanHelpEnum _$gHumanHelpEnumgUnknownEnumValue =
    const GHumanHelpEnum._('gUnknownEnumValue');

GHumanHelpEnum _$gHumanHelpEnumValueOf(String name) {
  switch (name) {
    case 'YES':
      return _$gHumanHelpEnumYES;
    case 'NO':
      return _$gHumanHelpEnumNO;
    case 'NONE':
      return _$gHumanHelpEnumNONE;
    case 'gUnknownEnumValue':
      return _$gHumanHelpEnumgUnknownEnumValue;
    default:
      return _$gHumanHelpEnumgUnknownEnumValue;
  }
}

final BuiltSet<GHumanHelpEnum> _$gHumanHelpEnumValues =
    new BuiltSet<GHumanHelpEnum>(const <GHumanHelpEnum>[
  _$gHumanHelpEnumYES,
  _$gHumanHelpEnumNO,
  _$gHumanHelpEnumNONE,
  _$gHumanHelpEnumgUnknownEnumValue,
]);

const GFamilyRelationshipEnum _$gFamilyRelationshipEnumMOTHER =
    const GFamilyRelationshipEnum._('MOTHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumFATHER =
    const GFamilyRelationshipEnum._('FATHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumGRANDMOTHER =
    const GFamilyRelationshipEnum._('GRANDMOTHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumGRANDFATHER =
    const GFamilyRelationshipEnum._('GRANDFATHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumSISTER =
    const GFamilyRelationshipEnum._('SISTER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumBROTHER =
    const GFamilyRelationshipEnum._('BROTHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumGREAT_GRANDMOTHER =
    const GFamilyRelationshipEnum._('GREAT_GRANDMOTHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumGREAT_GRANDFATHER =
    const GFamilyRelationshipEnum._('GREAT_GRANDFATHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumAUNT =
    const GFamilyRelationshipEnum._('AUNT');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumUNCLE =
    const GFamilyRelationshipEnum._('UNCLE');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumOTHER =
    const GFamilyRelationshipEnum._('OTHER');
const GFamilyRelationshipEnum _$gFamilyRelationshipEnumgUnknownEnumValue =
    const GFamilyRelationshipEnum._('gUnknownEnumValue');

GFamilyRelationshipEnum _$gFamilyRelationshipEnumValueOf(String name) {
  switch (name) {
    case 'MOTHER':
      return _$gFamilyRelationshipEnumMOTHER;
    case 'FATHER':
      return _$gFamilyRelationshipEnumFATHER;
    case 'GRANDMOTHER':
      return _$gFamilyRelationshipEnumGRANDMOTHER;
    case 'GRANDFATHER':
      return _$gFamilyRelationshipEnumGRANDFATHER;
    case 'SISTER':
      return _$gFamilyRelationshipEnumSISTER;
    case 'BROTHER':
      return _$gFamilyRelationshipEnumBROTHER;
    case 'GREAT_GRANDMOTHER':
      return _$gFamilyRelationshipEnumGREAT_GRANDMOTHER;
    case 'GREAT_GRANDFATHER':
      return _$gFamilyRelationshipEnumGREAT_GRANDFATHER;
    case 'AUNT':
      return _$gFamilyRelationshipEnumAUNT;
    case 'UNCLE':
      return _$gFamilyRelationshipEnumUNCLE;
    case 'OTHER':
      return _$gFamilyRelationshipEnumOTHER;
    case 'gUnknownEnumValue':
      return _$gFamilyRelationshipEnumgUnknownEnumValue;
    default:
      return _$gFamilyRelationshipEnumgUnknownEnumValue;
  }
}

final BuiltSet<GFamilyRelationshipEnum> _$gFamilyRelationshipEnumValues =
    new BuiltSet<GFamilyRelationshipEnum>(const <GFamilyRelationshipEnum>[
  _$gFamilyRelationshipEnumMOTHER,
  _$gFamilyRelationshipEnumFATHER,
  _$gFamilyRelationshipEnumGRANDMOTHER,
  _$gFamilyRelationshipEnumGRANDFATHER,
  _$gFamilyRelationshipEnumSISTER,
  _$gFamilyRelationshipEnumBROTHER,
  _$gFamilyRelationshipEnumGREAT_GRANDMOTHER,
  _$gFamilyRelationshipEnumGREAT_GRANDFATHER,
  _$gFamilyRelationshipEnumAUNT,
  _$gFamilyRelationshipEnumUNCLE,
  _$gFamilyRelationshipEnumOTHER,
  _$gFamilyRelationshipEnumgUnknownEnumValue,
]);

const GDiseaseEpisodeType _$gDiseaseEpisodeTypeSTART =
    const GDiseaseEpisodeType._('START');
const GDiseaseEpisodeType _$gDiseaseEpisodeTypeEND =
    const GDiseaseEpisodeType._('END');
const GDiseaseEpisodeType _$gDiseaseEpisodeTypeFULL =
    const GDiseaseEpisodeType._('FULL');
const GDiseaseEpisodeType _$gDiseaseEpisodeTypegUnknownEnumValue =
    const GDiseaseEpisodeType._('gUnknownEnumValue');

GDiseaseEpisodeType _$gDiseaseEpisodeTypeValueOf(String name) {
  switch (name) {
    case 'START':
      return _$gDiseaseEpisodeTypeSTART;
    case 'END':
      return _$gDiseaseEpisodeTypeEND;
    case 'FULL':
      return _$gDiseaseEpisodeTypeFULL;
    case 'gUnknownEnumValue':
      return _$gDiseaseEpisodeTypegUnknownEnumValue;
    default:
      return _$gDiseaseEpisodeTypegUnknownEnumValue;
  }
}

final BuiltSet<GDiseaseEpisodeType> _$gDiseaseEpisodeTypeValues =
    new BuiltSet<GDiseaseEpisodeType>(const <GDiseaseEpisodeType>[
  _$gDiseaseEpisodeTypeSTART,
  _$gDiseaseEpisodeTypeEND,
  _$gDiseaseEpisodeTypeFULL,
  _$gDiseaseEpisodeTypegUnknownEnumValue,
]);

const GVaccineTypeOfAdministrationEnum
    _$gVaccineTypeOfAdministrationEnumINITIMMUNIZ =
    const GVaccineTypeOfAdministrationEnum._('INITIMMUNIZ');
const GVaccineTypeOfAdministrationEnum
    _$gVaccineTypeOfAdministrationEnumBOOSTER =
    const GVaccineTypeOfAdministrationEnum._('BOOSTER');
const GVaccineTypeOfAdministrationEnum
    _$gVaccineTypeOfAdministrationEnumIMMUNIZ =
    const GVaccineTypeOfAdministrationEnum._('IMMUNIZ');
const GVaccineTypeOfAdministrationEnum
    _$gVaccineTypeOfAdministrationEnumgUnknownEnumValue =
    const GVaccineTypeOfAdministrationEnum._('gUnknownEnumValue');

GVaccineTypeOfAdministrationEnum _$gVaccineTypeOfAdministrationEnumValueOf(
    String name) {
  switch (name) {
    case 'INITIMMUNIZ':
      return _$gVaccineTypeOfAdministrationEnumINITIMMUNIZ;
    case 'BOOSTER':
      return _$gVaccineTypeOfAdministrationEnumBOOSTER;
    case 'IMMUNIZ':
      return _$gVaccineTypeOfAdministrationEnumIMMUNIZ;
    case 'gUnknownEnumValue':
      return _$gVaccineTypeOfAdministrationEnumgUnknownEnumValue;
    default:
      return _$gVaccineTypeOfAdministrationEnumgUnknownEnumValue;
  }
}

final BuiltSet<GVaccineTypeOfAdministrationEnum>
    _$gVaccineTypeOfAdministrationEnumValues = new BuiltSet<
        GVaccineTypeOfAdministrationEnum>(const <GVaccineTypeOfAdministrationEnum>[
  _$gVaccineTypeOfAdministrationEnumINITIMMUNIZ,
  _$gVaccineTypeOfAdministrationEnumBOOSTER,
  _$gVaccineTypeOfAdministrationEnumIMMUNIZ,
  _$gVaccineTypeOfAdministrationEnumgUnknownEnumValue,
]);

const GMeasureCode _$gMeasureCodeWEIGHT = const GMeasureCode._('WEIGHT');
const GMeasureCode _$gMeasureCodeHEIGHT = const GMeasureCode._('HEIGHT');
const GMeasureCode _$gMeasureCodeWAIST_CIRCUMFERENCE =
    const GMeasureCode._('WAIST_CIRCUMFERENCE');
const GMeasureCode _$gMeasureCodeBODY_TEMPERATURE =
    const GMeasureCode._('BODY_TEMPERATURE');
const GMeasureCode _$gMeasureCodeGLUCOSE = const GMeasureCode._('GLUCOSE');
const GMeasureCode _$gMeasureCodeSYSTOLIC_BLOOD_PRESSURE =
    const GMeasureCode._('SYSTOLIC_BLOOD_PRESSURE');
const GMeasureCode _$gMeasureCodeDIASTOLIC_BLOOD_PRESSURE =
    const GMeasureCode._('DIASTOLIC_BLOOD_PRESSURE');
const GMeasureCode _$gMeasureCodeBLOOD_PRESSURE =
    const GMeasureCode._('BLOOD_PRESSURE');
const GMeasureCode _$gMeasureCodeBODY_MASS_INDEX =
    const GMeasureCode._('BODY_MASS_INDEX');
const GMeasureCode _$gMeasureCodePAIN_SEVERITY =
    const GMeasureCode._('PAIN_SEVERITY');
const GMeasureCode _$gMeasureCodeHEART_RATE =
    const GMeasureCode._('HEART_RATE');
const GMeasureCode _$gMeasureCodeHEAD_CIRCUMFERENCE =
    const GMeasureCode._('HEAD_CIRCUMFERENCE');
const GMeasureCode _$gMeasureCodeSTEPS_BY_DAY =
    const GMeasureCode._('STEPS_BY_DAY');
const GMeasureCode _$gMeasureCodeINTERSTITIAL_GLUCOSE =
    const GMeasureCode._('INTERSTITIAL_GLUCOSE');
const GMeasureCode _$gMeasureCodeGLYCATED_HEMOGLOBIN =
    const GMeasureCode._('GLYCATED_HEMOGLOBIN');
const GMeasureCode _$gMeasureCodeHEMOGLOBIN_GLYCATION_INDEX =
    const GMeasureCode._('HEMOGLOBIN_GLYCATION_INDEX');
const GMeasureCode _$gMeasureCodegUnknownEnumValue =
    const GMeasureCode._('gUnknownEnumValue');

GMeasureCode _$gMeasureCodeValueOf(String name) {
  switch (name) {
    case 'WEIGHT':
      return _$gMeasureCodeWEIGHT;
    case 'HEIGHT':
      return _$gMeasureCodeHEIGHT;
    case 'WAIST_CIRCUMFERENCE':
      return _$gMeasureCodeWAIST_CIRCUMFERENCE;
    case 'BODY_TEMPERATURE':
      return _$gMeasureCodeBODY_TEMPERATURE;
    case 'GLUCOSE':
      return _$gMeasureCodeGLUCOSE;
    case 'SYSTOLIC_BLOOD_PRESSURE':
      return _$gMeasureCodeSYSTOLIC_BLOOD_PRESSURE;
    case 'DIASTOLIC_BLOOD_PRESSURE':
      return _$gMeasureCodeDIASTOLIC_BLOOD_PRESSURE;
    case 'BLOOD_PRESSURE':
      return _$gMeasureCodeBLOOD_PRESSURE;
    case 'BODY_MASS_INDEX':
      return _$gMeasureCodeBODY_MASS_INDEX;
    case 'PAIN_SEVERITY':
      return _$gMeasureCodePAIN_SEVERITY;
    case 'HEART_RATE':
      return _$gMeasureCodeHEART_RATE;
    case 'HEAD_CIRCUMFERENCE':
      return _$gMeasureCodeHEAD_CIRCUMFERENCE;
    case 'STEPS_BY_DAY':
      return _$gMeasureCodeSTEPS_BY_DAY;
    case 'INTERSTITIAL_GLUCOSE':
      return _$gMeasureCodeINTERSTITIAL_GLUCOSE;
    case 'GLYCATED_HEMOGLOBIN':
      return _$gMeasureCodeGLYCATED_HEMOGLOBIN;
    case 'HEMOGLOBIN_GLYCATION_INDEX':
      return _$gMeasureCodeHEMOGLOBIN_GLYCATION_INDEX;
    case 'gUnknownEnumValue':
      return _$gMeasureCodegUnknownEnumValue;
    default:
      return _$gMeasureCodegUnknownEnumValue;
  }
}

final BuiltSet<GMeasureCode> _$gMeasureCodeValues =
    new BuiltSet<GMeasureCode>(const <GMeasureCode>[
  _$gMeasureCodeWEIGHT,
  _$gMeasureCodeHEIGHT,
  _$gMeasureCodeWAIST_CIRCUMFERENCE,
  _$gMeasureCodeBODY_TEMPERATURE,
  _$gMeasureCodeGLUCOSE,
  _$gMeasureCodeSYSTOLIC_BLOOD_PRESSURE,
  _$gMeasureCodeDIASTOLIC_BLOOD_PRESSURE,
  _$gMeasureCodeBLOOD_PRESSURE,
  _$gMeasureCodeBODY_MASS_INDEX,
  _$gMeasureCodePAIN_SEVERITY,
  _$gMeasureCodeHEART_RATE,
  _$gMeasureCodeHEAD_CIRCUMFERENCE,
  _$gMeasureCodeSTEPS_BY_DAY,
  _$gMeasureCodeINTERSTITIAL_GLUCOSE,
  _$gMeasureCodeGLYCATED_HEMOGLOBIN,
  _$gMeasureCodeHEMOGLOBIN_GLYCATION_INDEX,
  _$gMeasureCodegUnknownEnumValue,
]);

const GMeasureCategory _$gMeasureCategoryBMI16 =
    const GMeasureCategory._('BMI16');
const GMeasureCategory _$gMeasureCategoryBMI17 =
    const GMeasureCategory._('BMI17');
const GMeasureCategory _$gMeasureCategoryBMI18_5 =
    const GMeasureCategory._('BMI18_5');
const GMeasureCategory _$gMeasureCategoryBMI23 =
    const GMeasureCategory._('BMI23');
const GMeasureCategory _$gMeasureCategoryBMI25 =
    const GMeasureCategory._('BMI25');
const GMeasureCategory _$gMeasureCategoryBMI27 =
    const GMeasureCategory._('BMI27');
const GMeasureCategory _$gMeasureCategoryBMI30 =
    const GMeasureCategory._('BMI30');
const GMeasureCategory _$gMeasureCategoryBMI35 =
    const GMeasureCategory._('BMI35');
const GMeasureCategory _$gMeasureCategorySDMED =
    const GMeasureCategory._('SDMED');
const GMeasureCategory _$gMeasureCategorySDNEG1 =
    const GMeasureCategory._('SDNEG1');
const GMeasureCategory _$gMeasureCategorySDNEG2 =
    const GMeasureCategory._('SDNEG2');
const GMeasureCategory _$gMeasureCategorySDNEG3 =
    const GMeasureCategory._('SDNEG3');
const GMeasureCategory _$gMeasureCategorySDPOS1 =
    const GMeasureCategory._('SDPOS1');
const GMeasureCategory _$gMeasureCategorySDPOS2 =
    const GMeasureCategory._('SDPOS2');
const GMeasureCategory _$gMeasureCategorySDPOS3 =
    const GMeasureCategory._('SDPOS3');
const GMeasureCategory _$gMeasureCategoryC1 = const GMeasureCategory._('C1');
const GMeasureCategory _$gMeasureCategoryC3 = const GMeasureCategory._('C3');
const GMeasureCategory _$gMeasureCategoryC10 = const GMeasureCategory._('C10');
const GMeasureCategory _$gMeasureCategoryC25 = const GMeasureCategory._('C25');
const GMeasureCategory _$gMeasureCategoryC50 = const GMeasureCategory._('C50');
const GMeasureCategory _$gMeasureCategoryC75 = const GMeasureCategory._('C75');
const GMeasureCategory _$gMeasureCategoryC90 = const GMeasureCategory._('C90');
const GMeasureCategory _$gMeasureCategoryC97 = const GMeasureCategory._('C97');
const GMeasureCategory _$gMeasureCategoryC99 = const GMeasureCategory._('C99');
const GMeasureCategory _$gMeasureCategorygUnknownEnumValue =
    const GMeasureCategory._('gUnknownEnumValue');

GMeasureCategory _$gMeasureCategoryValueOf(String name) {
  switch (name) {
    case 'BMI16':
      return _$gMeasureCategoryBMI16;
    case 'BMI17':
      return _$gMeasureCategoryBMI17;
    case 'BMI18_5':
      return _$gMeasureCategoryBMI18_5;
    case 'BMI23':
      return _$gMeasureCategoryBMI23;
    case 'BMI25':
      return _$gMeasureCategoryBMI25;
    case 'BMI27':
      return _$gMeasureCategoryBMI27;
    case 'BMI30':
      return _$gMeasureCategoryBMI30;
    case 'BMI35':
      return _$gMeasureCategoryBMI35;
    case 'SDMED':
      return _$gMeasureCategorySDMED;
    case 'SDNEG1':
      return _$gMeasureCategorySDNEG1;
    case 'SDNEG2':
      return _$gMeasureCategorySDNEG2;
    case 'SDNEG3':
      return _$gMeasureCategorySDNEG3;
    case 'SDPOS1':
      return _$gMeasureCategorySDPOS1;
    case 'SDPOS2':
      return _$gMeasureCategorySDPOS2;
    case 'SDPOS3':
      return _$gMeasureCategorySDPOS3;
    case 'C1':
      return _$gMeasureCategoryC1;
    case 'C3':
      return _$gMeasureCategoryC3;
    case 'C10':
      return _$gMeasureCategoryC10;
    case 'C25':
      return _$gMeasureCategoryC25;
    case 'C50':
      return _$gMeasureCategoryC50;
    case 'C75':
      return _$gMeasureCategoryC75;
    case 'C90':
      return _$gMeasureCategoryC90;
    case 'C97':
      return _$gMeasureCategoryC97;
    case 'C99':
      return _$gMeasureCategoryC99;
    case 'gUnknownEnumValue':
      return _$gMeasureCategorygUnknownEnumValue;
    default:
      return _$gMeasureCategorygUnknownEnumValue;
  }
}

final BuiltSet<GMeasureCategory> _$gMeasureCategoryValues =
    new BuiltSet<GMeasureCategory>(const <GMeasureCategory>[
  _$gMeasureCategoryBMI16,
  _$gMeasureCategoryBMI17,
  _$gMeasureCategoryBMI18_5,
  _$gMeasureCategoryBMI23,
  _$gMeasureCategoryBMI25,
  _$gMeasureCategoryBMI27,
  _$gMeasureCategoryBMI30,
  _$gMeasureCategoryBMI35,
  _$gMeasureCategorySDMED,
  _$gMeasureCategorySDNEG1,
  _$gMeasureCategorySDNEG2,
  _$gMeasureCategorySDNEG3,
  _$gMeasureCategorySDPOS1,
  _$gMeasureCategorySDPOS2,
  _$gMeasureCategorySDPOS3,
  _$gMeasureCategoryC1,
  _$gMeasureCategoryC3,
  _$gMeasureCategoryC10,
  _$gMeasureCategoryC25,
  _$gMeasureCategoryC50,
  _$gMeasureCategoryC75,
  _$gMeasureCategoryC90,
  _$gMeasureCategoryC97,
  _$gMeasureCategoryC99,
  _$gMeasureCategorygUnknownEnumValue,
]);

const GMeasureGender _$gMeasureGenderMALE = const GMeasureGender._('MALE');
const GMeasureGender _$gMeasureGenderFEMALE = const GMeasureGender._('FEMALE');
const GMeasureGender _$gMeasureGendergUnknownEnumValue =
    const GMeasureGender._('gUnknownEnumValue');

GMeasureGender _$gMeasureGenderValueOf(String name) {
  switch (name) {
    case 'MALE':
      return _$gMeasureGenderMALE;
    case 'FEMALE':
      return _$gMeasureGenderFEMALE;
    case 'gUnknownEnumValue':
      return _$gMeasureGendergUnknownEnumValue;
    default:
      return _$gMeasureGendergUnknownEnumValue;
  }
}

final BuiltSet<GMeasureGender> _$gMeasureGenderValues =
    new BuiltSet<GMeasureGender>(const <GMeasureGender>[
  _$gMeasureGenderMALE,
  _$gMeasureGenderFEMALE,
  _$gMeasureGendergUnknownEnumValue,
]);

const GAuthorType _$gAuthorTypePATIENT = const GAuthorType._('PATIENT');
const GAuthorType _$gAuthorTypeEDITOR_SOLUTION =
    const GAuthorType._('EDITOR_SOLUTION');
const GAuthorType _$gAuthorTypegUnknownEnumValue =
    const GAuthorType._('gUnknownEnumValue');

GAuthorType _$gAuthorTypeValueOf(String name) {
  switch (name) {
    case 'PATIENT':
      return _$gAuthorTypePATIENT;
    case 'EDITOR_SOLUTION':
      return _$gAuthorTypeEDITOR_SOLUTION;
    case 'gUnknownEnumValue':
      return _$gAuthorTypegUnknownEnumValue;
    default:
      return _$gAuthorTypegUnknownEnumValue;
  }
}

final BuiltSet<GAuthorType> _$gAuthorTypeValues =
    new BuiltSet<GAuthorType>(const <GAuthorType>[
  _$gAuthorTypePATIENT,
  _$gAuthorTypeEDITOR_SOLUTION,
  _$gAuthorTypegUnknownEnumValue,
]);

const GLifestyleItemDisplayEnum _$gLifestyleItemDisplayEnumRADIO =
    const GLifestyleItemDisplayEnum._('RADIO');
const GLifestyleItemDisplayEnum _$gLifestyleItemDisplayEnumTEXT =
    const GLifestyleItemDisplayEnum._('TEXT');
const GLifestyleItemDisplayEnum _$gLifestyleItemDisplayEnumgUnknownEnumValue =
    const GLifestyleItemDisplayEnum._('gUnknownEnumValue');

GLifestyleItemDisplayEnum _$gLifestyleItemDisplayEnumValueOf(String name) {
  switch (name) {
    case 'RADIO':
      return _$gLifestyleItemDisplayEnumRADIO;
    case 'TEXT':
      return _$gLifestyleItemDisplayEnumTEXT;
    case 'gUnknownEnumValue':
      return _$gLifestyleItemDisplayEnumgUnknownEnumValue;
    default:
      return _$gLifestyleItemDisplayEnumgUnknownEnumValue;
  }
}

final BuiltSet<GLifestyleItemDisplayEnum> _$gLifestyleItemDisplayEnumValues =
    new BuiltSet<GLifestyleItemDisplayEnum>(const <GLifestyleItemDisplayEnum>[
  _$gLifestyleItemDisplayEnumRADIO,
  _$gLifestyleItemDisplayEnumTEXT,
  _$gLifestyleItemDisplayEnumgUnknownEnumValue,
]);

const GLifestyleSectionEnum _$gLifestyleSectionEnumFOOD =
    const GLifestyleSectionEnum._('FOOD');
const GLifestyleSectionEnum _$gLifestyleSectionEnumPHYSICAL_ACTIVITY =
    const GLifestyleSectionEnum._('PHYSICAL_ACTIVITY');
const GLifestyleSectionEnum _$gLifestyleSectionEnumSLEEP =
    const GLifestyleSectionEnum._('SLEEP');
const GLifestyleSectionEnum _$gLifestyleSectionEnumSCREEN =
    const GLifestyleSectionEnum._('SCREEN');
const GLifestyleSectionEnum _$gLifestyleSectionEnumALCOHOL =
    const GLifestyleSectionEnum._('ALCOHOL');
const GLifestyleSectionEnum _$gLifestyleSectionEnumTOBACCO =
    const GLifestyleSectionEnum._('TOBACCO');
const GLifestyleSectionEnum _$gLifestyleSectionEnumgUnknownEnumValue =
    const GLifestyleSectionEnum._('gUnknownEnumValue');

GLifestyleSectionEnum _$gLifestyleSectionEnumValueOf(String name) {
  switch (name) {
    case 'FOOD':
      return _$gLifestyleSectionEnumFOOD;
    case 'PHYSICAL_ACTIVITY':
      return _$gLifestyleSectionEnumPHYSICAL_ACTIVITY;
    case 'SLEEP':
      return _$gLifestyleSectionEnumSLEEP;
    case 'SCREEN':
      return _$gLifestyleSectionEnumSCREEN;
    case 'ALCOHOL':
      return _$gLifestyleSectionEnumALCOHOL;
    case 'TOBACCO':
      return _$gLifestyleSectionEnumTOBACCO;
    case 'gUnknownEnumValue':
      return _$gLifestyleSectionEnumgUnknownEnumValue;
    default:
      return _$gLifestyleSectionEnumgUnknownEnumValue;
  }
}

final BuiltSet<GLifestyleSectionEnum> _$gLifestyleSectionEnumValues =
    new BuiltSet<GLifestyleSectionEnum>(const <GLifestyleSectionEnum>[
  _$gLifestyleSectionEnumFOOD,
  _$gLifestyleSectionEnumPHYSICAL_ACTIVITY,
  _$gLifestyleSectionEnumSLEEP,
  _$gLifestyleSectionEnumSCREEN,
  _$gLifestyleSectionEnumALCOHOL,
  _$gLifestyleSectionEnumTOBACCO,
  _$gLifestyleSectionEnumgUnknownEnumValue,
]);

const GLifestyleCreationTypeEnum _$gLifestyleCreationTypeEnumPATIENT =
    const GLifestyleCreationTypeEnum._('PATIENT');
const GLifestyleCreationTypeEnum _$gLifestyleCreationTypeEnumQUIZ =
    const GLifestyleCreationTypeEnum._('QUIZ');
const GLifestyleCreationTypeEnum _$gLifestyleCreationTypeEnumMIGRATION =
    const GLifestyleCreationTypeEnum._('MIGRATION');
const GLifestyleCreationTypeEnum _$gLifestyleCreationTypeEnumgUnknownEnumValue =
    const GLifestyleCreationTypeEnum._('gUnknownEnumValue');

GLifestyleCreationTypeEnum _$gLifestyleCreationTypeEnumValueOf(String name) {
  switch (name) {
    case 'PATIENT':
      return _$gLifestyleCreationTypeEnumPATIENT;
    case 'QUIZ':
      return _$gLifestyleCreationTypeEnumQUIZ;
    case 'MIGRATION':
      return _$gLifestyleCreationTypeEnumMIGRATION;
    case 'gUnknownEnumValue':
      return _$gLifestyleCreationTypeEnumgUnknownEnumValue;
    default:
      return _$gLifestyleCreationTypeEnumgUnknownEnumValue;
  }
}

final BuiltSet<GLifestyleCreationTypeEnum> _$gLifestyleCreationTypeEnumValues =
    new BuiltSet<GLifestyleCreationTypeEnum>(const <GLifestyleCreationTypeEnum>[
  _$gLifestyleCreationTypeEnumPATIENT,
  _$gLifestyleCreationTypeEnumQUIZ,
  _$gLifestyleCreationTypeEnumMIGRATION,
  _$gLifestyleCreationTypeEnumgUnknownEnumValue,
]);

const GProfileType _$gProfileTypeOuvrantDroit =
    const GProfileType._('OuvrantDroit');
const GProfileType _$gProfileTypeAyantDroit =
    const GProfileType._('AyantDroit');
const GProfileType _$gProfileTypegUnknownEnumValue =
    const GProfileType._('gUnknownEnumValue');

GProfileType _$gProfileTypeValueOf(String name) {
  switch (name) {
    case 'OuvrantDroit':
      return _$gProfileTypeOuvrantDroit;
    case 'AyantDroit':
      return _$gProfileTypeAyantDroit;
    case 'gUnknownEnumValue':
      return _$gProfileTypegUnknownEnumValue;
    default:
      return _$gProfileTypegUnknownEnumValue;
  }
}

final BuiltSet<GProfileType> _$gProfileTypeValues =
    new BuiltSet<GProfileType>(const <GProfileType>[
  _$gProfileTypeOuvrantDroit,
  _$gProfileTypeAyantDroit,
  _$gProfileTypegUnknownEnumValue,
]);

const GActorType _$gActorTypePS = const GActorType._('PS');
const GActorType _$gActorTypeES = const GActorType._('ES');
const GActorType _$gActorTypegUnknownEnumValue =
    const GActorType._('gUnknownEnumValue');

GActorType _$gActorTypeValueOf(String name) {
  switch (name) {
    case 'PS':
      return _$gActorTypePS;
    case 'ES':
      return _$gActorTypeES;
    case 'gUnknownEnumValue':
      return _$gActorTypegUnknownEnumValue;
    default:
      return _$gActorTypegUnknownEnumValue;
  }
}

final BuiltSet<GActorType> _$gActorTypeValues =
    new BuiltSet<GActorType>(const <GActorType>[
  _$gActorTypePS,
  _$gActorTypeES,
  _$gActorTypegUnknownEnumValue,
]);

const GResourceType _$gResourceTypeDOCUMENT = const GResourceType._('DOCUMENT');
const GResourceType _$gResourceTypeMESSAGERIE =
    const GResourceType._('MESSAGERIE');
const GResourceType _$gResourceTypePML_CVA = const GResourceType._('PML_CVA');
const GResourceType _$gResourceTypePML_DA = const GResourceType._('PML_DA');
const GResourceType _$gResourceTypePML_VDP = const GResourceType._('PML_VDP');
const GResourceType _$gResourceTypeAGENDA = const GResourceType._('AGENDA');
const GResourceType _$gResourceTypeCOPIE_DOC_AJOUT_GLYCEMIE =
    const GResourceType._('COPIE_DOC_AJOUT_GLYCEMIE');
const GResourceType _$gResourceTypeRAPPEL_RDV_PREV =
    const GResourceType._('RAPPEL_RDV_PREV');
const GResourceType _$gResourceTypePML_MESURE =
    const GResourceType._('PML_MESURE');
const GResourceType _$gResourceTypegUnknownEnumValue =
    const GResourceType._('gUnknownEnumValue');

GResourceType _$gResourceTypeValueOf(String name) {
  switch (name) {
    case 'DOCUMENT':
      return _$gResourceTypeDOCUMENT;
    case 'MESSAGERIE':
      return _$gResourceTypeMESSAGERIE;
    case 'PML_CVA':
      return _$gResourceTypePML_CVA;
    case 'PML_DA':
      return _$gResourceTypePML_DA;
    case 'PML_VDP':
      return _$gResourceTypePML_VDP;
    case 'AGENDA':
      return _$gResourceTypeAGENDA;
    case 'COPIE_DOC_AJOUT_GLYCEMIE':
      return _$gResourceTypeCOPIE_DOC_AJOUT_GLYCEMIE;
    case 'RAPPEL_RDV_PREV':
      return _$gResourceTypeRAPPEL_RDV_PREV;
    case 'PML_MESURE':
      return _$gResourceTypePML_MESURE;
    case 'gUnknownEnumValue':
      return _$gResourceTypegUnknownEnumValue;
    default:
      return _$gResourceTypegUnknownEnumValue;
  }
}

final BuiltSet<GResourceType> _$gResourceTypeValues =
    new BuiltSet<GResourceType>(const <GResourceType>[
  _$gResourceTypeDOCUMENT,
  _$gResourceTypeMESSAGERIE,
  _$gResourceTypePML_CVA,
  _$gResourceTypePML_DA,
  _$gResourceTypePML_VDP,
  _$gResourceTypeAGENDA,
  _$gResourceTypeCOPIE_DOC_AJOUT_GLYCEMIE,
  _$gResourceTypeRAPPEL_RDV_PREV,
  _$gResourceTypePML_MESURE,
  _$gResourceTypegUnknownEnumValue,
]);

const GGender _$gGenderMALE = const GGender._('MALE');
const GGender _$gGenderFEMALE = const GGender._('FEMALE');
const GGender _$gGenderUNKNOWN = const GGender._('UNKNOWN');
const GGender _$gGendergUnknownEnumValue = const GGender._('gUnknownEnumValue');

GGender _$gGenderValueOf(String name) {
  switch (name) {
    case 'MALE':
      return _$gGenderMALE;
    case 'FEMALE':
      return _$gGenderFEMALE;
    case 'UNKNOWN':
      return _$gGenderUNKNOWN;
    case 'gUnknownEnumValue':
      return _$gGendergUnknownEnumValue;
    default:
      return _$gGendergUnknownEnumValue;
  }
}

final BuiltSet<GGender> _$gGenderValues = new BuiltSet<GGender>(const <GGender>[
  _$gGenderMALE,
  _$gGenderFEMALE,
  _$gGenderUNKNOWN,
  _$gGendergUnknownEnumValue,
]);

const GDelegationInvitationStatus _$gDelegationInvitationStatusPENDING =
    const GDelegationInvitationStatus._('PENDING');
const GDelegationInvitationStatus _$gDelegationInvitationStatusACCEPTED =
    const GDelegationInvitationStatus._('ACCEPTED');
const GDelegationInvitationStatus _$gDelegationInvitationStatusREFUSED =
    const GDelegationInvitationStatus._('REFUSED');
const GDelegationInvitationStatus _$gDelegationInvitationStatusEXPIRED =
    const GDelegationInvitationStatus._('EXPIRED');
const GDelegationInvitationStatus
    _$gDelegationInvitationStatusgUnknownEnumValue =
    const GDelegationInvitationStatus._('gUnknownEnumValue');

GDelegationInvitationStatus _$gDelegationInvitationStatusValueOf(String name) {
  switch (name) {
    case 'PENDING':
      return _$gDelegationInvitationStatusPENDING;
    case 'ACCEPTED':
      return _$gDelegationInvitationStatusACCEPTED;
    case 'REFUSED':
      return _$gDelegationInvitationStatusREFUSED;
    case 'EXPIRED':
      return _$gDelegationInvitationStatusEXPIRED;
    case 'gUnknownEnumValue':
      return _$gDelegationInvitationStatusgUnknownEnumValue;
    default:
      return _$gDelegationInvitationStatusgUnknownEnumValue;
  }
}

final BuiltSet<GDelegationInvitationStatus>
    _$gDelegationInvitationStatusValues = new BuiltSet<
        GDelegationInvitationStatus>(const <GDelegationInvitationStatus>[
  _$gDelegationInvitationStatusPENDING,
  _$gDelegationInvitationStatusACCEPTED,
  _$gDelegationInvitationStatusREFUSED,
  _$gDelegationInvitationStatusEXPIRED,
  _$gDelegationInvitationStatusgUnknownEnumValue,
]);

const GDelegationType _$gDelegationTypeLEGAL_REPRESENTATION =
    const GDelegationType._('LEGAL_REPRESENTATION');
const GDelegationType _$gDelegationTypeCAREGIVING =
    const GDelegationType._('CAREGIVING');
const GDelegationType _$gDelegationTypeHEALTHCARE_PROFESSIONAL =
    const GDelegationType._('HEALTHCARE_PROFESSIONAL');
const GDelegationType _$gDelegationTypegUnknownEnumValue =
    const GDelegationType._('gUnknownEnumValue');

GDelegationType _$gDelegationTypeValueOf(String name) {
  switch (name) {
    case 'LEGAL_REPRESENTATION':
      return _$gDelegationTypeLEGAL_REPRESENTATION;
    case 'CAREGIVING':
      return _$gDelegationTypeCAREGIVING;
    case 'HEALTHCARE_PROFESSIONAL':
      return _$gDelegationTypeHEALTHCARE_PROFESSIONAL;
    case 'gUnknownEnumValue':
      return _$gDelegationTypegUnknownEnumValue;
    default:
      return _$gDelegationTypegUnknownEnumValue;
  }
}

final BuiltSet<GDelegationType> _$gDelegationTypeValues =
    new BuiltSet<GDelegationType>(const <GDelegationType>[
  _$gDelegationTypeLEGAL_REPRESENTATION,
  _$gDelegationTypeCAREGIVING,
  _$gDelegationTypeHEALTHCARE_PROFESSIONAL,
  _$gDelegationTypegUnknownEnumValue,
]);

const GDelegationDirection _$gDelegationDirectionINCOMING =
    const GDelegationDirection._('INCOMING');
const GDelegationDirection _$gDelegationDirectionOUTGOING =
    const GDelegationDirection._('OUTGOING');
const GDelegationDirection _$gDelegationDirectiongUnknownEnumValue =
    const GDelegationDirection._('gUnknownEnumValue');

GDelegationDirection _$gDelegationDirectionValueOf(String name) {
  switch (name) {
    case 'INCOMING':
      return _$gDelegationDirectionINCOMING;
    case 'OUTGOING':
      return _$gDelegationDirectionOUTGOING;
    case 'gUnknownEnumValue':
      return _$gDelegationDirectiongUnknownEnumValue;
    default:
      return _$gDelegationDirectiongUnknownEnumValue;
  }
}

final BuiltSet<GDelegationDirection> _$gDelegationDirectionValues =
    new BuiltSet<GDelegationDirection>(const <GDelegationDirection>[
  _$gDelegationDirectionINCOMING,
  _$gDelegationDirectionOUTGOING,
  _$gDelegationDirectiongUnknownEnumValue,
]);

const GActivityActorType _$gActivityActorTypeHEALTHCARE_PROFESSIONAL =
    const GActivityActorType._('HEALTHCARE_PROFESSIONAL');
const GActivityActorType _$gActivityActorTypeHEALTHCARE_FACILITY =
    const GActivityActorType._('HEALTHCARE_FACILITY');
const GActivityActorType _$gActivityActorTypeSUPPORT =
    const GActivityActorType._('SUPPORT');
const GActivityActorType _$gActivityActorTypePATIENT =
    const GActivityActorType._('PATIENT');
const GActivityActorType _$gActivityActorTypeSERVICE_TIERS =
    const GActivityActorType._('SERVICE_TIERS');
const GActivityActorType _$gActivityActorTypeSYSTEM =
    const GActivityActorType._('SYSTEM');
const GActivityActorType _$gActivityActorTypeENROLMENT =
    const GActivityActorType._('ENROLMENT');
const GActivityActorType _$gActivityActorTypegUnknownEnumValue =
    const GActivityActorType._('gUnknownEnumValue');

GActivityActorType _$gActivityActorTypeValueOf(String name) {
  switch (name) {
    case 'HEALTHCARE_PROFESSIONAL':
      return _$gActivityActorTypeHEALTHCARE_PROFESSIONAL;
    case 'HEALTHCARE_FACILITY':
      return _$gActivityActorTypeHEALTHCARE_FACILITY;
    case 'SUPPORT':
      return _$gActivityActorTypeSUPPORT;
    case 'PATIENT':
      return _$gActivityActorTypePATIENT;
    case 'SERVICE_TIERS':
      return _$gActivityActorTypeSERVICE_TIERS;
    case 'SYSTEM':
      return _$gActivityActorTypeSYSTEM;
    case 'ENROLMENT':
      return _$gActivityActorTypeENROLMENT;
    case 'gUnknownEnumValue':
      return _$gActivityActorTypegUnknownEnumValue;
    default:
      return _$gActivityActorTypegUnknownEnumValue;
  }
}

final BuiltSet<GActivityActorType> _$gActivityActorTypeValues =
    new BuiltSet<GActivityActorType>(const <GActivityActorType>[
  _$gActivityActorTypeHEALTHCARE_PROFESSIONAL,
  _$gActivityActorTypeHEALTHCARE_FACILITY,
  _$gActivityActorTypeSUPPORT,
  _$gActivityActorTypePATIENT,
  _$gActivityActorTypeSERVICE_TIERS,
  _$gActivityActorTypeSYSTEM,
  _$gActivityActorTypeENROLMENT,
  _$gActivityActorTypegUnknownEnumValue,
]);

const GChoiceQuestionType _$gChoiceQuestionTypeRADIO =
    const GChoiceQuestionType._('RADIO');
const GChoiceQuestionType _$gChoiceQuestionTypeDROP_DOWN =
    const GChoiceQuestionType._('DROP_DOWN');
const GChoiceQuestionType _$gChoiceQuestionTypeCHECKBOX =
    const GChoiceQuestionType._('CHECKBOX');
const GChoiceQuestionType _$gChoiceQuestionTypegUnknownEnumValue =
    const GChoiceQuestionType._('gUnknownEnumValue');

GChoiceQuestionType _$gChoiceQuestionTypeValueOf(String name) {
  switch (name) {
    case 'RADIO':
      return _$gChoiceQuestionTypeRADIO;
    case 'DROP_DOWN':
      return _$gChoiceQuestionTypeDROP_DOWN;
    case 'CHECKBOX':
      return _$gChoiceQuestionTypeCHECKBOX;
    case 'gUnknownEnumValue':
      return _$gChoiceQuestionTypegUnknownEnumValue;
    default:
      return _$gChoiceQuestionTypegUnknownEnumValue;
  }
}

final BuiltSet<GChoiceQuestionType> _$gChoiceQuestionTypeValues =
    new BuiltSet<GChoiceQuestionType>(const <GChoiceQuestionType>[
  _$gChoiceQuestionTypeRADIO,
  _$gChoiceQuestionTypeDROP_DOWN,
  _$gChoiceQuestionTypeCHECKBOX,
  _$gChoiceQuestionTypegUnknownEnumValue,
]);

const GHealthQuizCompletionStatus _$gHealthQuizCompletionStatusDRAFT =
    const GHealthQuizCompletionStatus._('DRAFT');
const GHealthQuizCompletionStatus _$gHealthQuizCompletionStatusFINAL =
    const GHealthQuizCompletionStatus._('FINAL');
const GHealthQuizCompletionStatus
    _$gHealthQuizCompletionStatusgUnknownEnumValue =
    const GHealthQuizCompletionStatus._('gUnknownEnumValue');

GHealthQuizCompletionStatus _$gHealthQuizCompletionStatusValueOf(String name) {
  switch (name) {
    case 'DRAFT':
      return _$gHealthQuizCompletionStatusDRAFT;
    case 'FINAL':
      return _$gHealthQuizCompletionStatusFINAL;
    case 'gUnknownEnumValue':
      return _$gHealthQuizCompletionStatusgUnknownEnumValue;
    default:
      return _$gHealthQuizCompletionStatusgUnknownEnumValue;
  }
}

final BuiltSet<GHealthQuizCompletionStatus>
    _$gHealthQuizCompletionStatusValues = new BuiltSet<
        GHealthQuizCompletionStatus>(const <GHealthQuizCompletionStatus>[
  _$gHealthQuizCompletionStatusDRAFT,
  _$gHealthQuizCompletionStatusFINAL,
  _$gHealthQuizCompletionStatusgUnknownEnumValue,
]);

const GRecommendationCode _$gRecommendationCodeINCITER_MES_ENFANT =
    const GRecommendationCode._('INCITER_MES_ENFANT');
const GRecommendationCode _$gRecommendationCodeDECOUVERTE_MES_ENFANT =
    const GRecommendationCode._('DECOUVERTE_MES_ENFANT');
const GRecommendationCode _$gRecommendationCodegUnknownEnumValue =
    const GRecommendationCode._('gUnknownEnumValue');

GRecommendationCode _$gRecommendationCodeValueOf(String name) {
  switch (name) {
    case 'INCITER_MES_ENFANT':
      return _$gRecommendationCodeINCITER_MES_ENFANT;
    case 'DECOUVERTE_MES_ENFANT':
      return _$gRecommendationCodeDECOUVERTE_MES_ENFANT;
    case 'gUnknownEnumValue':
      return _$gRecommendationCodegUnknownEnumValue;
    default:
      return _$gRecommendationCodegUnknownEnumValue;
  }
}

final BuiltSet<GRecommendationCode> _$gRecommendationCodeValues =
    new BuiltSet<GRecommendationCode>(const <GRecommendationCode>[
  _$gRecommendationCodeINCITER_MES_ENFANT,
  _$gRecommendationCodeDECOUVERTE_MES_ENFANT,
  _$gRecommendationCodegUnknownEnumValue,
]);

const GDurationUnitEnum _$gDurationUnitEnumDAY =
    const GDurationUnitEnum._('DAY');
const GDurationUnitEnum _$gDurationUnitEnumWEEK =
    const GDurationUnitEnum._('WEEK');
const GDurationUnitEnum _$gDurationUnitEnumMONTH =
    const GDurationUnitEnum._('MONTH');
const GDurationUnitEnum _$gDurationUnitEnumYEAR =
    const GDurationUnitEnum._('YEAR');
const GDurationUnitEnum _$gDurationUnitEnumgUnknownEnumValue =
    const GDurationUnitEnum._('gUnknownEnumValue');

GDurationUnitEnum _$gDurationUnitEnumValueOf(String name) {
  switch (name) {
    case 'DAY':
      return _$gDurationUnitEnumDAY;
    case 'WEEK':
      return _$gDurationUnitEnumWEEK;
    case 'MONTH':
      return _$gDurationUnitEnumMONTH;
    case 'YEAR':
      return _$gDurationUnitEnumYEAR;
    case 'gUnknownEnumValue':
      return _$gDurationUnitEnumgUnknownEnumValue;
    default:
      return _$gDurationUnitEnumgUnknownEnumValue;
  }
}

final BuiltSet<GDurationUnitEnum> _$gDurationUnitEnumValues =
    new BuiltSet<GDurationUnitEnum>(const <GDurationUnitEnum>[
  _$gDurationUnitEnumDAY,
  _$gDurationUnitEnumWEEK,
  _$gDurationUnitEnumMONTH,
  _$gDurationUnitEnumYEAR,
  _$gDurationUnitEnumgUnknownEnumValue,
]);

const GBloodGroupEnum _$gBloodGroupEnumAPOS = const GBloodGroupEnum._('APOS');
const GBloodGroupEnum _$gBloodGroupEnumANEG = const GBloodGroupEnum._('ANEG');
const GBloodGroupEnum _$gBloodGroupEnumABPOS = const GBloodGroupEnum._('ABPOS');
const GBloodGroupEnum _$gBloodGroupEnumABNEG = const GBloodGroupEnum._('ABNEG');
const GBloodGroupEnum _$gBloodGroupEnumBPOS = const GBloodGroupEnum._('BPOS');
const GBloodGroupEnum _$gBloodGroupEnumBNEG = const GBloodGroupEnum._('BNEG');
const GBloodGroupEnum _$gBloodGroupEnumOPOS = const GBloodGroupEnum._('OPOS');
const GBloodGroupEnum _$gBloodGroupEnumONEG = const GBloodGroupEnum._('ONEG');
const GBloodGroupEnum _$gBloodGroupEnumgUnknownEnumValue =
    const GBloodGroupEnum._('gUnknownEnumValue');

GBloodGroupEnum _$gBloodGroupEnumValueOf(String name) {
  switch (name) {
    case 'APOS':
      return _$gBloodGroupEnumAPOS;
    case 'ANEG':
      return _$gBloodGroupEnumANEG;
    case 'ABPOS':
      return _$gBloodGroupEnumABPOS;
    case 'ABNEG':
      return _$gBloodGroupEnumABNEG;
    case 'BPOS':
      return _$gBloodGroupEnumBPOS;
    case 'BNEG':
      return _$gBloodGroupEnumBNEG;
    case 'OPOS':
      return _$gBloodGroupEnumOPOS;
    case 'ONEG':
      return _$gBloodGroupEnumONEG;
    case 'gUnknownEnumValue':
      return _$gBloodGroupEnumgUnknownEnumValue;
    default:
      return _$gBloodGroupEnumgUnknownEnumValue;
  }
}

final BuiltSet<GBloodGroupEnum> _$gBloodGroupEnumValues =
    new BuiltSet<GBloodGroupEnum>(const <GBloodGroupEnum>[
  _$gBloodGroupEnumAPOS,
  _$gBloodGroupEnumANEG,
  _$gBloodGroupEnumABPOS,
  _$gBloodGroupEnumABNEG,
  _$gBloodGroupEnumBPOS,
  _$gBloodGroupEnumBNEG,
  _$gBloodGroupEnumOPOS,
  _$gBloodGroupEnumONEG,
  _$gBloodGroupEnumgUnknownEnumValue,
]);

const GCanalType _$gCanalTypemail = const GCanalType._('mail');
const GCanalType _$gCanalTypesms = const GCanalType._('sms');
const GCanalType _$gCanalTypegUnknownEnumValue =
    const GCanalType._('gUnknownEnumValue');

GCanalType _$gCanalTypeValueOf(String name) {
  switch (name) {
    case 'mail':
      return _$gCanalTypemail;
    case 'sms':
      return _$gCanalTypesms;
    case 'gUnknownEnumValue':
      return _$gCanalTypegUnknownEnumValue;
    default:
      return _$gCanalTypegUnknownEnumValue;
  }
}

final BuiltSet<GCanalType> _$gCanalTypeValues =
    new BuiltSet<GCanalType>(const <GCanalType>[
  _$gCanalTypemail,
  _$gCanalTypesms,
  _$gCanalTypegUnknownEnumValue,
]);

const GDelegationTypeEnum _$gDelegationTypeEnumLEGAL_REPRESENTATIVE =
    const GDelegationTypeEnum._('LEGAL_REPRESENTATIVE');
const GDelegationTypeEnum _$gDelegationTypeEnumHEALTH_CARE =
    const GDelegationTypeEnum._('HEALTH_CARE');
const GDelegationTypeEnum _$gDelegationTypeEnumAIDANT_AIDE =
    const GDelegationTypeEnum._('AIDANT_AIDE');
const GDelegationTypeEnum _$gDelegationTypeEnumgUnknownEnumValue =
    const GDelegationTypeEnum._('gUnknownEnumValue');

GDelegationTypeEnum _$gDelegationTypeEnumValueOf(String name) {
  switch (name) {
    case 'LEGAL_REPRESENTATIVE':
      return _$gDelegationTypeEnumLEGAL_REPRESENTATIVE;
    case 'HEALTH_CARE':
      return _$gDelegationTypeEnumHEALTH_CARE;
    case 'AIDANT_AIDE':
      return _$gDelegationTypeEnumAIDANT_AIDE;
    case 'gUnknownEnumValue':
      return _$gDelegationTypeEnumgUnknownEnumValue;
    default:
      return _$gDelegationTypeEnumgUnknownEnumValue;
  }
}

final BuiltSet<GDelegationTypeEnum> _$gDelegationTypeEnumValues =
    new BuiltSet<GDelegationTypeEnum>(const <GDelegationTypeEnum>[
  _$gDelegationTypeEnumLEGAL_REPRESENTATIVE,
  _$gDelegationTypeEnumHEALTH_CARE,
  _$gDelegationTypeEnumAIDANT_AIDE,
  _$gDelegationTypeEnumgUnknownEnumValue,
]);

const GSectionToDownload _$gSectionToDownloadVACCINES =
    const GSectionToDownload._('VACCINES');
const GSectionToDownload _$gSectionToDownloadALLERGIES =
    const GSectionToDownload._('ALLERGIES');
const GSectionToDownload _$gSectionToDownloadDISEASES =
    const GSectionToDownload._('DISEASES');
const GSectionToDownload _$gSectionToDownloadTREATMENTS =
    const GSectionToDownload._('TREATMENTS');
const GSectionToDownload _$gSectionToDownloadMEASURES =
    const GSectionToDownload._('MEASURES');
const GSectionToDownload _$gSectionToDownloadHOSPITALIZATIONS =
    const GSectionToDownload._('HOSPITALIZATIONS');
const GSectionToDownload _$gSectionToDownloadFAMILY_HISTORY =
    const GSectionToDownload._('FAMILY_HISTORY');
const GSectionToDownload _$gSectionToDownloadLIFESTYLES =
    const GSectionToDownload._('LIFESTYLES');
const GSectionToDownload _$gSectionToDownloadENTOURAGE_CONTACT =
    const GSectionToDownload._('ENTOURAGE_CONTACT');
const GSectionToDownload _$gSectionToDownloadWISHES =
    const GSectionToDownload._('WISHES');
const GSectionToDownload _$gSectionToDownloadHEALTH_PROFESSIONALS =
    const GSectionToDownload._('HEALTH_PROFESSIONALS');
const GSectionToDownload _$gSectionToDownloadADMINISTRATIVE_DOCUMENTS =
    const GSectionToDownload._('ADMINISTRATIVE_DOCUMENTS');
const GSectionToDownload _$gSectionToDownloadDISABILITIES =
    const GSectionToDownload._('DISABILITIES');
const GSectionToDownload _$gSectionToDownloadBLOOD_GROUP =
    const GSectionToDownload._('BLOOD_GROUP');
const GSectionToDownload _$gSectionToDownloadgUnknownEnumValue =
    const GSectionToDownload._('gUnknownEnumValue');

GSectionToDownload _$gSectionToDownloadValueOf(String name) {
  switch (name) {
    case 'VACCINES':
      return _$gSectionToDownloadVACCINES;
    case 'ALLERGIES':
      return _$gSectionToDownloadALLERGIES;
    case 'DISEASES':
      return _$gSectionToDownloadDISEASES;
    case 'TREATMENTS':
      return _$gSectionToDownloadTREATMENTS;
    case 'MEASURES':
      return _$gSectionToDownloadMEASURES;
    case 'HOSPITALIZATIONS':
      return _$gSectionToDownloadHOSPITALIZATIONS;
    case 'FAMILY_HISTORY':
      return _$gSectionToDownloadFAMILY_HISTORY;
    case 'LIFESTYLES':
      return _$gSectionToDownloadLIFESTYLES;
    case 'ENTOURAGE_CONTACT':
      return _$gSectionToDownloadENTOURAGE_CONTACT;
    case 'WISHES':
      return _$gSectionToDownloadWISHES;
    case 'HEALTH_PROFESSIONALS':
      return _$gSectionToDownloadHEALTH_PROFESSIONALS;
    case 'ADMINISTRATIVE_DOCUMENTS':
      return _$gSectionToDownloadADMINISTRATIVE_DOCUMENTS;
    case 'DISABILITIES':
      return _$gSectionToDownloadDISABILITIES;
    case 'BLOOD_GROUP':
      return _$gSectionToDownloadBLOOD_GROUP;
    case 'gUnknownEnumValue':
      return _$gSectionToDownloadgUnknownEnumValue;
    default:
      return _$gSectionToDownloadgUnknownEnumValue;
  }
}

final BuiltSet<GSectionToDownload> _$gSectionToDownloadValues =
    new BuiltSet<GSectionToDownload>(const <GSectionToDownload>[
  _$gSectionToDownloadVACCINES,
  _$gSectionToDownloadALLERGIES,
  _$gSectionToDownloadDISEASES,
  _$gSectionToDownloadTREATMENTS,
  _$gSectionToDownloadMEASURES,
  _$gSectionToDownloadHOSPITALIZATIONS,
  _$gSectionToDownloadFAMILY_HISTORY,
  _$gSectionToDownloadLIFESTYLES,
  _$gSectionToDownloadENTOURAGE_CONTACT,
  _$gSectionToDownloadWISHES,
  _$gSectionToDownloadHEALTH_PROFESSIONALS,
  _$gSectionToDownloadADMINISTRATIVE_DOCUMENTS,
  _$gSectionToDownloadDISABILITIES,
  _$gSectionToDownloadBLOOD_GROUP,
  _$gSectionToDownloadgUnknownEnumValue,
]);

const GTypeDemande _$gTypeDemandeSIGNALEMENT_DOC =
    const GTypeDemande._('SIGNALEMENT_DOC');
const GTypeDemande _$gTypeDemandeSIGNALEMENT_SNR =
    const GTypeDemande._('SIGNALEMENT_SNR');
const GTypeDemande _$gTypeDemandeSIGNALEMENT_PS =
    const GTypeDemande._('SIGNALEMENT_PS');
const GTypeDemande _$gTypeDemandegUnknownEnumValue =
    const GTypeDemande._('gUnknownEnumValue');

GTypeDemande _$gTypeDemandeValueOf(String name) {
  switch (name) {
    case 'SIGNALEMENT_DOC':
      return _$gTypeDemandeSIGNALEMENT_DOC;
    case 'SIGNALEMENT_SNR':
      return _$gTypeDemandeSIGNALEMENT_SNR;
    case 'SIGNALEMENT_PS':
      return _$gTypeDemandeSIGNALEMENT_PS;
    case 'gUnknownEnumValue':
      return _$gTypeDemandegUnknownEnumValue;
    default:
      return _$gTypeDemandegUnknownEnumValue;
  }
}

final BuiltSet<GTypeDemande> _$gTypeDemandeValues =
    new BuiltSet<GTypeDemande>(const <GTypeDemande>[
  _$gTypeDemandeSIGNALEMENT_DOC,
  _$gTypeDemandeSIGNALEMENT_SNR,
  _$gTypeDemandeSIGNALEMENT_PS,
  _$gTypeDemandegUnknownEnumValue,
]);

const GSectionUriEnum _$gSectionUriEnumALLERGIES =
    const GSectionUriEnum._('ALLERGIES');
const GSectionUriEnum _$gSectionUriEnumTREATMENTS =
    const GSectionUriEnum._('TREATMENTS');
const GSectionUriEnum _$gSectionUriEnumFAMILY_HISTORIES =
    const GSectionUriEnum._('FAMILY_HISTORIES');
const GSectionUriEnum _$gSectionUriEnumHOSPITALIZATIONS =
    const GSectionUriEnum._('HOSPITALIZATIONS');
const GSectionUriEnum _$gSectionUriEnumDISEASES =
    const GSectionUriEnum._('DISEASES');
const GSectionUriEnum _$gSectionUriEnumDISABILITIES =
    const GSectionUriEnum._('DISABILITIES');
const GSectionUriEnum _$gSectionUriEnumgUnknownEnumValue =
    const GSectionUriEnum._('gUnknownEnumValue');

GSectionUriEnum _$gSectionUriEnumValueOf(String name) {
  switch (name) {
    case 'ALLERGIES':
      return _$gSectionUriEnumALLERGIES;
    case 'TREATMENTS':
      return _$gSectionUriEnumTREATMENTS;
    case 'FAMILY_HISTORIES':
      return _$gSectionUriEnumFAMILY_HISTORIES;
    case 'HOSPITALIZATIONS':
      return _$gSectionUriEnumHOSPITALIZATIONS;
    case 'DISEASES':
      return _$gSectionUriEnumDISEASES;
    case 'DISABILITIES':
      return _$gSectionUriEnumDISABILITIES;
    case 'gUnknownEnumValue':
      return _$gSectionUriEnumgUnknownEnumValue;
    default:
      return _$gSectionUriEnumgUnknownEnumValue;
  }
}

final BuiltSet<GSectionUriEnum> _$gSectionUriEnumValues =
    new BuiltSet<GSectionUriEnum>(const <GSectionUriEnum>[
  _$gSectionUriEnumALLERGIES,
  _$gSectionUriEnumTREATMENTS,
  _$gSectionUriEnumFAMILY_HISTORIES,
  _$gSectionUriEnumHOSPITALIZATIONS,
  _$gSectionUriEnumDISEASES,
  _$gSectionUriEnumDISABILITIES,
  _$gSectionUriEnumgUnknownEnumValue,
]);

const GTypeSuggestion _$gTypeSuggestionPHARMACIE =
    const GTypeSuggestion._('PHARMACIE');
const GTypeSuggestion _$gTypeSuggestionAS = const GTypeSuggestion._('AS');
const GTypeSuggestion _$gTypeSuggestiongUnknownEnumValue =
    const GTypeSuggestion._('gUnknownEnumValue');

GTypeSuggestion _$gTypeSuggestionValueOf(String name) {
  switch (name) {
    case 'PHARMACIE':
      return _$gTypeSuggestionPHARMACIE;
    case 'AS':
      return _$gTypeSuggestionAS;
    case 'gUnknownEnumValue':
      return _$gTypeSuggestiongUnknownEnumValue;
    default:
      return _$gTypeSuggestiongUnknownEnumValue;
  }
}

final BuiltSet<GTypeSuggestion> _$gTypeSuggestionValues =
    new BuiltSet<GTypeSuggestion>(const <GTypeSuggestion>[
  _$gTypeSuggestionPHARMACIE,
  _$gTypeSuggestionAS,
  _$gTypeSuggestiongUnknownEnumValue,
]);

const GActivityTraceGroup _$gActivityTraceGroupGENERAL =
    const GActivityTraceGroup._('GENERAL');
const GActivityTraceGroup _$gActivityTraceGroupSERVICE_TIERS =
    const GActivityTraceGroup._('SERVICE_TIERS');
const GActivityTraceGroup _$gActivityTraceGroupMEDICAL_DOCUMENT =
    const GActivityTraceGroup._('MEDICAL_DOCUMENT');
const GActivityTraceGroup _$gActivityTraceGroupgUnknownEnumValue =
    const GActivityTraceGroup._('gUnknownEnumValue');

GActivityTraceGroup _$gActivityTraceGroupValueOf(String name) {
  switch (name) {
    case 'GENERAL':
      return _$gActivityTraceGroupGENERAL;
    case 'SERVICE_TIERS':
      return _$gActivityTraceGroupSERVICE_TIERS;
    case 'MEDICAL_DOCUMENT':
      return _$gActivityTraceGroupMEDICAL_DOCUMENT;
    case 'gUnknownEnumValue':
      return _$gActivityTraceGroupgUnknownEnumValue;
    default:
      return _$gActivityTraceGroupgUnknownEnumValue;
  }
}

final BuiltSet<GActivityTraceGroup> _$gActivityTraceGroupValues =
    new BuiltSet<GActivityTraceGroup>(const <GActivityTraceGroup>[
  _$gActivityTraceGroupGENERAL,
  _$gActivityTraceGroupSERVICE_TIERS,
  _$gActivityTraceGroupMEDICAL_DOCUMENT,
  _$gActivityTraceGroupgUnknownEnumValue,
]);

const GActivityTraceSort _$gActivityTraceSortACTION_DATE_ASC =
    const GActivityTraceSort._('ACTION_DATE_ASC');
const GActivityTraceSort _$gActivityTraceSortACTION_DATE_DESC =
    const GActivityTraceSort._('ACTION_DATE_DESC');
const GActivityTraceSort _$gActivityTraceSortgUnknownEnumValue =
    const GActivityTraceSort._('gUnknownEnumValue');

GActivityTraceSort _$gActivityTraceSortValueOf(String name) {
  switch (name) {
    case 'ACTION_DATE_ASC':
      return _$gActivityTraceSortACTION_DATE_ASC;
    case 'ACTION_DATE_DESC':
      return _$gActivityTraceSortACTION_DATE_DESC;
    case 'gUnknownEnumValue':
      return _$gActivityTraceSortgUnknownEnumValue;
    default:
      return _$gActivityTraceSortgUnknownEnumValue;
  }
}

final BuiltSet<GActivityTraceSort> _$gActivityTraceSortValues =
    new BuiltSet<GActivityTraceSort>(const <GActivityTraceSort>[
  _$gActivityTraceSortACTION_DATE_ASC,
  _$gActivityTraceSortACTION_DATE_DESC,
  _$gActivityTraceSortgUnknownEnumValue,
]);

const GChangeContactInputCanalType _$gChangeContactInputCanalTypePHONE =
    const GChangeContactInputCanalType._('PHONE');
const GChangeContactInputCanalType _$gChangeContactInputCanalTypeMAIL =
    const GChangeContactInputCanalType._('MAIL');
const GChangeContactInputCanalType
    _$gChangeContactInputCanalTypegUnknownEnumValue =
    const GChangeContactInputCanalType._('gUnknownEnumValue');

GChangeContactInputCanalType _$gChangeContactInputCanalTypeValueOf(
    String name) {
  switch (name) {
    case 'PHONE':
      return _$gChangeContactInputCanalTypePHONE;
    case 'MAIL':
      return _$gChangeContactInputCanalTypeMAIL;
    case 'gUnknownEnumValue':
      return _$gChangeContactInputCanalTypegUnknownEnumValue;
    default:
      return _$gChangeContactInputCanalTypegUnknownEnumValue;
  }
}

final BuiltSet<GChangeContactInputCanalType>
    _$gChangeContactInputCanalTypeValues = new BuiltSet<
        GChangeContactInputCanalType>(const <GChangeContactInputCanalType>[
  _$gChangeContactInputCanalTypePHONE,
  _$gChangeContactInputCanalTypeMAIL,
  _$gChangeContactInputCanalTypegUnknownEnumValue,
]);

const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumIMAGE_JPEG =
    const GDocumentMimeTypeEnum._('IMAGE_JPEG');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumIMAGE_JPG =
    const GDocumentMimeTypeEnum._('IMAGE_JPG');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumIMAGE_TIFF =
    const GDocumentMimeTypeEnum._('IMAGE_TIFF');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumIMAGE_PNG =
    const GDocumentMimeTypeEnum._('IMAGE_PNG');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumPDF =
    const GDocumentMimeTypeEnum._('PDF');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumMSWORD =
    const GDocumentMimeTypeEnum._('MSWORD');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumMSWORD_RTF =
    const GDocumentMimeTypeEnum._('MSWORD_RTF');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumTEXT_PLAIN =
    const GDocumentMimeTypeEnum._('TEXT_PLAIN');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumTEXT_RTF =
    const GDocumentMimeTypeEnum._('TEXT_RTF');
const GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumgUnknownEnumValue =
    const GDocumentMimeTypeEnum._('gUnknownEnumValue');

GDocumentMimeTypeEnum _$gDocumentMimeTypeEnumValueOf(String name) {
  switch (name) {
    case 'IMAGE_JPEG':
      return _$gDocumentMimeTypeEnumIMAGE_JPEG;
    case 'IMAGE_JPG':
      return _$gDocumentMimeTypeEnumIMAGE_JPG;
    case 'IMAGE_TIFF':
      return _$gDocumentMimeTypeEnumIMAGE_TIFF;
    case 'IMAGE_PNG':
      return _$gDocumentMimeTypeEnumIMAGE_PNG;
    case 'PDF':
      return _$gDocumentMimeTypeEnumPDF;
    case 'MSWORD':
      return _$gDocumentMimeTypeEnumMSWORD;
    case 'MSWORD_RTF':
      return _$gDocumentMimeTypeEnumMSWORD_RTF;
    case 'TEXT_PLAIN':
      return _$gDocumentMimeTypeEnumTEXT_PLAIN;
    case 'TEXT_RTF':
      return _$gDocumentMimeTypeEnumTEXT_RTF;
    case 'gUnknownEnumValue':
      return _$gDocumentMimeTypeEnumgUnknownEnumValue;
    default:
      return _$gDocumentMimeTypeEnumgUnknownEnumValue;
  }
}

final BuiltSet<GDocumentMimeTypeEnum> _$gDocumentMimeTypeEnumValues =
    new BuiltSet<GDocumentMimeTypeEnum>(const <GDocumentMimeTypeEnum>[
  _$gDocumentMimeTypeEnumIMAGE_JPEG,
  _$gDocumentMimeTypeEnumIMAGE_JPG,
  _$gDocumentMimeTypeEnumIMAGE_TIFF,
  _$gDocumentMimeTypeEnumIMAGE_PNG,
  _$gDocumentMimeTypeEnumPDF,
  _$gDocumentMimeTypeEnumMSWORD,
  _$gDocumentMimeTypeEnumMSWORD_RTF,
  _$gDocumentMimeTypeEnumTEXT_PLAIN,
  _$gDocumentMimeTypeEnumTEXT_RTF,
  _$gDocumentMimeTypeEnumgUnknownEnumValue,
]);

const GMobileOsEnum _$gMobileOsEnumANDROID = const GMobileOsEnum._('ANDROID');
const GMobileOsEnum _$gMobileOsEnumIOS = const GMobileOsEnum._('IOS');
const GMobileOsEnum _$gMobileOsEnumgUnknownEnumValue =
    const GMobileOsEnum._('gUnknownEnumValue');

GMobileOsEnum _$gMobileOsEnumValueOf(String name) {
  switch (name) {
    case 'ANDROID':
      return _$gMobileOsEnumANDROID;
    case 'IOS':
      return _$gMobileOsEnumIOS;
    case 'gUnknownEnumValue':
      return _$gMobileOsEnumgUnknownEnumValue;
    default:
      return _$gMobileOsEnumgUnknownEnumValue;
  }
}

final BuiltSet<GMobileOsEnum> _$gMobileOsEnumValues =
    new BuiltSet<GMobileOsEnum>(const <GMobileOsEnum>[
  _$gMobileOsEnumANDROID,
  _$gMobileOsEnumIOS,
  _$gMobileOsEnumgUnknownEnumValue,
]);

const GUserActionEnum _$gUserActionEnumCONNEXION =
    const GUserActionEnum._('CONNEXION');
const GUserActionEnum _$gUserActionEnumCONSULT_DOC =
    const GUserActionEnum._('CONSULT_DOC');
const GUserActionEnum _$gUserActionEnumTELECHARGEMENT_DOC =
    const GUserActionEnum._('TELECHARGEMENT_DOC');
const GUserActionEnum _$gUserActionEnumMODIF_PARAM_NOTIF =
    const GUserActionEnum._('MODIF_PARAM_NOTIF');
const GUserActionEnum _$gUserActionEnumACCEPTATION_CGU =
    const GUserActionEnum._('ACCEPTATION_CGU');
const GUserActionEnum _$gUserActionEnumINVIT_ACCES_SECOND_RL =
    const GUserActionEnum._('INVIT_ACCES_SECOND_RL');
const GUserActionEnum _$gUserActionEnumMODIF_PARAM_ACCESS_URGENCE =
    const GUserActionEnum._('MODIF_PARAM_ACCESS_URGENCE');
const GUserActionEnum _$gUserActionEnumCONSULT_MENU_AGENDA =
    const GUserActionEnum._('CONSULT_MENU_AGENDA');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_MHS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_MHS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_PS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_PS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_VACCINATIONS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_VACCINATIONS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_MALADIES =
    const GUserActionEnum._('CONSULT_RUBRIQUE_MALADIES');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_TRAITEMENTS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_TRAITEMENTS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_HOSPITALISATIONS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_HOSPITALISATIONS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_HANDICAPS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_HANDICAPS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_ALLERGIES =
    const GUserActionEnum._('CONSULT_RUBRIQUE_ALLERGIES');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_ANTECEDENTS_FAMILIAUX =
    const GUserActionEnum._('CONSULT_RUBRIQUE_ANTECEDENTS_FAMILIAUX');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_HABITUDES_VIE =
    const GUserActionEnum._('CONSULT_RUBRIQUE_HABITUDES_VIE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_MESURES =
    const GUserActionEnum._('CONSULT_RUBRIQUE_MESURES');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_ENTOURAGE_VOLONTES =
    const GUserActionEnum._('CONSULT_RUBRIQUE_ENTOURAGE_VOLONTES');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_PIECES_ADMIN =
    const GUserActionEnum._('CONSULT_RUBRIQUE_PIECES_ADMIN');
const GUserActionEnum _$gUserActionEnumCONSULT_MESURE =
    const GUserActionEnum._('CONSULT_MESURE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_INFOS_CONNEXION =
    const GUserActionEnum._('CONSULT_RUBRIQUE_INFOS_CONNEXION');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_CONFIDENTIALITE =
    const GUserActionEnum._('CONSULT_RUBRIQUE_CONFIDENTIALITE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_NOTIFS_MAILS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_NOTIFS_MAILS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_HISTORIQUE_DONNEES =
    const GUserActionEnum._('CONSULT_RUBRIQUE_HISTORIQUE_DONNEES');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_CLOTURE_PROFIL =
    const GUserActionEnum._('CONSULT_RUBRIQUE_CLOTURE_PROFIL');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_ACCES_PS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_ACCES_PS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_CONFIDENTIALITE_INFOS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_CONFIDENTIALITE_INFOS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_ACCES_URGENCE =
    const GUserActionEnum._('CONSULT_RUBRIQUE_ACCES_URGENCE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_HISTORIQUE_ACTIVITE =
    const GUserActionEnum._('CONSULT_RUBRIQUE_HISTORIQUE_ACTIVITE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_TELECHARGEMENT_DONNEES =
    const GUserActionEnum._('CONSULT_RUBRIQUE_TELECHARGEMENT_DONNEES');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_ENTOURAGE =
    const GUserActionEnum._('CONSULT_RUBRIQUE_ENTOURAGE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_DIRECTIVES_ANTICIPEES =
    const GUserActionEnum._('CONSULT_RUBRIQUE_DIRECTIVES_ANTICIPEES');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_DON_ORGANE =
    const GUserActionEnum._('CONSULT_RUBRIQUE_DON_ORGANE');
const GUserActionEnum _$gUserActionEnumATTRIBUTION_STATUT_MEDECIN_ADMIN =
    const GUserActionEnum._('ATTRIBUTION_STATUT_MEDECIN_ADMIN');
const GUserActionEnum _$gUserActionEnumRETRAIT_STATUT_MEDECIN_ADMIN =
    const GUserActionEnum._('RETRAIT_STATUT_MEDECIN_ADMIN');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_DOCUMENTS =
    const GUserActionEnum._('CONSULT_RUBRIQUE_DOCUMENTS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_MESSAGERIE =
    const GUserActionEnum._('CONSULT_RUBRIQUE_MESSAGERIE');
const GUserActionEnum _$gUserActionEnumCONSULT_MESSAGE =
    const GUserActionEnum._('CONSULT_MESSAGE');
const GUserActionEnum _$gUserActionEnumENVOI_MESSAGE =
    const GUserActionEnum._('ENVOI_MESSAGE');
const GUserActionEnum _$gUserActionEnumRECEPTION_MESSAGE =
    const GUserActionEnum._('RECEPTION_MESSAGE');
const GUserActionEnum _$gUserActionEnumMODIF_ADRESSE_MAIL =
    const GUserActionEnum._('MODIF_ADRESSE_MAIL');
const GUserActionEnum _$gUserActionEnumMODIF_NUMERO_TELEPHONE =
    const GUserActionEnum._('MODIF_NUMERO_TELEPHONE');
const GUserActionEnum _$gUserActionEnumTELECHARGEMENT_COPIE_DONNEES =
    const GUserActionEnum._('TELECHARGEMENT_COPIE_DONNEES');
const GUserActionEnum _$gUserActionEnumACCES_MES_A_LA_DEMANDE =
    const GUserActionEnum._('ACCES_MES_A_LA_DEMANDE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_NOUS_CONTACTER =
    const GUserActionEnum._('CONSULT_RUBRIQUE_NOUS_CONTACTER');
const GUserActionEnum _$gUserActionEnumCONSULT_MESSAGE_SUPPORT =
    const GUserActionEnum._('CONSULT_MESSAGE_SUPPORT');
const GUserActionEnum _$gUserActionEnumENVOI_MESSAGE_SUPPORT =
    const GUserActionEnum._('ENVOI_MESSAGE_SUPPORT');
const GUserActionEnum _$gUserActionEnumRECEPTION_MESSAGE_SUPPORT =
    const GUserActionEnum._('RECEPTION_MESSAGE_SUPPORT');
const GUserActionEnum _$gUserActionEnumSUPP_MESSAGE_SUPPORT =
    const GUserActionEnum._('SUPP_MESSAGE_SUPPORT');
const GUserActionEnum _$gUserActionEnumANNULATION_DEMANDE_SUPPRESSION_DONNEES =
    const GUserActionEnum._('ANNULATION_DEMANDE_SUPPRESSION_DONNEES');
const GUserActionEnum _$gUserActionEnumAJOUT_VACCINATION =
    const GUserActionEnum._('AJOUT_VACCINATION');
const GUserActionEnum _$gUserActionEnumMODIF_VACCINATION =
    const GUserActionEnum._('MODIF_VACCINATION');
const GUserActionEnum _$gUserActionEnumSUPP_VACCINATION =
    const GUserActionEnum._('SUPP_VACCINATION');
const GUserActionEnum _$gUserActionEnumMODIF_MEMBRE_ENTOURAGE =
    const GUserActionEnum._('MODIF_MEMBRE_ENTOURAGE');
const GUserActionEnum _$gUserActionEnumSUPP_MEMBRE_ENTOURAGE =
    const GUserActionEnum._('SUPP_MEMBRE_ENTOURAGE');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_SERVICES_SYNCHRO =
    const GUserActionEnum._('CONSULT_RUBRIQUE_SERVICES_SYNCHRO');
const GUserActionEnum _$gUserActionEnumCONSULT_MENU_CATALOGUE_SERVICES =
    const GUserActionEnum._('CONSULT_MENU_CATALOGUE_SERVICES');
const GUserActionEnum _$gUserActionEnumAJOUT_MEMBRE_ENTOURAGE =
    const GUserActionEnum._('AJOUT_MEMBRE_ENTOURAGE');
const GUserActionEnum _$gUserActionEnumMODIF_DECLA_DON_ORGANE =
    const GUserActionEnum._('MODIF_DECLA_DON_ORGANE');
const GUserActionEnum _$gUserActionEnumCONSULT_ONGLET_CONFIDENTIALITE_FICHE_PS =
    const GUserActionEnum._('CONSULT_ONGLET_CONFIDENTIALITE_FICHE_PS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_BILAN_DE_PREVENTION =
    const GUserActionEnum._('CONSULT_RUBRIQUE_BILAN_DE_PREVENTION');
const GUserActionEnum _$gUserActionEnumCONSULT_ONGLET_COORDONNEES_FICHE_PS =
    const GUserActionEnum._('CONSULT_ONGLET_COORDONNEES_FICHE_PS');
const GUserActionEnum _$gUserActionEnumCONSULT_ONGLET_DOCUMENTS_FICHE_PS =
    const GUserActionEnum._('CONSULT_ONGLET_DOCUMENTS_FICHE_PS');
const GUserActionEnum
    _$gUserActionEnumCONSULT_ONGLET_HISTORIQUE_ACTIVITES_FICHE_PS =
    const GUserActionEnum._('CONSULT_ONGLET_HISTORIQUE_ACTIVITES_FICHE_PS');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_HABITUDES_VIE_DETAIL =
    const GUserActionEnum._('CONSULT_RUBRIQUE_HABITUDES_VIE_DETAIL');
const GUserActionEnum _$gUserActionEnumCONSULT_RUBRIQUE_GROUPE_SANGUIN =
    const GUserActionEnum._('CONSULT_RUBRIQUE_GROUPE_SANGUIN');
const GUserActionEnum _$gUserActionEnumgUnknownEnumValue =
    const GUserActionEnum._('gUnknownEnumValue');

GUserActionEnum _$gUserActionEnumValueOf(String name) {
  switch (name) {
    case 'CONNEXION':
      return _$gUserActionEnumCONNEXION;
    case 'CONSULT_DOC':
      return _$gUserActionEnumCONSULT_DOC;
    case 'TELECHARGEMENT_DOC':
      return _$gUserActionEnumTELECHARGEMENT_DOC;
    case 'MODIF_PARAM_NOTIF':
      return _$gUserActionEnumMODIF_PARAM_NOTIF;
    case 'ACCEPTATION_CGU':
      return _$gUserActionEnumACCEPTATION_CGU;
    case 'INVIT_ACCES_SECOND_RL':
      return _$gUserActionEnumINVIT_ACCES_SECOND_RL;
    case 'MODIF_PARAM_ACCESS_URGENCE':
      return _$gUserActionEnumMODIF_PARAM_ACCESS_URGENCE;
    case 'CONSULT_MENU_AGENDA':
      return _$gUserActionEnumCONSULT_MENU_AGENDA;
    case 'CONSULT_RUBRIQUE_MHS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_MHS;
    case 'CONSULT_RUBRIQUE_PS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_PS;
    case 'CONSULT_RUBRIQUE_VACCINATIONS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_VACCINATIONS;
    case 'CONSULT_RUBRIQUE_MALADIES':
      return _$gUserActionEnumCONSULT_RUBRIQUE_MALADIES;
    case 'CONSULT_RUBRIQUE_TRAITEMENTS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_TRAITEMENTS;
    case 'CONSULT_RUBRIQUE_HOSPITALISATIONS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_HOSPITALISATIONS;
    case 'CONSULT_RUBRIQUE_HANDICAPS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_HANDICAPS;
    case 'CONSULT_RUBRIQUE_ALLERGIES':
      return _$gUserActionEnumCONSULT_RUBRIQUE_ALLERGIES;
    case 'CONSULT_RUBRIQUE_ANTECEDENTS_FAMILIAUX':
      return _$gUserActionEnumCONSULT_RUBRIQUE_ANTECEDENTS_FAMILIAUX;
    case 'CONSULT_RUBRIQUE_HABITUDES_VIE':
      return _$gUserActionEnumCONSULT_RUBRIQUE_HABITUDES_VIE;
    case 'CONSULT_RUBRIQUE_MESURES':
      return _$gUserActionEnumCONSULT_RUBRIQUE_MESURES;
    case 'CONSULT_RUBRIQUE_ENTOURAGE_VOLONTES':
      return _$gUserActionEnumCONSULT_RUBRIQUE_ENTOURAGE_VOLONTES;
    case 'CONSULT_RUBRIQUE_PIECES_ADMIN':
      return _$gUserActionEnumCONSULT_RUBRIQUE_PIECES_ADMIN;
    case 'CONSULT_MESURE':
      return _$gUserActionEnumCONSULT_MESURE;
    case 'CONSULT_RUBRIQUE_INFOS_CONNEXION':
      return _$gUserActionEnumCONSULT_RUBRIQUE_INFOS_CONNEXION;
    case 'CONSULT_RUBRIQUE_CONFIDENTIALITE':
      return _$gUserActionEnumCONSULT_RUBRIQUE_CONFIDENTIALITE;
    case 'CONSULT_RUBRIQUE_NOTIFS_MAILS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_NOTIFS_MAILS;
    case 'CONSULT_RUBRIQUE_HISTORIQUE_DONNEES':
      return _$gUserActionEnumCONSULT_RUBRIQUE_HISTORIQUE_DONNEES;
    case 'CONSULT_RUBRIQUE_CLOTURE_PROFIL':
      return _$gUserActionEnumCONSULT_RUBRIQUE_CLOTURE_PROFIL;
    case 'CONSULT_RUBRIQUE_ACCES_PS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_ACCES_PS;
    case 'CONSULT_RUBRIQUE_CONFIDENTIALITE_INFOS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_CONFIDENTIALITE_INFOS;
    case 'CONSULT_RUBRIQUE_ACCES_URGENCE':
      return _$gUserActionEnumCONSULT_RUBRIQUE_ACCES_URGENCE;
    case 'CONSULT_RUBRIQUE_HISTORIQUE_ACTIVITE':
      return _$gUserActionEnumCONSULT_RUBRIQUE_HISTORIQUE_ACTIVITE;
    case 'CONSULT_RUBRIQUE_TELECHARGEMENT_DONNEES':
      return _$gUserActionEnumCONSULT_RUBRIQUE_TELECHARGEMENT_DONNEES;
    case 'CONSULT_RUBRIQUE_ENTOURAGE':
      return _$gUserActionEnumCONSULT_RUBRIQUE_ENTOURAGE;
    case 'CONSULT_RUBRIQUE_DIRECTIVES_ANTICIPEES':
      return _$gUserActionEnumCONSULT_RUBRIQUE_DIRECTIVES_ANTICIPEES;
    case 'CONSULT_RUBRIQUE_DON_ORGANE':
      return _$gUserActionEnumCONSULT_RUBRIQUE_DON_ORGANE;
    case 'ATTRIBUTION_STATUT_MEDECIN_ADMIN':
      return _$gUserActionEnumATTRIBUTION_STATUT_MEDECIN_ADMIN;
    case 'RETRAIT_STATUT_MEDECIN_ADMIN':
      return _$gUserActionEnumRETRAIT_STATUT_MEDECIN_ADMIN;
    case 'CONSULT_RUBRIQUE_DOCUMENTS':
      return _$gUserActionEnumCONSULT_RUBRIQUE_DOCUMENTS;
    case 'CONSULT_RUBRIQUE_MESSAGERIE':
      return _$gUserActionEnumCONSULT_RUBRIQUE_MESSAGERIE;
    case 'CONSULT_MESSAGE':
      return _$gUserActionEnumCONSULT_MESSAGE;
    case 'ENVOI_MESSAGE':
      return _$gUserActionEnumENVOI_MESSAGE;
    case 'RECEPTION_MESSAGE':
      return _$gUserActionEnumRECEPTION_MESSAGE;
    case 'MODIF_ADRESSE_MAIL':
      return _$gUserActionEnumMODIF_ADRESSE_MAIL;
    case 'MODIF_NUMERO_TELEPHONE':
      return _$gUserActionEnumMODIF_NUMERO_TELEPHONE;
    case 'TELECHARGEMENT_COPIE_DONNEES':
      return _$gUserActionEnumTELECHARGEMENT_COPIE_DONNEES;
    case 'ACCES_MES_A_LA_DEMANDE':
      return _$gUserActionEnumACCES_MES_A_LA_DEMANDE;
    case 'CONSULT_RUBRIQUE_NOUS_CONTACTER':
      return _$gUserActionEnumCONSULT_RUBRIQUE_NOUS_CONTACTER;
    case 'CONSULT_MESSAGE_SUPPORT':
      return _$gUserActionEnumCONSULT_MESSAGE_SUPPORT;
    case 'ENVOI_MESSAGE_SUPPORT':
      return _$gUserActionEnumENVOI_MESSAGE_SUPPORT;
    case 'RECEPTION_MESSAGE_SUPPORT':
      return _$gUserActionEnumRECEPTION_MESSAGE_SUPPORT;
    case 'SUPP_MESSAGE_SUPPORT':
      return _$gUserActionEnumSUPP_MESSAGE_SUPPORT;
    case 'ANNULATION_DEMANDE_SUPPRESSION_DONNEES':
      return _$gUserActionEnumANNULATION_DEMANDE_SUPPRESSION_DONNEES;
    case 'AJOUT_VACCINATION':
      return _$gUserActionEnumAJOUT_VACCINATION;
    case 'MODIF_VACCINATION':
      return _$gUserActionEnumMODIF_VACCINATION;
    case 'SUPP_VACCINATION':
      return _$gUserActionEnumSUPP_VACCINATION;
    case 'MODIF_MEMBRE_ENTOURAGE':
      return _$gUserActionEnumMODIF_MEMBRE_ENTOURAGE;
    case 'SUPP_MEMBRE_ENTOURAGE':
      return _$gUserActionEnumSUPP_MEMBRE_ENTOURAGE;
    case 'CONSULT_RUBRIQUE_SERVICES_SYNCHRO':
      return _$gUserActionEnumCONSULT_RUBRIQUE_SERVICES_SYNCHRO;
    case 'CONSULT_MENU_CATALOGUE_SERVICES':
      return _$gUserActionEnumCONSULT_MENU_CATALOGUE_SERVICES;
    case 'AJOUT_MEMBRE_ENTOURAGE':
      return _$gUserActionEnumAJOUT_MEMBRE_ENTOURAGE;
    case 'MODIF_DECLA_DON_ORGANE':
      return _$gUserActionEnumMODIF_DECLA_DON_ORGANE;
    case 'CONSULT_ONGLET_CONFIDENTIALITE_FICHE_PS':
      return _$gUserActionEnumCONSULT_ONGLET_CONFIDENTIALITE_FICHE_PS;
    case 'CONSULT_RUBRIQUE_BILAN_DE_PREVENTION':
      return _$gUserActionEnumCONSULT_RUBRIQUE_BILAN_DE_PREVENTION;
    case 'CONSULT_ONGLET_COORDONNEES_FICHE_PS':
      return _$gUserActionEnumCONSULT_ONGLET_COORDONNEES_FICHE_PS;
    case 'CONSULT_ONGLET_DOCUMENTS_FICHE_PS':
      return _$gUserActionEnumCONSULT_ONGLET_DOCUMENTS_FICHE_PS;
    case 'CONSULT_ONGLET_HISTORIQUE_ACTIVITES_FICHE_PS':
      return _$gUserActionEnumCONSULT_ONGLET_HISTORIQUE_ACTIVITES_FICHE_PS;
    case 'CONSULT_RUBRIQUE_HABITUDES_VIE_DETAIL':
      return _$gUserActionEnumCONSULT_RUBRIQUE_HABITUDES_VIE_DETAIL;
    case 'CONSULT_RUBRIQUE_GROUPE_SANGUIN':
      return _$gUserActionEnumCONSULT_RUBRIQUE_GROUPE_SANGUIN;
    case 'gUnknownEnumValue':
      return _$gUserActionEnumgUnknownEnumValue;
    default:
      return _$gUserActionEnumgUnknownEnumValue;
  }
}

final BuiltSet<GUserActionEnum> _$gUserActionEnumValues =
    new BuiltSet<GUserActionEnum>(const <GUserActionEnum>[
  _$gUserActionEnumCONNEXION,
  _$gUserActionEnumCONSULT_DOC,
  _$gUserActionEnumTELECHARGEMENT_DOC,
  _$gUserActionEnumMODIF_PARAM_NOTIF,
  _$gUserActionEnumACCEPTATION_CGU,
  _$gUserActionEnumINVIT_ACCES_SECOND_RL,
  _$gUserActionEnumMODIF_PARAM_ACCESS_URGENCE,
  _$gUserActionEnumCONSULT_MENU_AGENDA,
  _$gUserActionEnumCONSULT_RUBRIQUE_MHS,
  _$gUserActionEnumCONSULT_RUBRIQUE_PS,
  _$gUserActionEnumCONSULT_RUBRIQUE_VACCINATIONS,
  _$gUserActionEnumCONSULT_RUBRIQUE_MALADIES,
  _$gUserActionEnumCONSULT_RUBRIQUE_TRAITEMENTS,
  _$gUserActionEnumCONSULT_RUBRIQUE_HOSPITALISATIONS,
  _$gUserActionEnumCONSULT_RUBRIQUE_HANDICAPS,
  _$gUserActionEnumCONSULT_RUBRIQUE_ALLERGIES,
  _$gUserActionEnumCONSULT_RUBRIQUE_ANTECEDENTS_FAMILIAUX,
  _$gUserActionEnumCONSULT_RUBRIQUE_HABITUDES_VIE,
  _$gUserActionEnumCONSULT_RUBRIQUE_MESURES,
  _$gUserActionEnumCONSULT_RUBRIQUE_ENTOURAGE_VOLONTES,
  _$gUserActionEnumCONSULT_RUBRIQUE_PIECES_ADMIN,
  _$gUserActionEnumCONSULT_MESURE,
  _$gUserActionEnumCONSULT_RUBRIQUE_INFOS_CONNEXION,
  _$gUserActionEnumCONSULT_RUBRIQUE_CONFIDENTIALITE,
  _$gUserActionEnumCONSULT_RUBRIQUE_NOTIFS_MAILS,
  _$gUserActionEnumCONSULT_RUBRIQUE_HISTORIQUE_DONNEES,
  _$gUserActionEnumCONSULT_RUBRIQUE_CLOTURE_PROFIL,
  _$gUserActionEnumCONSULT_RUBRIQUE_ACCES_PS,
  _$gUserActionEnumCONSULT_RUBRIQUE_CONFIDENTIALITE_INFOS,
  _$gUserActionEnumCONSULT_RUBRIQUE_ACCES_URGENCE,
  _$gUserActionEnumCONSULT_RUBRIQUE_HISTORIQUE_ACTIVITE,
  _$gUserActionEnumCONSULT_RUBRIQUE_TELECHARGEMENT_DONNEES,
  _$gUserActionEnumCONSULT_RUBRIQUE_ENTOURAGE,
  _$gUserActionEnumCONSULT_RUBRIQUE_DIRECTIVES_ANTICIPEES,
  _$gUserActionEnumCONSULT_RUBRIQUE_DON_ORGANE,
  _$gUserActionEnumATTRIBUTION_STATUT_MEDECIN_ADMIN,
  _$gUserActionEnumRETRAIT_STATUT_MEDECIN_ADMIN,
  _$gUserActionEnumCONSULT_RUBRIQUE_DOCUMENTS,
  _$gUserActionEnumCONSULT_RUBRIQUE_MESSAGERIE,
  _$gUserActionEnumCONSULT_MESSAGE,
  _$gUserActionEnumENVOI_MESSAGE,
  _$gUserActionEnumRECEPTION_MESSAGE,
  _$gUserActionEnumMODIF_ADRESSE_MAIL,
  _$gUserActionEnumMODIF_NUMERO_TELEPHONE,
  _$gUserActionEnumTELECHARGEMENT_COPIE_DONNEES,
  _$gUserActionEnumACCES_MES_A_LA_DEMANDE,
  _$gUserActionEnumCONSULT_RUBRIQUE_NOUS_CONTACTER,
  _$gUserActionEnumCONSULT_MESSAGE_SUPPORT,
  _$gUserActionEnumENVOI_MESSAGE_SUPPORT,
  _$gUserActionEnumRECEPTION_MESSAGE_SUPPORT,
  _$gUserActionEnumSUPP_MESSAGE_SUPPORT,
  _$gUserActionEnumANNULATION_DEMANDE_SUPPRESSION_DONNEES,
  _$gUserActionEnumAJOUT_VACCINATION,
  _$gUserActionEnumMODIF_VACCINATION,
  _$gUserActionEnumSUPP_VACCINATION,
  _$gUserActionEnumMODIF_MEMBRE_ENTOURAGE,
  _$gUserActionEnumSUPP_MEMBRE_ENTOURAGE,
  _$gUserActionEnumCONSULT_RUBRIQUE_SERVICES_SYNCHRO,
  _$gUserActionEnumCONSULT_MENU_CATALOGUE_SERVICES,
  _$gUserActionEnumAJOUT_MEMBRE_ENTOURAGE,
  _$gUserActionEnumMODIF_DECLA_DON_ORGANE,
  _$gUserActionEnumCONSULT_ONGLET_CONFIDENTIALITE_FICHE_PS,
  _$gUserActionEnumCONSULT_RUBRIQUE_BILAN_DE_PREVENTION,
  _$gUserActionEnumCONSULT_ONGLET_COORDONNEES_FICHE_PS,
  _$gUserActionEnumCONSULT_ONGLET_DOCUMENTS_FICHE_PS,
  _$gUserActionEnumCONSULT_ONGLET_HISTORIQUE_ACTIVITES_FICHE_PS,
  _$gUserActionEnumCONSULT_RUBRIQUE_HABITUDES_VIE_DETAIL,
  _$gUserActionEnumCONSULT_RUBRIQUE_GROUPE_SANGUIN,
  _$gUserActionEnumgUnknownEnumValue,
]);

const GFinalityCode _$gFinalityCodeTRAITEMENT_AUTO_DOCS =
    const GFinalityCode._('TRAITEMENT_AUTO_DOCS');
const GFinalityCode _$gFinalityCodeDOCS = const GFinalityCode._('DOCS');
const GFinalityCode _$gFinalityCodegUnknownEnumValue =
    const GFinalityCode._('gUnknownEnumValue');

GFinalityCode _$gFinalityCodeValueOf(String name) {
  switch (name) {
    case 'TRAITEMENT_AUTO_DOCS':
      return _$gFinalityCodeTRAITEMENT_AUTO_DOCS;
    case 'DOCS':
      return _$gFinalityCodeDOCS;
    case 'gUnknownEnumValue':
      return _$gFinalityCodegUnknownEnumValue;
    default:
      return _$gFinalityCodegUnknownEnumValue;
  }
}

final BuiltSet<GFinalityCode> _$gFinalityCodeValues =
    new BuiltSet<GFinalityCode>(const <GFinalityCode>[
  _$gFinalityCodeTRAITEMENT_AUTO_DOCS,
  _$gFinalityCodeDOCS,
  _$gFinalityCodegUnknownEnumValue,
]);

Serializer<GEpisodeCategory> _$gEpisodeCategorySerializer =
    new _$GEpisodeCategorySerializer();
Serializer<GPreferenceNotificationEnum>
    _$gPreferenceNotificationEnumSerializer =
    new _$GPreferenceNotificationEnumSerializer();
Serializer<GDemandeAccesStatutEnum> _$gDemandeAccesStatutEnumSerializer =
    new _$GDemandeAccesStatutEnumSerializer();
Serializer<GHealthProfessionalEnum> _$gHealthProfessionalEnumSerializer =
    new _$GHealthProfessionalEnumSerializer();
Serializer<GHealthProfessionalRoleEnum>
    _$gHealthProfessionalRoleEnumSerializer =
    new _$GHealthProfessionalRoleEnumSerializer();
Serializer<GReplyTypeEnum> _$gReplyTypeEnumSerializer =
    new _$GReplyTypeEnumSerializer();
Serializer<GAgendaAuthorTypeEnum> _$gAgendaAuthorTypeEnumSerializer =
    new _$GAgendaAuthorTypeEnumSerializer();
Serializer<GAppointmentType> _$gAppointmentTypeSerializer =
    new _$GAppointmentTypeSerializer();
Serializer<GPreventionTypeEnum> _$gPreventionTypeEnumSerializer =
    new _$GPreventionTypeEnumSerializer();
Serializer<GSourceAuthor> _$gSourceAuthorSerializer =
    new _$GSourceAuthorSerializer();
Serializer<GCategory> _$gCategorySerializer = new _$GCategorySerializer();
Serializer<GConfidentiality> _$gConfidentialitySerializer =
    new _$GConfidentialitySerializer();
Serializer<GContactType> _$gContactTypeSerializer =
    new _$GContactTypeSerializer();
Serializer<GEntourageRelation> _$gEntourageRelationSerializer =
    new _$GEntourageRelationSerializer();
Serializer<GLinkType> _$gLinkTypeSerializer = new _$GLinkTypeSerializer();
Serializer<GServiceStatusEnum> _$gServiceStatusEnumSerializer =
    new _$GServiceStatusEnumSerializer();
Serializer<GDisabilitiesTypesEnum> _$gDisabilitiesTypesEnumSerializer =
    new _$GDisabilitiesTypesEnumSerializer();
Serializer<GDisabilityRateEnum> _$gDisabilityRateEnumSerializer =
    new _$GDisabilityRateEnumSerializer();
Serializer<GHumanHelpEnum> _$gHumanHelpEnumSerializer =
    new _$GHumanHelpEnumSerializer();
Serializer<GFamilyRelationshipEnum> _$gFamilyRelationshipEnumSerializer =
    new _$GFamilyRelationshipEnumSerializer();
Serializer<GDiseaseEpisodeType> _$gDiseaseEpisodeTypeSerializer =
    new _$GDiseaseEpisodeTypeSerializer();
Serializer<GVaccineTypeOfAdministrationEnum>
    _$gVaccineTypeOfAdministrationEnumSerializer =
    new _$GVaccineTypeOfAdministrationEnumSerializer();
Serializer<GMeasureCode> _$gMeasureCodeSerializer =
    new _$GMeasureCodeSerializer();
Serializer<GMeasureCategory> _$gMeasureCategorySerializer =
    new _$GMeasureCategorySerializer();
Serializer<GMeasureGender> _$gMeasureGenderSerializer =
    new _$GMeasureGenderSerializer();
Serializer<GAuthorType> _$gAuthorTypeSerializer = new _$GAuthorTypeSerializer();
Serializer<GLifestyleItemDisplayEnum> _$gLifestyleItemDisplayEnumSerializer =
    new _$GLifestyleItemDisplayEnumSerializer();
Serializer<GLifestyleSectionEnum> _$gLifestyleSectionEnumSerializer =
    new _$GLifestyleSectionEnumSerializer();
Serializer<GLifestyleCreationTypeEnum> _$gLifestyleCreationTypeEnumSerializer =
    new _$GLifestyleCreationTypeEnumSerializer();
Serializer<GProfileType> _$gProfileTypeSerializer =
    new _$GProfileTypeSerializer();
Serializer<GActorType> _$gActorTypeSerializer = new _$GActorTypeSerializer();
Serializer<GResourceType> _$gResourceTypeSerializer =
    new _$GResourceTypeSerializer();
Serializer<GGender> _$gGenderSerializer = new _$GGenderSerializer();
Serializer<GDelegationInvitationStatus>
    _$gDelegationInvitationStatusSerializer =
    new _$GDelegationInvitationStatusSerializer();
Serializer<GDelegationType> _$gDelegationTypeSerializer =
    new _$GDelegationTypeSerializer();
Serializer<GDelegationDirection> _$gDelegationDirectionSerializer =
    new _$GDelegationDirectionSerializer();
Serializer<GActivityActorType> _$gActivityActorTypeSerializer =
    new _$GActivityActorTypeSerializer();
Serializer<GChoiceQuestionType> _$gChoiceQuestionTypeSerializer =
    new _$GChoiceQuestionTypeSerializer();
Serializer<GHealthQuizCompletionStatus>
    _$gHealthQuizCompletionStatusSerializer =
    new _$GHealthQuizCompletionStatusSerializer();
Serializer<GRecommendationCode> _$gRecommendationCodeSerializer =
    new _$GRecommendationCodeSerializer();
Serializer<GDurationUnitEnum> _$gDurationUnitEnumSerializer =
    new _$GDurationUnitEnumSerializer();
Serializer<GBloodGroupEnum> _$gBloodGroupEnumSerializer =
    new _$GBloodGroupEnumSerializer();
Serializer<GOtpForResetPasswordInput> _$gOtpForResetPasswordInputSerializer =
    new _$GOtpForResetPasswordInputSerializer();
Serializer<GCanalType> _$gCanalTypeSerializer = new _$GCanalTypeSerializer();
Serializer<GSendLoginInput> _$gSendLoginInputSerializer =
    new _$GSendLoginInputSerializer();
Serializer<GGetPersonalInformationInput>
    _$gGetPersonalInformationInputSerializer =
    new _$GGetPersonalInformationInputSerializer();
Serializer<GGetCompteInformationInput> _$gGetCompteInformationInputSerializer =
    new _$GGetCompteInformationInputSerializer();
Serializer<GGetAyantsDroitsInput> _$gGetAyantsDroitsInputSerializer =
    new _$GGetAyantsDroitsInputSerializer();
Serializer<GEnsHistoryInput> _$gEnsHistoryInputSerializer =
    new _$GEnsHistoryInputSerializer();
Serializer<GSynchronizedServicesHistoryInput>
    _$gSynchronizedServicesHistoryInputSerializer =
    new _$GSynchronizedServicesHistoryInputSerializer();
Serializer<GTraceDocumentHistoryInput> _$gTraceDocumentHistoryInputSerializer =
    new _$GTraceDocumentHistoryInputSerializer();
Serializer<GGetDmpConsentementInput> _$gGetDmpConsentementInputSerializer =
    new _$GGetDmpConsentementInputSerializer();
Serializer<GGetLegalRepresentativesInput>
    _$gGetLegalRepresentativesInputSerializer =
    new _$GGetLegalRepresentativesInputSerializer();
Serializer<GDelegationTypeEnum> _$gDelegationTypeEnumSerializer =
    new _$GDelegationTypeEnumSerializer();
Serializer<GAccountGetAccountFamilyInput>
    _$gAccountGetAccountFamilyInputSerializer =
    new _$GAccountGetAccountFamilyInputSerializer();
Serializer<GGetPendingInvitationInput> _$gGetPendingInvitationInputSerializer =
    new _$GGetPendingInvitationInputSerializer();
Serializer<GDownloadRematInProgressInput>
    _$gDownloadRematInProgressInputSerializer =
    new _$GDownloadRematInProgressInputSerializer();
Serializer<GResearchPsInput> _$gResearchPsInputSerializer =
    new _$GResearchPsInputSerializer();
Serializer<GGetCityInput> _$gGetCityInputSerializer =
    new _$GGetCityInputSerializer();
Serializer<GSectionToDownload> _$gSectionToDownloadSerializer =
    new _$GSectionToDownloadSerializer();
Serializer<GAdvanceDirectivesFormEndOfLifeInput>
    _$gAdvanceDirectivesFormEndOfLifeInputSerializer =
    new _$GAdvanceDirectivesFormEndOfLifeInputSerializer();
Serializer<GActsAndTreatmentsInput> _$gActsAndTreatmentsInputSerializer =
    new _$GActsAndTreatmentsInputSerializer();
Serializer<GAdvanceDirectivesFormGoodHealthInput>
    _$gAdvanceDirectivesFormGoodHealthInputSerializer =
    new _$GAdvanceDirectivesFormGoodHealthInputSerializer();
Serializer<GEpisodeInputWithCount> _$gEpisodeInputWithCountSerializer =
    new _$GEpisodeInputWithCountSerializer();
Serializer<GEpisodeInput> _$gEpisodeInputSerializer =
    new _$GEpisodeInputSerializer();
Serializer<GEpisodeInputWithPagination>
    _$gEpisodeInputWithPaginationSerializer =
    new _$GEpisodeInputWithPaginationSerializer();
Serializer<GMessagingPageableInput> _$gMessagingPageableInputSerializer =
    new _$GMessagingPageableInputSerializer();
Serializer<GPageableInput> _$gPageableInputSerializer =
    new _$GPageableInputSerializer();
Serializer<GFiltersInput> _$gFiltersInputSerializer =
    new _$GFiltersInputSerializer();
Serializer<GMessageInput> _$gMessageInputSerializer =
    new _$GMessageInputSerializer();
Serializer<GMessagingInput> _$gMessagingInputSerializer =
    new _$GMessagingInputSerializer();
Serializer<GHealthProfessionalEmailsInput>
    _$gHealthProfessionalEmailsInputSerializer =
    new _$GHealthProfessionalEmailsInputSerializer();
Serializer<GContactDetailsInput> _$gContactDetailsInputSerializer =
    new _$GContactDetailsInputSerializer();
Serializer<GTypeDemande> _$gTypeDemandeSerializer =
    new _$GTypeDemandeSerializer();
Serializer<GMeasureGrowthMetricsParams>
    _$gMeasureGrowthMetricsParamsSerializer =
    new _$GMeasureGrowthMetricsParamsSerializer();
Serializer<GMeasurePageableInput> _$gMeasurePageableInputSerializer =
    new _$GMeasurePageableInputSerializer();
Serializer<GHealthProfessionalTraceInput>
    _$gHealthProfessionalTraceInputSerializer =
    new _$GHealthProfessionalTraceInputSerializer();
Serializer<GSectionUriEnum> _$gSectionUriEnumSerializer =
    new _$GSectionUriEnumSerializer();
Serializer<GSearchStructureInputModel> _$gSearchStructureInputModelSerializer =
    new _$GSearchStructureInputModelSerializer();
Serializer<GTypeSuggestion> _$gTypeSuggestionSerializer =
    new _$GTypeSuggestionSerializer();
Serializer<GFileGetInput> _$gFileGetInputSerializer =
    new _$GFileGetInputSerializer();
Serializer<GDelegationInvitationFilter>
    _$gDelegationInvitationFilterSerializer =
    new _$GDelegationInvitationFilterSerializer();
Serializer<GDelegationFilter> _$gDelegationFilterSerializer =
    new _$GDelegationFilterSerializer();
Serializer<GActivityTraceGroup> _$gActivityTraceGroupSerializer =
    new _$GActivityTraceGroupSerializer();
Serializer<GActivityTraceSort> _$gActivityTraceSortSerializer =
    new _$GActivityTraceSortSerializer();
Serializer<GActivityTraceFilterInput> _$gActivityTraceFilterInputSerializer =
    new _$GActivityTraceFilterInputSerializer();
Serializer<GSendOtpUpdateContactInput> _$gSendOtpUpdateContactInputSerializer =
    new _$GSendOtpUpdateContactInputSerializer();
Serializer<GVerifyOtpUpdateContactInput>
    _$gVerifyOtpUpdateContactInputSerializer =
    new _$GVerifyOtpUpdateContactInputSerializer();
Serializer<GGenerateNewEnrolmentCodeInput>
    _$gGenerateNewEnrolmentCodeInputSerializer =
    new _$GGenerateNewEnrolmentCodeInputSerializer();
Serializer<GSendNewEnrolmentCodeInput> _$gSendNewEnrolmentCodeInputSerializer =
    new _$GSendNewEnrolmentCodeInputSerializer();
Serializer<GVitalCardAuthenticationInput>
    _$gVitalCardAuthenticationInputSerializer =
    new _$GVitalCardAuthenticationInputSerializer();
Serializer<GCreateAccountEnsInput> _$gCreateAccountEnsInputSerializer =
    new _$GCreateAccountEnsInputSerializer();
Serializer<GFinalitiesConsentsToUpdateInput>
    _$gFinalitiesConsentsToUpdateInputSerializer =
    new _$GFinalitiesConsentsToUpdateInputSerializer();
Serializer<GFinalityInput> _$gFinalityInputSerializer =
    new _$GFinalityInputSerializer();
Serializer<GChangeFinalityConsentByServiceOidInput>
    _$gChangeFinalityConsentByServiceOidInputSerializer =
    new _$GChangeFinalityConsentByServiceOidInputSerializer();
Serializer<GChangePasswordInput> _$gChangePasswordInputSerializer =
    new _$GChangePasswordInputSerializer();
Serializer<GChangeContactInput> _$gChangeContactInputSerializer =
    new _$GChangeContactInputSerializer();
Serializer<GChangeContactInputCanalType>
    _$gChangeContactInputCanalTypeSerializer =
    new _$GChangeContactInputCanalTypeSerializer();
Serializer<GValidateOtpInput> _$gValidateOtpInputSerializer =
    new _$GValidateOtpInputSerializer();
Serializer<GChangePreferenceNotificationInput>
    _$gChangePreferenceNotificationInputSerializer =
    new _$GChangePreferenceNotificationInputSerializer();
Serializer<GInvitationSecondRLInput> _$gInvitationSecondRLInputSerializer =
    new _$GInvitationSecondRLInputSerializer();
Serializer<GSecondRLInformationInput> _$gSecondRLInformationInputSerializer =
    new _$GSecondRLInformationInputSerializer();
Serializer<GAccountActiveProfilsInput> _$gAccountActiveProfilsInputSerializer =
    new _$GAccountActiveProfilsInputSerializer();
Serializer<GAccessValidatedOrRejectedInput>
    _$gAccessValidatedOrRejectedInputSerializer =
    new _$GAccessValidatedOrRejectedInputSerializer();
Serializer<GAskDeletePersonalDataInput>
    _$gAskDeletePersonalDataInputSerializer =
    new _$GAskDeletePersonalDataInputSerializer();
Serializer<GAppointmentToCreateInput> _$gAppointmentToCreateInputSerializer =
    new _$GAppointmentToCreateInputSerializer();
Serializer<GAppointmentToUpdateInput> _$gAppointmentToUpdateInputSerializer =
    new _$GAppointmentToUpdateInputSerializer();
Serializer<GReminderToCreateInput> _$gReminderToCreateInputSerializer =
    new _$GReminderToCreateInputSerializer();
Serializer<GReminderToUpdateInput> _$gReminderToUpdateInputSerializer =
    new _$GReminderToUpdateInputSerializer();
Serializer<GUpdatePreventionStatusViewModel>
    _$gUpdatePreventionStatusViewModelSerializer =
    new _$GUpdatePreventionStatusViewModelSerializer();
Serializer<GAllergyInput> _$gAllergyInputSerializer =
    new _$GAllergyInputSerializer();
Serializer<GAllergyUpdateInput> _$gAllergyUpdateInputSerializer =
    new _$GAllergyUpdateInputSerializer();
Serializer<GLinkIdInput> _$gLinkIdInputSerializer =
    new _$GLinkIdInputSerializer();
Serializer<GDisabilityInput> _$gDisabilityInputSerializer =
    new _$GDisabilityInputSerializer();
Serializer<GDisabilityUpdateInput> _$gDisabilityUpdateInputSerializer =
    new _$GDisabilityUpdateInputSerializer();
Serializer<GDiseaseInput> _$gDiseaseInputSerializer =
    new _$GDiseaseInputSerializer();
Serializer<GDiseaseUpdateInput> _$gDiseaseUpdateInputSerializer =
    new _$GDiseaseUpdateInputSerializer();
Serializer<GLinkUpdateInput> _$gLinkUpdateInputSerializer =
    new _$GLinkUpdateInputSerializer();
Serializer<GDocumentInput> _$gDocumentInputSerializer =
    new _$GDocumentInputSerializer();
Serializer<GDocumentUpdateInput> _$gDocumentUpdateInputSerializer =
    new _$GDocumentUpdateInputSerializer();
Serializer<GDocumentPropertiesUpdateInput>
    _$gDocumentPropertiesUpdateInputSerializer =
    new _$GDocumentPropertiesUpdateInputSerializer();
Serializer<GDocumentDeleteInput> _$gDocumentDeleteInputSerializer =
    new _$GDocumentDeleteInputSerializer();
Serializer<GDocumentUpdateConfidentialityInput>
    _$gDocumentUpdateConfidentialityInputSerializer =
    new _$GDocumentUpdateConfidentialityInputSerializer();
Serializer<GDocumentsDeletionInput> _$gDocumentsDeletionInputSerializer =
    new _$GDocumentsDeletionInputSerializer();
Serializer<GSingleDocumentMarkInput> _$gSingleDocumentMarkInputSerializer =
    new _$GSingleDocumentMarkInputSerializer();
Serializer<GDocumentMarkInput> _$gDocumentMarkInputSerializer =
    new _$GDocumentMarkInputSerializer();
Serializer<GMultipleDocumentsMarkInput>
    _$gMultipleDocumentsMarkInputSerializer =
    new _$GMultipleDocumentsMarkInputSerializer();
Serializer<GSingleDocumentPatchInput> _$gSingleDocumentPatchInputSerializer =
    new _$GSingleDocumentPatchInputSerializer();
Serializer<GDocumentPatchInput> _$gDocumentPatchInputSerializer =
    new _$GDocumentPatchInputSerializer();
Serializer<GMultipleDocumentsPatchInput>
    _$gMultipleDocumentsPatchInputSerializer =
    new _$GMultipleDocumentsPatchInputSerializer();
Serializer<GCreateFolderInputs> _$gCreateFolderInputsSerializer =
    new _$GCreateFolderInputsSerializer();
Serializer<GDeleteFolderInputs> _$gDeleteFolderInputsSerializer =
    new _$GDeleteFolderInputsSerializer();
Serializer<GRenameFolderInputs> _$gRenameFolderInputsSerializer =
    new _$GRenameFolderInputsSerializer();
Serializer<GFamilyHistoryInput> _$gFamilyHistoryInputSerializer =
    new _$GFamilyHistoryInputSerializer();
Serializer<GFamilyHistoryUpdateInput> _$gFamilyHistoryUpdateInputSerializer =
    new _$GFamilyHistoryUpdateInputSerializer();
Serializer<GDeleteLinkInput> _$gDeleteLinkInputSerializer =
    new _$GDeleteLinkInputSerializer();
Serializer<GDeleteDraftFromConversationInput>
    _$gDeleteDraftFromConversationInputSerializer =
    new _$GDeleteDraftFromConversationInputSerializer();
Serializer<GConversationTrashInput> _$gConversationTrashInputSerializer =
    new _$GConversationTrashInputSerializer();
Serializer<GAcknowledgeInput> _$gAcknowledgeInputSerializer =
    new _$GAcknowledgeInputSerializer();
Serializer<GCreateContactWithControlInput>
    _$gCreateContactWithControlInputSerializer =
    new _$GCreateContactWithControlInputSerializer();
Serializer<GTicketToCreateInput> _$gTicketToCreateInputSerializer =
    new _$GTicketToCreateInputSerializer();
Serializer<GTicketDocumentInput> _$gTicketDocumentInputSerializer =
    new _$GTicketDocumentInputSerializer();
Serializer<GReportRequestForm> _$gReportRequestFormSerializer =
    new _$GReportRequestFormSerializer();
Serializer<GReportDocumentModel> _$gReportDocumentModelSerializer =
    new _$GReportDocumentModelSerializer();
Serializer<GDocumentMimeTypeEnum> _$gDocumentMimeTypeEnumSerializer =
    new _$GDocumentMimeTypeEnumSerializer();
Serializer<GLifestyleItemInput> _$gLifestyleItemInputSerializer =
    new _$GLifestyleItemInputSerializer();
Serializer<GLifestyleItemDetailInput> _$gLifestyleItemDetailInputSerializer =
    new _$GLifestyleItemDetailInputSerializer();
Serializer<GLifestyleAnswerInput> _$gLifestyleAnswerInputSerializer =
    new _$GLifestyleAnswerInputSerializer();
Serializer<GLifestyleItemUpdateInput> _$gLifestyleItemUpdateInputSerializer =
    new _$GLifestyleItemUpdateInputSerializer();
Serializer<GHospitalizationUpdateInput>
    _$gHospitalizationUpdateInputSerializer =
    new _$GHospitalizationUpdateInputSerializer();
Serializer<GHospitalizationInput> _$gHospitalizationInputSerializer =
    new _$GHospitalizationInputSerializer();
Serializer<GLinkedDocumentInput> _$gLinkedDocumentInputSerializer =
    new _$GLinkedDocumentInputSerializer();
Serializer<GLinkedTreatmentInput> _$gLinkedTreatmentInputSerializer =
    new _$GLinkedTreatmentInputSerializer();
Serializer<GMeasureInput> _$gMeasureInputSerializer =
    new _$GMeasureInputSerializer();
Serializer<GMetricInput> _$gMetricInputSerializer =
    new _$GMetricInputSerializer();
Serializer<GCommentInput> _$gCommentInputSerializer =
    new _$GCommentInputSerializer();
Serializer<GDeleteMeasureModel> _$gDeleteMeasureModelSerializer =
    new _$GDeleteMeasureModelSerializer();
Serializer<GMeasureTargetInput> _$gMeasureTargetInputSerializer =
    new _$GMeasureTargetInputSerializer();
Serializer<GEditMeasureTargetInput> _$gEditMeasureTargetInputSerializer =
    new _$GEditMeasureTargetInputSerializer();
Serializer<GMeasureTileInput> _$gMeasureTileInputSerializer =
    new _$GMeasureTileInputSerializer();
Serializer<GAdvanceDirectiveInput> _$gAdvanceDirectiveInputSerializer =
    new _$GAdvanceDirectiveInputSerializer();
Serializer<GHealthProfessionalInput> _$gHealthProfessionalInputSerializer =
    new _$GHealthProfessionalInputSerializer();
Serializer<GLinkInput> _$gLinkInputSerializer = new _$GLinkInputSerializer();
Serializer<GContactPostInput> _$gContactPostInputSerializer =
    new _$GContactPostInputSerializer();
Serializer<GContactUpdateInput> _$gContactUpdateInputSerializer =
    new _$GContactUpdateInputSerializer();
Serializer<GHealthStructureInput> _$gHealthStructureInputSerializer =
    new _$GHealthStructureInputSerializer();
Serializer<GSendResponseInput> _$gSendResponseInputSerializer =
    new _$GSendResponseInputSerializer();
Serializer<GFileInput> _$gFileInputSerializer = new _$GFileInputSerializer();
Serializer<GEnsDocumentInput> _$gEnsDocumentInputSerializer =
    new _$GEnsDocumentInputSerializer();
Serializer<GRecipientsIdInput> _$gRecipientsIdInputSerializer =
    new _$GRecipientsIdInputSerializer();
Serializer<GSaveNotificationTokenInput>
    _$gSaveNotificationTokenInputSerializer =
    new _$GSaveNotificationTokenInputSerializer();
Serializer<GMobileOsEnum> _$gMobileOsEnumSerializer =
    new _$GMobileOsEnumSerializer();
Serializer<GUserActionInput> _$gUserActionInputSerializer =
    new _$GUserActionInputSerializer();
Serializer<GUserActionEnum> _$gUserActionEnumSerializer =
    new _$GUserActionEnumSerializer();
Serializer<GUserActionParams> _$gUserActionParamsSerializer =
    new _$GUserActionParamsSerializer();
Serializer<GTreatmentInput> _$gTreatmentInputSerializer =
    new _$GTreatmentInputSerializer();
Serializer<GTreatmentUpdateInput> _$gTreatmentUpdateInputSerializer =
    new _$GTreatmentUpdateInputSerializer();
Serializer<GVaccineInput> _$gVaccineInputSerializer =
    new _$GVaccineInputSerializer();
Serializer<GVaccineUpdateInput> _$gVaccineUpdateInputSerializer =
    new _$GVaccineUpdateInputSerializer();
Serializer<GCloseEnsInput> _$gCloseEnsInputSerializer =
    new _$GCloseEnsInputSerializer();
Serializer<GDelegationMatchPotentialDelegateInput>
    _$gDelegationMatchPotentialDelegateInputSerializer =
    new _$GDelegationMatchPotentialDelegateInputSerializer();
Serializer<GDelegationInviteToCaregivingInput>
    _$gDelegationInviteToCaregivingInputSerializer =
    new _$GDelegationInviteToCaregivingInputSerializer();
Serializer<GDelegationAcceptInvitationInput>
    _$gDelegationAcceptInvitationInputSerializer =
    new _$GDelegationAcceptInvitationInputSerializer();
Serializer<GDelegationRefuseInvitationInput>
    _$gDelegationRefuseInvitationInputSerializer =
    new _$GDelegationRefuseInvitationInputSerializer();
Serializer<GDelegationRevokeInput> _$gDelegationRevokeInputSerializer =
    new _$GDelegationRevokeInputSerializer();
Serializer<GHealthQuizResponseInput> _$gHealthQuizResponseInputSerializer =
    new _$GHealthQuizResponseInputSerializer();
Serializer<GResponseInput> _$gResponseInputSerializer =
    new _$GResponseInputSerializer();
Serializer<GFinalityConsentToUpdateInput>
    _$gFinalityConsentToUpdateInputSerializer =
    new _$GFinalityConsentToUpdateInputSerializer();
Serializer<GFinalityCode> _$gFinalityCodeSerializer =
    new _$GFinalityCodeSerializer();
Serializer<GBloodGroupInput> _$gBloodGroupInputSerializer =
    new _$GBloodGroupInputSerializer();
Serializer<GBloodGroupUpdateInput> _$gBloodGroupUpdateInputSerializer =
    new _$GBloodGroupUpdateInputSerializer();

class _$GEpisodeCategorySerializer
    implements PrimitiveSerializer<GEpisodeCategory> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GEpisodeCategory];
  @override
  final String wireName = 'GEpisodeCategory';

  @override
  Object serialize(Serializers serializers, GEpisodeCategory object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GEpisodeCategory deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEpisodeCategory.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GPreferenceNotificationEnumSerializer
    implements PrimitiveSerializer<GPreferenceNotificationEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GPreferenceNotificationEnum];
  @override
  final String wireName = 'GPreferenceNotificationEnum';

  @override
  Object serialize(Serializers serializers, GPreferenceNotificationEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GPreferenceNotificationEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPreferenceNotificationEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDemandeAccesStatutEnumSerializer
    implements PrimitiveSerializer<GDemandeAccesStatutEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDemandeAccesStatutEnum];
  @override
  final String wireName = 'GDemandeAccesStatutEnum';

  @override
  Object serialize(Serializers serializers, GDemandeAccesStatutEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDemandeAccesStatutEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDemandeAccesStatutEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GHealthProfessionalEnumSerializer
    implements PrimitiveSerializer<GHealthProfessionalEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GHealthProfessionalEnum];
  @override
  final String wireName = 'GHealthProfessionalEnum';

  @override
  Object serialize(Serializers serializers, GHealthProfessionalEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GHealthProfessionalEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GHealthProfessionalEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GHealthProfessionalRoleEnumSerializer
    implements PrimitiveSerializer<GHealthProfessionalRoleEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GHealthProfessionalRoleEnum];
  @override
  final String wireName = 'GHealthProfessionalRoleEnum';

  @override
  Object serialize(Serializers serializers, GHealthProfessionalRoleEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GHealthProfessionalRoleEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GHealthProfessionalRoleEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GReplyTypeEnumSerializer
    implements PrimitiveSerializer<GReplyTypeEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GReplyTypeEnum];
  @override
  final String wireName = 'GReplyTypeEnum';

  @override
  Object serialize(Serializers serializers, GReplyTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GReplyTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GReplyTypeEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GAgendaAuthorTypeEnumSerializer
    implements PrimitiveSerializer<GAgendaAuthorTypeEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GAgendaAuthorTypeEnum];
  @override
  final String wireName = 'GAgendaAuthorTypeEnum';

  @override
  Object serialize(Serializers serializers, GAgendaAuthorTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GAgendaAuthorTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAgendaAuthorTypeEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GAppointmentTypeSerializer
    implements PrimitiveSerializer<GAppointmentType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GAppointmentType];
  @override
  final String wireName = 'GAppointmentType';

  @override
  Object serialize(Serializers serializers, GAppointmentType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GAppointmentType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAppointmentType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GPreventionTypeEnumSerializer
    implements PrimitiveSerializer<GPreventionTypeEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GPreventionTypeEnum];
  @override
  final String wireName = 'GPreventionTypeEnum';

  @override
  Object serialize(Serializers serializers, GPreventionTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GPreventionTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GPreventionTypeEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GSourceAuthorSerializer implements PrimitiveSerializer<GSourceAuthor> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GSourceAuthor];
  @override
  final String wireName = 'GSourceAuthor';

  @override
  Object serialize(Serializers serializers, GSourceAuthor object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GSourceAuthor deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSourceAuthor.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GCategorySerializer implements PrimitiveSerializer<GCategory> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GCategory];
  @override
  final String wireName = 'GCategory';

  @override
  Object serialize(Serializers serializers, GCategory object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GCategory deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCategory.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GConfidentialitySerializer
    implements PrimitiveSerializer<GConfidentiality> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GConfidentiality];
  @override
  final String wireName = 'GConfidentiality';

  @override
  Object serialize(Serializers serializers, GConfidentiality object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GConfidentiality deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GConfidentiality.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GContactTypeSerializer implements PrimitiveSerializer<GContactType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GContactType];
  @override
  final String wireName = 'GContactType';

  @override
  Object serialize(Serializers serializers, GContactType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GContactType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GContactType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GEntourageRelationSerializer
    implements PrimitiveSerializer<GEntourageRelation> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GEntourageRelation];
  @override
  final String wireName = 'GEntourageRelation';

  @override
  Object serialize(Serializers serializers, GEntourageRelation object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GEntourageRelation deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GEntourageRelation.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GLinkTypeSerializer implements PrimitiveSerializer<GLinkType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GLinkType];
  @override
  final String wireName = 'GLinkType';

  @override
  Object serialize(Serializers serializers, GLinkType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GLinkType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GLinkType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GServiceStatusEnumSerializer
    implements PrimitiveSerializer<GServiceStatusEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GServiceStatusEnum];
  @override
  final String wireName = 'GServiceStatusEnum';

  @override
  Object serialize(Serializers serializers, GServiceStatusEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GServiceStatusEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GServiceStatusEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDisabilitiesTypesEnumSerializer
    implements PrimitiveSerializer<GDisabilitiesTypesEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDisabilitiesTypesEnum];
  @override
  final String wireName = 'GDisabilitiesTypesEnum';

  @override
  Object serialize(Serializers serializers, GDisabilitiesTypesEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDisabilitiesTypesEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDisabilitiesTypesEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDisabilityRateEnumSerializer
    implements PrimitiveSerializer<GDisabilityRateEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDisabilityRateEnum];
  @override
  final String wireName = 'GDisabilityRateEnum';

  @override
  Object serialize(Serializers serializers, GDisabilityRateEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDisabilityRateEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDisabilityRateEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GHumanHelpEnumSerializer
    implements PrimitiveSerializer<GHumanHelpEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GHumanHelpEnum];
  @override
  final String wireName = 'GHumanHelpEnum';

  @override
  Object serialize(Serializers serializers, GHumanHelpEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GHumanHelpEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GHumanHelpEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GFamilyRelationshipEnumSerializer
    implements PrimitiveSerializer<GFamilyRelationshipEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GFamilyRelationshipEnum];
  @override
  final String wireName = 'GFamilyRelationshipEnum';

  @override
  Object serialize(Serializers serializers, GFamilyRelationshipEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GFamilyRelationshipEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GFamilyRelationshipEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDiseaseEpisodeTypeSerializer
    implements PrimitiveSerializer<GDiseaseEpisodeType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDiseaseEpisodeType];
  @override
  final String wireName = 'GDiseaseEpisodeType';

  @override
  Object serialize(Serializers serializers, GDiseaseEpisodeType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDiseaseEpisodeType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDiseaseEpisodeType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GVaccineTypeOfAdministrationEnumSerializer
    implements PrimitiveSerializer<GVaccineTypeOfAdministrationEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GVaccineTypeOfAdministrationEnum];
  @override
  final String wireName = 'GVaccineTypeOfAdministrationEnum';

  @override
  Object serialize(
          Serializers serializers, GVaccineTypeOfAdministrationEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GVaccineTypeOfAdministrationEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GVaccineTypeOfAdministrationEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GMeasureCodeSerializer implements PrimitiveSerializer<GMeasureCode> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GMeasureCode];
  @override
  final String wireName = 'GMeasureCode';

  @override
  Object serialize(Serializers serializers, GMeasureCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GMeasureCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMeasureCode.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GMeasureCategorySerializer
    implements PrimitiveSerializer<GMeasureCategory> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GMeasureCategory];
  @override
  final String wireName = 'GMeasureCategory';

  @override
  Object serialize(Serializers serializers, GMeasureCategory object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GMeasureCategory deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMeasureCategory.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GMeasureGenderSerializer
    implements PrimitiveSerializer<GMeasureGender> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GMeasureGender];
  @override
  final String wireName = 'GMeasureGender';

  @override
  Object serialize(Serializers serializers, GMeasureGender object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GMeasureGender deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMeasureGender.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GAuthorTypeSerializer implements PrimitiveSerializer<GAuthorType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GAuthorType];
  @override
  final String wireName = 'GAuthorType';

  @override
  Object serialize(Serializers serializers, GAuthorType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GAuthorType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GAuthorType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GLifestyleItemDisplayEnumSerializer
    implements PrimitiveSerializer<GLifestyleItemDisplayEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GLifestyleItemDisplayEnum];
  @override
  final String wireName = 'GLifestyleItemDisplayEnum';

  @override
  Object serialize(Serializers serializers, GLifestyleItemDisplayEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GLifestyleItemDisplayEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GLifestyleItemDisplayEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GLifestyleSectionEnumSerializer
    implements PrimitiveSerializer<GLifestyleSectionEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GLifestyleSectionEnum];
  @override
  final String wireName = 'GLifestyleSectionEnum';

  @override
  Object serialize(Serializers serializers, GLifestyleSectionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GLifestyleSectionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GLifestyleSectionEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GLifestyleCreationTypeEnumSerializer
    implements PrimitiveSerializer<GLifestyleCreationTypeEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GLifestyleCreationTypeEnum];
  @override
  final String wireName = 'GLifestyleCreationTypeEnum';

  @override
  Object serialize(Serializers serializers, GLifestyleCreationTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GLifestyleCreationTypeEnum deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GLifestyleCreationTypeEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GProfileTypeSerializer implements PrimitiveSerializer<GProfileType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GProfileType];
  @override
  final String wireName = 'GProfileType';

  @override
  Object serialize(Serializers serializers, GProfileType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GProfileType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GProfileType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GActorTypeSerializer implements PrimitiveSerializer<GActorType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GActorType];
  @override
  final String wireName = 'GActorType';

  @override
  Object serialize(Serializers serializers, GActorType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GActorType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GActorType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GResourceTypeSerializer implements PrimitiveSerializer<GResourceType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GResourceType];
  @override
  final String wireName = 'GResourceType';

  @override
  Object serialize(Serializers serializers, GResourceType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GResourceType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GResourceType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GGenderSerializer implements PrimitiveSerializer<GGender> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GGender];
  @override
  final String wireName = 'GGender';

  @override
  Object serialize(Serializers serializers, GGender object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GGender deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GGender.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDelegationInvitationStatusSerializer
    implements PrimitiveSerializer<GDelegationInvitationStatus> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDelegationInvitationStatus];
  @override
  final String wireName = 'GDelegationInvitationStatus';

  @override
  Object serialize(Serializers serializers, GDelegationInvitationStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDelegationInvitationStatus deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDelegationInvitationStatus.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDelegationTypeSerializer
    implements PrimitiveSerializer<GDelegationType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDelegationType];
  @override
  final String wireName = 'GDelegationType';

  @override
  Object serialize(Serializers serializers, GDelegationType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDelegationType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDelegationType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDelegationDirectionSerializer
    implements PrimitiveSerializer<GDelegationDirection> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDelegationDirection];
  @override
  final String wireName = 'GDelegationDirection';

  @override
  Object serialize(Serializers serializers, GDelegationDirection object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDelegationDirection deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDelegationDirection.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GActivityActorTypeSerializer
    implements PrimitiveSerializer<GActivityActorType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GActivityActorType];
  @override
  final String wireName = 'GActivityActorType';

  @override
  Object serialize(Serializers serializers, GActivityActorType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GActivityActorType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GActivityActorType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GChoiceQuestionTypeSerializer
    implements PrimitiveSerializer<GChoiceQuestionType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GChoiceQuestionType];
  @override
  final String wireName = 'GChoiceQuestionType';

  @override
  Object serialize(Serializers serializers, GChoiceQuestionType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GChoiceQuestionType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GChoiceQuestionType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GHealthQuizCompletionStatusSerializer
    implements PrimitiveSerializer<GHealthQuizCompletionStatus> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GHealthQuizCompletionStatus];
  @override
  final String wireName = 'GHealthQuizCompletionStatus';

  @override
  Object serialize(Serializers serializers, GHealthQuizCompletionStatus object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GHealthQuizCompletionStatus deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GHealthQuizCompletionStatus.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GRecommendationCodeSerializer
    implements PrimitiveSerializer<GRecommendationCode> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GRecommendationCode];
  @override
  final String wireName = 'GRecommendationCode';

  @override
  Object serialize(Serializers serializers, GRecommendationCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GRecommendationCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GRecommendationCode.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GDurationUnitEnumSerializer
    implements PrimitiveSerializer<GDurationUnitEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDurationUnitEnum];
  @override
  final String wireName = 'GDurationUnitEnum';

  @override
  Object serialize(Serializers serializers, GDurationUnitEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDurationUnitEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDurationUnitEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GBloodGroupEnumSerializer
    implements PrimitiveSerializer<GBloodGroupEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GBloodGroupEnum];
  @override
  final String wireName = 'GBloodGroupEnum';

  @override
  Object serialize(Serializers serializers, GBloodGroupEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GBloodGroupEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GBloodGroupEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GOtpForResetPasswordInputSerializer
    implements StructuredSerializer<GOtpForResetPasswordInput> {
  @override
  final Iterable<Type> types = const [
    GOtpForResetPasswordInput,
    _$GOtpForResetPasswordInput
  ];
  @override
  final String wireName = 'GOtpForResetPasswordInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GOtpForResetPasswordInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'nir',
      serializers.serialize(object.nir, specifiedType: const FullType(String)),
      'vitalCardNumber',
      serializers.serialize(object.vitalCardNumber,
          specifiedType: const FullType(String)),
      'dateOfBirth',
      serializers.serialize(object.dateOfBirth,
          specifiedType: const FullType(String)),
      'canalType',
      serializers.serialize(object.canalType,
          specifiedType: const FullType(GCanalType)),
    ];

    return result;
  }

  @override
  GOtpForResetPasswordInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GOtpForResetPasswordInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'nir':
          result.nir = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'vitalCardNumber':
          result.vitalCardNumber = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'dateOfBirth':
          result.dateOfBirth = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'canalType':
          result.canalType = serializers.deserialize(value,
              specifiedType: const FullType(GCanalType))! as GCanalType;
          break;
      }
    }

    return result.build();
  }
}

class _$GCanalTypeSerializer implements PrimitiveSerializer<GCanalType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GCanalType];
  @override
  final String wireName = 'GCanalType';

  @override
  Object serialize(Serializers serializers, GCanalType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GCanalType deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GCanalType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GSendLoginInputSerializer
    implements StructuredSerializer<GSendLoginInput> {
  @override
  final Iterable<Type> types = const [GSendLoginInput, _$GSendLoginInput];
  @override
  final String wireName = 'GSendLoginInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GSendLoginInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'nir',
      serializers.serialize(object.nir, specifiedType: const FullType(String)),
      'dateOfBirth',
      serializers.serialize(object.dateOfBirth,
          specifiedType: const FullType(String)),
      'canalType',
      serializers.serialize(object.canalType,
          specifiedType: const FullType(GCanalType)),
    ];

    return result;
  }

  @override
  GSendLoginInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSendLoginInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'nir':
          result.nir = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'dateOfBirth':
          result.dateOfBirth = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'canalType':
          result.canalType = serializers.deserialize(value,
              specifiedType: const FullType(GCanalType))! as GCanalType;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetPersonalInformationInputSerializer
    implements StructuredSerializer<GGetPersonalInformationInput> {
  @override
  final Iterable<Type> types = const [
    GGetPersonalInformationInput,
    _$GGetPersonalInformationInput
  ];
  @override
  final String wireName = 'GGetPersonalInformationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGetPersonalInformationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGetPersonalInformationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGetPersonalInformationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetCompteInformationInputSerializer
    implements StructuredSerializer<GGetCompteInformationInput> {
  @override
  final Iterable<Type> types = const [
    GGetCompteInformationInput,
    _$GGetCompteInformationInput
  ];
  @override
  final String wireName = 'GGetCompteInformationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGetCompteInformationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'loggedInUserId',
      serializers.serialize(object.loggedInUserId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGetCompteInformationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGetCompteInformationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'loggedInUserId':
          result.loggedInUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetAyantsDroitsInputSerializer
    implements StructuredSerializer<GGetAyantsDroitsInput> {
  @override
  final Iterable<Type> types = const [
    GGetAyantsDroitsInput,
    _$GGetAyantsDroitsInput
  ];
  @override
  final String wireName = 'GGetAyantsDroitsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGetAyantsDroitsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGetAyantsDroitsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGetAyantsDroitsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GEnsHistoryInputSerializer
    implements StructuredSerializer<GEnsHistoryInput> {
  @override
  final Iterable<Type> types = const [GEnsHistoryInput, _$GEnsHistoryInput];
  @override
  final String wireName = 'GEnsHistoryInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GEnsHistoryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GEnsHistoryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEnsHistoryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSynchronizedServicesHistoryInputSerializer
    implements StructuredSerializer<GSynchronizedServicesHistoryInput> {
  @override
  final Iterable<Type> types = const [
    GSynchronizedServicesHistoryInput,
    _$GSynchronizedServicesHistoryInput
  ];
  @override
  final String wireName = 'GSynchronizedServicesHistoryInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSynchronizedServicesHistoryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSynchronizedServicesHistoryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSynchronizedServicesHistoryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GTraceDocumentHistoryInputSerializer
    implements StructuredSerializer<GTraceDocumentHistoryInput> {
  @override
  final Iterable<Type> types = const [
    GTraceDocumentHistoryInput,
    _$GTraceDocumentHistoryInput
  ];
  @override
  final String wireName = 'GTraceDocumentHistoryInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTraceDocumentHistoryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GTraceDocumentHistoryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTraceDocumentHistoryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetDmpConsentementInputSerializer
    implements StructuredSerializer<GGetDmpConsentementInput> {
  @override
  final Iterable<Type> types = const [
    GGetDmpConsentementInput,
    _$GGetDmpConsentementInput
  ];
  @override
  final String wireName = 'GGetDmpConsentementInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGetDmpConsentementInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GGetDmpConsentementInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGetDmpConsentementInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetLegalRepresentativesInputSerializer
    implements StructuredSerializer<GGetLegalRepresentativesInput> {
  @override
  final Iterable<Type> types = const [
    GGetLegalRepresentativesInput,
    _$GGetLegalRepresentativesInput
  ];
  @override
  final String wireName = 'GGetLegalRepresentativesInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGetLegalRepresentativesInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GDelegationTypeEnum)),
    ];

    return result;
  }

  @override
  GGetLegalRepresentativesInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGetLegalRepresentativesInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GDelegationTypeEnum))!
              as GDelegationTypeEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationTypeEnumSerializer
    implements PrimitiveSerializer<GDelegationTypeEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDelegationTypeEnum];
  @override
  final String wireName = 'GDelegationTypeEnum';

  @override
  Object serialize(Serializers serializers, GDelegationTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDelegationTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDelegationTypeEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GAccountGetAccountFamilyInputSerializer
    implements StructuredSerializer<GAccountGetAccountFamilyInput> {
  @override
  final Iterable<Type> types = const [
    GAccountGetAccountFamilyInput,
    _$GAccountGetAccountFamilyInput
  ];
  @override
  final String wireName = 'GAccountGetAccountFamilyInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAccountGetAccountFamilyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.profilsListIndex;
    if (value != null) {
      result
        ..add('profilsListIndex')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(int)])));
    }
    return result;
  }

  @override
  GAccountGetAccountFamilyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccountGetAccountFamilyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'profilsListIndex':
          result.profilsListIndex.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(int)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GGetPendingInvitationInputSerializer
    implements StructuredSerializer<GGetPendingInvitationInput> {
  @override
  final Iterable<Type> types = const [
    GGetPendingInvitationInput,
    _$GGetPendingInvitationInput
  ];
  @override
  final String wireName = 'GGetPendingInvitationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGetPendingInvitationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'idEnsOD',
      serializers.serialize(object.idEnsOD,
          specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GDelegationTypeEnum)),
    ];

    return result;
  }

  @override
  GGetPendingInvitationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGetPendingInvitationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'idEnsOD':
          result.idEnsOD = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GDelegationTypeEnum))!
              as GDelegationTypeEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GDownloadRematInProgressInputSerializer
    implements StructuredSerializer<GDownloadRematInProgressInput> {
  @override
  final Iterable<Type> types = const [
    GDownloadRematInProgressInput,
    _$GDownloadRematInProgressInput
  ];
  @override
  final String wireName = 'GDownloadRematInProgressInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDownloadRematInProgressInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'loggedInUserId',
      serializers.serialize(object.loggedInUserId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDownloadRematInProgressInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDownloadRematInProgressInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'loggedInUserId':
          result.loggedInUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GResearchPsInputSerializer
    implements StructuredSerializer<GResearchPsInput> {
  @override
  final Iterable<Type> types = const [GResearchPsInput, _$GResearchPsInput];
  @override
  final String wireName = 'GResearchPsInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GResearchPsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.lastName;
    if (value != null) {
      result
        ..add('lastName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.firstName;
    if (value != null) {
      result
        ..add('firstName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.cityCode;
    if (value != null) {
      result
        ..add('cityCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.zipCode;
    if (value != null) {
      result
        ..add('zipCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.departmentCode;
    if (value != null) {
      result
        ..add('departmentCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.professionCode;
    if (value != null) {
      result
        ..add('professionCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.experticeCode;
    if (value != null) {
      result
        ..add('experticeCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GResearchPsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GResearchPsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'cityCode':
          result.cityCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'zipCode':
          result.zipCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'departmentCode':
          result.departmentCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'professionCode':
          result.professionCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'experticeCode':
          result.experticeCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GGetCityInputSerializer implements StructuredSerializer<GGetCityInput> {
  @override
  final Iterable<Type> types = const [GGetCityInput, _$GGetCityInput];
  @override
  final String wireName = 'GGetCityInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GGetCityInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'matchingRule',
      serializers.serialize(object.matchingRule,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.cityName;
    if (value != null) {
      result
        ..add('cityName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.zipCode;
    if (value != null) {
      result
        ..add('zipCode')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGetCityInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGetCityInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'cityName':
          result.cityName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'zipCode':
          result.zipCode = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'matchingRule':
          result.matchingRule = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSectionToDownloadSerializer
    implements PrimitiveSerializer<GSectionToDownload> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GSectionToDownload];
  @override
  final String wireName = 'GSectionToDownload';

  @override
  Object serialize(Serializers serializers, GSectionToDownload object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GSectionToDownload deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSectionToDownload.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GAdvanceDirectivesFormEndOfLifeInputSerializer
    implements StructuredSerializer<GAdvanceDirectivesFormEndOfLifeInput> {
  @override
  final Iterable<Type> types = const [
    GAdvanceDirectivesFormEndOfLifeInput,
    _$GAdvanceDirectivesFormEndOfLifeInput
  ];
  @override
  final String wireName = 'GAdvanceDirectivesFormEndOfLifeInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAdvanceDirectivesFormEndOfLifeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'contexte',
      serializers.serialize(object.contexte,
          specifiedType: const FullType(String)),
      'maintientArtificiel',
      serializers.serialize(object.maintientArtificiel,
          specifiedType: const FullType(String)),
      'sedation',
      serializers.serialize(object.sedation,
          specifiedType: const FullType(String)),
      'actesEtTraitementsEntrepris',
      serializers.serialize(object.actesEtTraitementsEntrepris,
          specifiedType: const FullType(GActsAndTreatmentsInput)),
      'actesEtTraitementsArretes',
      serializers.serialize(object.actesEtTraitementsArretes,
          specifiedType: const FullType(GActsAndTreatmentsInput)),
      'actesEtTraitementsSpecifiques',
      serializers.serialize(object.actesEtTraitementsSpecifiques,
          specifiedType: const FullType(GActsAndTreatmentsInput)),
    ];

    return result;
  }

  @override
  GAdvanceDirectivesFormEndOfLifeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAdvanceDirectivesFormEndOfLifeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'contexte':
          result.contexte = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'maintientArtificiel':
          result.maintientArtificiel = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sedation':
          result.sedation = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'actesEtTraitementsEntrepris':
          result.actesEtTraitementsEntrepris.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(GActsAndTreatmentsInput))!
              as GActsAndTreatmentsInput);
          break;
        case 'actesEtTraitementsArretes':
          result.actesEtTraitementsArretes.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(GActsAndTreatmentsInput))!
              as GActsAndTreatmentsInput);
          break;
        case 'actesEtTraitementsSpecifiques':
          result.actesEtTraitementsSpecifiques.replace(serializers.deserialize(
                  value,
                  specifiedType: const FullType(GActsAndTreatmentsInput))!
              as GActsAndTreatmentsInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GActsAndTreatmentsInputSerializer
    implements StructuredSerializer<GActsAndTreatmentsInput> {
  @override
  final Iterable<Type> types = const [
    GActsAndTreatmentsInput,
    _$GActsAndTreatmentsInput
  ];
  @override
  final String wireName = 'GActsAndTreatmentsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GActsAndTreatmentsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.reanimationCardiaque;
    if (value != null) {
      result
        ..add('reanimationCardiaque')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.branchement;
    if (value != null) {
      result
        ..add('branchement')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.interventionChirurgicale;
    if (value != null) {
      result
        ..add('interventionChirurgicale')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.autres;
    if (value != null) {
      result
        ..add('autres')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GActsAndTreatmentsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GActsAndTreatmentsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'reanimationCardiaque':
          result.reanimationCardiaque = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'branchement':
          result.branchement = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'interventionChirurgicale':
          result.interventionChirurgicale = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'autres':
          result.autres = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAdvanceDirectivesFormGoodHealthInputSerializer
    implements StructuredSerializer<GAdvanceDirectivesFormGoodHealthInput> {
  @override
  final Iterable<Type> types = const [
    GAdvanceDirectivesFormGoodHealthInput,
    _$GAdvanceDirectivesFormGoodHealthInput
  ];
  @override
  final String wireName = 'GAdvanceDirectivesFormGoodHealthInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAdvanceDirectivesFormGoodHealthInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'contexte',
      serializers.serialize(object.contexte,
          specifiedType: const FullType(String)),
      'maintientArtificiel',
      serializers.serialize(object.maintientArtificiel,
          specifiedType: const FullType(String)),
      'sedation',
      serializers.serialize(object.sedation,
          specifiedType: const FullType(String)),
      'actesEtTraitements',
      serializers.serialize(object.actesEtTraitements,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GAdvanceDirectivesFormGoodHealthInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAdvanceDirectivesFormGoodHealthInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'contexte':
          result.contexte = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'maintientArtificiel':
          result.maintientArtificiel = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sedation':
          result.sedation = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'actesEtTraitements':
          result.actesEtTraitements = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpisodeInputWithCountSerializer
    implements StructuredSerializer<GEpisodeInputWithCount> {
  @override
  final Iterable<Type> types = const [
    GEpisodeInputWithCount,
    _$GEpisodeInputWithCount
  ];
  @override
  final String wireName = 'GEpisodeInputWithCount';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpisodeInputWithCount object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpisodeCategory)));
    }
    value = object.count;
    if (value != null) {
      result
        ..add('count')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    return result;
  }

  @override
  GEpisodeInputWithCount deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpisodeInputWithCountBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
                  specifiedType: const FullType(GEpisodeCategory))
              as GEpisodeCategory?;
          break;
        case 'count':
          result.count = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpisodeInputSerializer implements StructuredSerializer<GEpisodeInput> {
  @override
  final Iterable<Type> types = const [GEpisodeInput, _$GEpisodeInput];
  @override
  final String wireName = 'GEpisodeInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GEpisodeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpisodeCategory)));
    }
    return result;
  }

  @override
  GEpisodeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpisodeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
                  specifiedType: const FullType(GEpisodeCategory))
              as GEpisodeCategory?;
          break;
      }
    }

    return result.build();
  }
}

class _$GEpisodeInputWithPaginationSerializer
    implements StructuredSerializer<GEpisodeInputWithPagination> {
  @override
  final Iterable<Type> types = const [
    GEpisodeInputWithPagination,
    _$GEpisodeInputWithPagination
  ];
  @override
  final String wireName = 'GEpisodeInputWithPagination';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEpisodeInputWithPagination object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.category;
    if (value != null) {
      result
        ..add('category')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GEpisodeCategory)));
    }
    value = object.currentPage;
    if (value != null) {
      result
        ..add('currentPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    value = object.episodesPerPage;
    if (value != null) {
      result
        ..add('episodesPerPage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    return result;
  }

  @override
  GEpisodeInputWithPagination deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEpisodeInputWithPaginationBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
                  specifiedType: const FullType(GEpisodeCategory))
              as GEpisodeCategory?;
          break;
        case 'currentPage':
          result.currentPage = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
        case 'episodesPerPage':
          result.episodesPerPage = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMessagingPageableInputSerializer
    implements StructuredSerializer<GMessagingPageableInput> {
  @override
  final Iterable<Type> types = const [
    GMessagingPageableInput,
    _$GMessagingPageableInput
  ];
  @override
  final String wireName = 'GMessagingPageableInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMessagingPageableInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'pageable',
      serializers.serialize(object.pageable,
          specifiedType: const FullType(GPageableInput)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.filters;
    if (value != null) {
      result
        ..add('filters')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GFiltersInput)));
    }
    return result;
  }

  @override
  GMessagingPageableInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMessagingPageableInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pageable':
          result.pageable.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageableInput))!
              as GPageableInput);
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'filters':
          result.filters.replace(serializers.deserialize(value,
              specifiedType: const FullType(GFiltersInput))! as GFiltersInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GPageableInputSerializer
    implements StructuredSerializer<GPageableInput> {
  @override
  final Iterable<Type> types = const [GPageableInput, _$GPageableInput];
  @override
  final String wireName = 'GPageableInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GPageableInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.itemsPerPage;
    if (value != null) {
      result
        ..add('itemsPerPage')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    value = object.page;
    if (value != null) {
      result
        ..add('page')
        ..add(serializers.serialize(value, specifiedType: const FullType(int)));
    }
    return result;
  }

  @override
  GPageableInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GPageableInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'itemsPerPage':
          result.itemsPerPage = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
        case 'page':
          result.page = serializers.deserialize(value,
              specifiedType: const FullType(int)) as int?;
          break;
      }
    }

    return result.build();
  }
}

class _$GFiltersInputSerializer implements StructuredSerializer<GFiltersInput> {
  @override
  final Iterable<Type> types = const [GFiltersInput, _$GFiltersInput];
  @override
  final String wireName = 'GFiltersInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GFiltersInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.withNewMessage;
    if (value != null) {
      result
        ..add('withNewMessage')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GFiltersInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFiltersInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'withNewMessage':
          result.withNewMessage = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMessageInputSerializer implements StructuredSerializer<GMessageInput> {
  @override
  final Iterable<Type> types = const [GMessageInput, _$GMessageInput];
  @override
  final String wireName = 'GMessageInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMessageInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'messageId',
      serializers.serialize(object.messageId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GMessageInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMessageInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'messageId':
          result.messageId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMessagingInputSerializer
    implements StructuredSerializer<GMessagingInput> {
  @override
  final Iterable<Type> types = const [GMessagingInput, _$GMessagingInput];
  @override
  final String wireName = 'GMessagingInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMessagingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'conversationId',
      serializers.serialize(object.conversationId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GMessagingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMessagingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'conversationId':
          result.conversationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GHealthProfessionalEmailsInputSerializer
    implements StructuredSerializer<GHealthProfessionalEmailsInput> {
  @override
  final Iterable<Type> types = const [
    GHealthProfessionalEmailsInput,
    _$GHealthProfessionalEmailsInput
  ];
  @override
  final String wireName = 'GHealthProfessionalEmailsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHealthProfessionalEmailsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.emails;
    if (value != null) {
      result
        ..add('emails')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GHealthProfessionalEmailsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHealthProfessionalEmailsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'emails':
          result.emails.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GContactDetailsInputSerializer
    implements StructuredSerializer<GContactDetailsInput> {
  @override
  final Iterable<Type> types = const [
    GContactDetailsInput,
    _$GContactDetailsInput
  ];
  @override
  final String wireName = 'GContactDetailsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GContactDetailsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type, specifiedType: const FullType(String)),
      'idNat',
      serializers.serialize(object.idNat,
          specifiedType: const FullType(String)),
      'typeBal',
      serializers.serialize(object.typeBal,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GContactDetailsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GContactDetailsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'idNat':
          result.idNat = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'typeBal':
          result.typeBal = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GTypeDemandeSerializer implements PrimitiveSerializer<GTypeDemande> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GTypeDemande];
  @override
  final String wireName = 'GTypeDemande';

  @override
  Object serialize(Serializers serializers, GTypeDemande object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GTypeDemande deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTypeDemande.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GMeasureGrowthMetricsParamsSerializer
    implements StructuredSerializer<GMeasureGrowthMetricsParams> {
  @override
  final Iterable<Type> types = const [
    GMeasureGrowthMetricsParams,
    _$GMeasureGrowthMetricsParams
  ];
  @override
  final String wireName = 'GMeasureGrowthMetricsParams';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMeasureGrowthMetricsParams object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'code',
      serializers.serialize(object.code,
          specifiedType: const FullType(GMeasureCode)),
      'gender',
      serializers.serialize(object.gender,
          specifiedType: const FullType(GMeasureGender)),
      'birthdate',
      serializers.serialize(object.birthdate,
          specifiedType: const FullType(String)),
      'startPeriod',
      serializers.serialize(object.startPeriod,
          specifiedType: const FullType(String)),
      'endPeriod',
      serializers.serialize(object.endPeriod,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.categories;
    if (value != null) {
      result
        ..add('categories')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GMeasureCategory)])));
    }
    value = object.isReducedDataForChart;
    if (value != null) {
      result
        ..add('isReducedDataForChart')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GMeasureGrowthMetricsParams deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMeasureGrowthMetricsParamsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(GMeasureCode))! as GMeasureCode;
          break;
        case 'gender':
          result.gender = serializers.deserialize(value,
              specifiedType: const FullType(GMeasureGender))! as GMeasureGender;
          break;
        case 'birthdate':
          result.birthdate = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'categories':
          result.categories.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMeasureCategory)]))!
              as BuiltList<Object?>);
          break;
        case 'startPeriod':
          result.startPeriod = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'endPeriod':
          result.endPeriod = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'isReducedDataForChart':
          result.isReducedDataForChart = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMeasurePageableInputSerializer
    implements StructuredSerializer<GMeasurePageableInput> {
  @override
  final Iterable<Type> types = const [
    GMeasurePageableInput,
    _$GMeasurePageableInput
  ];
  @override
  final String wireName = 'GMeasurePageableInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMeasurePageableInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'pageable',
      serializers.serialize(object.pageable,
          specifiedType: const FullType(GPageableInput)),
      'code',
      serializers.serialize(object.code,
          specifiedType: const FullType(GMeasureCode)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.startPeriod;
    if (value != null) {
      result
        ..add('startPeriod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endPeriod;
    if (value != null) {
      result
        ..add('endPeriod')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMeasurePageableInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMeasurePageableInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pageable':
          result.pageable.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GPageableInput))!
              as GPageableInput);
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(GMeasureCode))! as GMeasureCode;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'startPeriod':
          result.startPeriod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endPeriod':
          result.endPeriod = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GHealthProfessionalTraceInputSerializer
    implements StructuredSerializer<GHealthProfessionalTraceInput> {
  @override
  final Iterable<Type> types = const [
    GHealthProfessionalTraceInput,
    _$GHealthProfessionalTraceInput
  ];
  @override
  final String wireName = 'GHealthProfessionalTraceInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHealthProfessionalTraceInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'rppsId',
      serializers.serialize(object.rppsId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GHealthProfessionalTraceInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHealthProfessionalTraceInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'rppsId':
          result.rppsId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSectionUriEnumSerializer
    implements PrimitiveSerializer<GSectionUriEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GSectionUriEnum];
  @override
  final String wireName = 'GSectionUriEnum';

  @override
  Object serialize(Serializers serializers, GSectionUriEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GSectionUriEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GSectionUriEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GSearchStructureInputModelSerializer
    implements StructuredSerializer<GSearchStructureInputModel> {
  @override
  final Iterable<Type> types = const [
    GSearchStructureInputModel,
    _$GSearchStructureInputModel
  ];
  @override
  final String wireName = 'GSearchStructureInputModel';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSearchStructureInputModel object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.codeCommune;
    if (value != null) {
      result
        ..add('codeCommune')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.codeDepartement;
    if (value != null) {
      result
        ..add('codeDepartement')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.codePostal;
    if (value != null) {
      result
        ..add('codePostal')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSearchStructureInputModel deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSearchStructureInputModelBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'codeCommune':
          result.codeCommune = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'codeDepartement':
          result.codeDepartement = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'codePostal':
          result.codePostal = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GTypeSuggestionSerializer
    implements PrimitiveSerializer<GTypeSuggestion> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GTypeSuggestion];
  @override
  final String wireName = 'GTypeSuggestion';

  @override
  Object serialize(Serializers serializers, GTypeSuggestion object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GTypeSuggestion deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GTypeSuggestion.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GFileGetInputSerializer implements StructuredSerializer<GFileGetInput> {
  @override
  final Iterable<Type> types = const [GFileGetInput, _$GFileGetInput];
  @override
  final String wireName = 'GFileGetInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GFileGetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'fileId',
      serializers.serialize(object.fileId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GFileGetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFileGetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fileId':
          result.fileId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationInvitationFilterSerializer
    implements StructuredSerializer<GDelegationInvitationFilter> {
  @override
  final Iterable<Type> types = const [
    GDelegationInvitationFilter,
    _$GDelegationInvitationFilter
  ];
  @override
  final String wireName = 'GDelegationInvitationFilter';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDelegationInvitationFilter object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDelegationInvitationStatus)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDelegationType)));
    }
    value = object.direction;
    if (value != null) {
      result
        ..add('direction')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDelegationDirection)));
    }
    return result;
  }

  @override
  GDelegationInvitationFilter deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDelegationInvitationFilterBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GDelegationInvitationStatus))
              as GDelegationInvitationStatus?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GDelegationType))
              as GDelegationType?;
          break;
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GDelegationDirection))
              as GDelegationDirection?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationFilterSerializer
    implements StructuredSerializer<GDelegationFilter> {
  @override
  final Iterable<Type> types = const [GDelegationFilter, _$GDelegationFilter];
  @override
  final String wireName = 'GDelegationFilter';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDelegationFilter object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.onlyActive;
    if (value != null) {
      result
        ..add('onlyActive')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.withDetails;
    if (value != null) {
      result
        ..add('withDetails')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.type;
    if (value != null) {
      result
        ..add('type')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDelegationType)));
    }
    value = object.direction;
    if (value != null) {
      result
        ..add('direction')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDelegationDirection)));
    }
    return result;
  }

  @override
  GDelegationFilter deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDelegationFilterBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'onlyActive':
          result.onlyActive = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'withDetails':
          result.withDetails = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GDelegationType))
              as GDelegationType?;
          break;
        case 'direction':
          result.direction = serializers.deserialize(value,
                  specifiedType: const FullType(GDelegationDirection))
              as GDelegationDirection?;
          break;
      }
    }

    return result.build();
  }
}

class _$GActivityTraceGroupSerializer
    implements PrimitiveSerializer<GActivityTraceGroup> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GActivityTraceGroup];
  @override
  final String wireName = 'GActivityTraceGroup';

  @override
  Object serialize(Serializers serializers, GActivityTraceGroup object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GActivityTraceGroup deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GActivityTraceGroup.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GActivityTraceSortSerializer
    implements PrimitiveSerializer<GActivityTraceSort> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GActivityTraceSort];
  @override
  final String wireName = 'GActivityTraceSort';

  @override
  Object serialize(Serializers serializers, GActivityTraceSort object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GActivityTraceSort deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GActivityTraceSort.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GActivityTraceFilterInputSerializer
    implements StructuredSerializer<GActivityTraceFilterInput> {
  @override
  final Iterable<Type> types = const [
    GActivityTraceFilterInput,
    _$GActivityTraceFilterInput
  ];
  @override
  final String wireName = 'GActivityTraceFilterInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GActivityTraceFilterInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.startDate;
    if (value != null) {
      result
        ..add('startDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endDate;
    if (value != null) {
      result
        ..add('endDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GActivityTraceFilterInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GActivityTraceFilterInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'startDate':
          result.startDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endDate':
          result.endDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSendOtpUpdateContactInputSerializer
    implements StructuredSerializer<GSendOtpUpdateContactInput> {
  @override
  final Iterable<Type> types = const [
    GSendOtpUpdateContactInput,
    _$GSendOtpUpdateContactInput
  ];
  @override
  final String wireName = 'GSendOtpUpdateContactInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSendOtpUpdateContactInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'canalType',
      serializers.serialize(object.canalType,
          specifiedType: const FullType(GCanalType)),
      'canalValue',
      serializers.serialize(object.canalValue,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSendOtpUpdateContactInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSendOtpUpdateContactInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'canalType':
          result.canalType = serializers.deserialize(value,
              specifiedType: const FullType(GCanalType))! as GCanalType;
          break;
        case 'canalValue':
          result.canalValue = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GVerifyOtpUpdateContactInputSerializer
    implements StructuredSerializer<GVerifyOtpUpdateContactInput> {
  @override
  final Iterable<Type> types = const [
    GVerifyOtpUpdateContactInput,
    _$GVerifyOtpUpdateContactInput
  ];
  @override
  final String wireName = 'GVerifyOtpUpdateContactInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVerifyOtpUpdateContactInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'canalType',
      serializers.serialize(object.canalType,
          specifiedType: const FullType(GCanalType)),
      'otpCode',
      serializers.serialize(object.otpCode,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GVerifyOtpUpdateContactInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVerifyOtpUpdateContactInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'canalType':
          result.canalType = serializers.deserialize(value,
              specifiedType: const FullType(GCanalType))! as GCanalType;
          break;
        case 'otpCode':
          result.otpCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GGenerateNewEnrolmentCodeInputSerializer
    implements StructuredSerializer<GGenerateNewEnrolmentCodeInput> {
  @override
  final Iterable<Type> types = const [
    GGenerateNewEnrolmentCodeInput,
    _$GGenerateNewEnrolmentCodeInput
  ];
  @override
  final String wireName = 'GGenerateNewEnrolmentCodeInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GGenerateNewEnrolmentCodeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'nir',
      serializers.serialize(object.nir, specifiedType: const FullType(String)),
      'vitalCardNumber',
      serializers.serialize(object.vitalCardNumber,
          specifiedType: const FullType(String)),
      'dateOfBirth',
      serializers.serialize(object.dateOfBirth,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.nirFutureUser;
    if (value != null) {
      result
        ..add('nirFutureUser')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GGenerateNewEnrolmentCodeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GGenerateNewEnrolmentCodeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'nir':
          result.nir = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'vitalCardNumber':
          result.vitalCardNumber = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'dateOfBirth':
          result.dateOfBirth = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'nirFutureUser':
          result.nirFutureUser = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GSendNewEnrolmentCodeInputSerializer
    implements StructuredSerializer<GSendNewEnrolmentCodeInput> {
  @override
  final Iterable<Type> types = const [
    GSendNewEnrolmentCodeInput,
    _$GSendNewEnrolmentCodeInput
  ];
  @override
  final String wireName = 'GSendNewEnrolmentCodeInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSendNewEnrolmentCodeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'canalType',
      serializers.serialize(object.canalType,
          specifiedType: const FullType(GCanalType)),
    ];

    return result;
  }

  @override
  GSendNewEnrolmentCodeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSendNewEnrolmentCodeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'canalType':
          result.canalType = serializers.deserialize(value,
              specifiedType: const FullType(GCanalType))! as GCanalType;
          break;
      }
    }

    return result.build();
  }
}

class _$GVitalCardAuthenticationInputSerializer
    implements StructuredSerializer<GVitalCardAuthenticationInput> {
  @override
  final Iterable<Type> types = const [
    GVitalCardAuthenticationInput,
    _$GVitalCardAuthenticationInput
  ];
  @override
  final String wireName = 'GVitalCardAuthenticationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVitalCardAuthenticationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'enrolmentCode',
      serializers.serialize(object.enrolmentCode,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.nir;
    if (value != null) {
      result
        ..add('nir')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.vitalCardNumber;
    if (value != null) {
      result
        ..add('vitalCardNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVitalCardAuthenticationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVitalCardAuthenticationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'nir':
          result.nir = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'vitalCardNumber':
          result.vitalCardNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'enrolmentCode':
          result.enrolmentCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateAccountEnsInputSerializer
    implements StructuredSerializer<GCreateAccountEnsInput> {
  @override
  final Iterable<Type> types = const [
    GCreateAccountEnsInput,
    _$GCreateAccountEnsInput
  ];
  @override
  final String wireName = 'GCreateAccountEnsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateAccountEnsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'password',
      serializers.serialize(object.password,
          specifiedType: const FullType(String)),
      'loginId',
      serializers.serialize(object.loginId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GCreateAccountEnsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateAccountEnsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'password':
          result.password = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'loginId':
          result.loginId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GFinalitiesConsentsToUpdateInputSerializer
    implements StructuredSerializer<GFinalitiesConsentsToUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GFinalitiesConsentsToUpdateInput,
    _$GFinalitiesConsentsToUpdateInput
  ];
  @override
  final String wireName = 'GFinalitiesConsentsToUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GFinalitiesConsentsToUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'pairingId',
      serializers.serialize(object.pairingId,
          specifiedType: const FullType(String)),
      'finalities',
      serializers.serialize(object.finalities,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GFinalityInput)])),
    ];

    return result;
  }

  @override
  GFinalitiesConsentsToUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFinalitiesConsentsToUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'pairingId':
          result.pairingId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'finalities':
          result.finalities.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GFinalityInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GFinalityInputSerializer
    implements StructuredSerializer<GFinalityInput> {
  @override
  final Iterable<Type> types = const [GFinalityInput, _$GFinalityInput];
  @override
  final String wireName = 'GFinalityInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GFinalityInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(double)),
      'libelle',
      serializers.serialize(object.libelle,
          specifiedType: const FullType(String)),
      'description',
      serializers.serialize(object.description,
          specifiedType: const FullType(String)),
      'codeFinalite',
      serializers.serialize(object.codeFinalite,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.consenti;
    if (value != null) {
      result
        ..add('consenti')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GFinalityInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFinalityInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
        case 'libelle':
          result.libelle = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'codeFinalite':
          result.codeFinalite = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'consenti':
          result.consenti = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GChangeFinalityConsentByServiceOidInputSerializer
    implements StructuredSerializer<GChangeFinalityConsentByServiceOidInput> {
  @override
  final Iterable<Type> types = const [
    GChangeFinalityConsentByServiceOidInput,
    _$GChangeFinalityConsentByServiceOidInput
  ];
  @override
  final String wireName = 'GChangeFinalityConsentByServiceOidInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GChangeFinalityConsentByServiceOidInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'oid',
      serializers.serialize(object.oid, specifiedType: const FullType(String)),
      'contexte',
      serializers.serialize(object.contexte,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GChangeFinalityConsentByServiceOidInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GChangeFinalityConsentByServiceOidInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'oid':
          result.oid = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'contexte':
          result.contexte = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GChangePasswordInputSerializer
    implements StructuredSerializer<GChangePasswordInput> {
  @override
  final Iterable<Type> types = const [
    GChangePasswordInput,
    _$GChangePasswordInput
  ];
  @override
  final String wireName = 'GChangePasswordInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GChangePasswordInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'currentPassword',
      serializers.serialize(object.currentPassword,
          specifiedType: const FullType(String)),
      'newPassword',
      serializers.serialize(object.newPassword,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GChangePasswordInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GChangePasswordInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'currentPassword':
          result.currentPassword = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'newPassword':
          result.newPassword = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GChangeContactInputSerializer
    implements StructuredSerializer<GChangeContactInput> {
  @override
  final Iterable<Type> types = const [
    GChangeContactInput,
    _$GChangeContactInput
  ];
  @override
  final String wireName = 'GChangeContactInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GChangeContactInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GChangeContactInputCanalType)),
    ];

    return result;
  }

  @override
  GChangeContactInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GChangeContactInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GChangeContactInputCanalType))!
              as GChangeContactInputCanalType;
          break;
      }
    }

    return result.build();
  }
}

class _$GChangeContactInputCanalTypeSerializer
    implements PrimitiveSerializer<GChangeContactInputCanalType> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GChangeContactInputCanalType];
  @override
  final String wireName = 'GChangeContactInputCanalType';

  @override
  Object serialize(Serializers serializers, GChangeContactInputCanalType object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GChangeContactInputCanalType deserialize(
          Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GChangeContactInputCanalType.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GValidateOtpInputSerializer
    implements StructuredSerializer<GValidateOtpInput> {
  @override
  final Iterable<Type> types = const [GValidateOtpInput, _$GValidateOtpInput];
  @override
  final String wireName = 'GValidateOtpInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GValidateOtpInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'code',
      serializers.serialize(object.code, specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GValidateOtpInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GValidateOtpInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GChangePreferenceNotificationInputSerializer
    implements StructuredSerializer<GChangePreferenceNotificationInput> {
  @override
  final Iterable<Type> types = const [
    GChangePreferenceNotificationInput,
    _$GChangePreferenceNotificationInput
  ];
  @override
  final String wireName = 'GChangePreferenceNotificationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GChangePreferenceNotificationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'typeNotification',
      serializers.serialize(object.typeNotification,
          specifiedType: const FullType(GPreferenceNotificationEnum)),
      'isActive',
      serializers.serialize(object.isActive,
          specifiedType: const FullType(bool)),
    ];

    return result;
  }

  @override
  GChangePreferenceNotificationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GChangePreferenceNotificationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'typeNotification':
          result.typeNotification = serializers.deserialize(value,
                  specifiedType: const FullType(GPreferenceNotificationEnum))!
              as GPreferenceNotificationEnum;
          break;
        case 'isActive':
          result.isActive = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GInvitationSecondRLInputSerializer
    implements StructuredSerializer<GInvitationSecondRLInput> {
  @override
  final Iterable<Type> types = const [
    GInvitationSecondRLInput,
    _$GInvitationSecondRLInput
  ];
  @override
  final String wireName = 'GInvitationSecondRLInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GInvitationSecondRLInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'loggedInUserId',
      serializers.serialize(object.loggedInUserId,
          specifiedType: const FullType(String)),
      'selectedEnsProfileId',
      serializers.serialize(object.selectedEnsProfileId,
          specifiedType: const FullType(String)),
      'newRepresentativeLegal',
      serializers.serialize(object.newRepresentativeLegal,
          specifiedType: const FullType(GSecondRLInformationInput)),
    ];

    return result;
  }

  @override
  GInvitationSecondRLInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GInvitationSecondRLInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'loggedInUserId':
          result.loggedInUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'selectedEnsProfileId':
          result.selectedEnsProfileId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'newRepresentativeLegal':
          result.newRepresentativeLegal.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GSecondRLInformationInput))!
              as GSecondRLInformationInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GSecondRLInformationInputSerializer
    implements StructuredSerializer<GSecondRLInformationInput> {
  @override
  final Iterable<Type> types = const [
    GSecondRLInformationInput,
    _$GSecondRLInformationInput
  ];
  @override
  final String wireName = 'GSecondRLInformationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSecondRLInformationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'nir',
      serializers.serialize(object.nir, specifiedType: const FullType(String)),
      'lastName',
      serializers.serialize(object.lastName,
          specifiedType: const FullType(String)),
      'firstName',
      serializers.serialize(object.firstName,
          specifiedType: const FullType(String)),
      'birthDate',
      serializers.serialize(object.birthDate,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GSecondRLInformationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSecondRLInformationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'nir':
          result.nir = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'birthDate':
          result.birthDate = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAccountActiveProfilsInputSerializer
    implements StructuredSerializer<GAccountActiveProfilsInput> {
  @override
  final Iterable<Type> types = const [
    GAccountActiveProfilsInput,
    _$GAccountActiveProfilsInput
  ];
  @override
  final String wireName = 'GAccountActiveProfilsInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAccountActiveProfilsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'profilsListIndex',
      serializers.serialize(object.profilsListIndex,
          specifiedType:
              const FullType(BuiltList, const [const FullType(int)])),
    ];

    return result;
  }

  @override
  GAccountActiveProfilsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccountActiveProfilsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'profilsListIndex':
          result.profilsListIndex.replace(serializers.deserialize(value,
                  specifiedType:
                      const FullType(BuiltList, const [const FullType(int)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAccessValidatedOrRejectedInputSerializer
    implements StructuredSerializer<GAccessValidatedOrRejectedInput> {
  @override
  final Iterable<Type> types = const [
    GAccessValidatedOrRejectedInput,
    _$GAccessValidatedOrRejectedInput
  ];
  @override
  final String wireName = 'GAccessValidatedOrRejectedInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAccessValidatedOrRejectedInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'idEnsOD',
      serializers.serialize(object.idEnsOD,
          specifiedType: const FullType(String)),
      'idEnsAD',
      serializers.serialize(object.idEnsAD,
          specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GDemandeAccesStatutEnum)),
      'birthDate',
      serializers.serialize(object.birthDate,
          specifiedType: const FullType(String)),
      'firstNameAD',
      serializers.serialize(object.firstNameAD,
          specifiedType: const FullType(String)),
      'lastNameAD',
      serializers.serialize(object.lastNameAD,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GAccessValidatedOrRejectedInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAccessValidatedOrRejectedInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'idEnsOD':
          result.idEnsOD = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'idEnsAD':
          result.idEnsAD = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GDemandeAccesStatutEnum))!
              as GDemandeAccesStatutEnum;
          break;
        case 'birthDate':
          result.birthDate = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'firstNameAD':
          result.firstNameAD = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lastNameAD':
          result.lastNameAD = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAskDeletePersonalDataInputSerializer
    implements StructuredSerializer<GAskDeletePersonalDataInput> {
  @override
  final Iterable<Type> types = const [
    GAskDeletePersonalDataInput,
    _$GAskDeletePersonalDataInput
  ];
  @override
  final String wireName = 'GAskDeletePersonalDataInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAskDeletePersonalDataInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'ensIdConcerne',
      serializers.serialize(object.ensIdConcerne,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GAskDeletePersonalDataInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAskDeletePersonalDataInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'ensIdConcerne':
          result.ensIdConcerne = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppointmentToCreateInputSerializer
    implements StructuredSerializer<GAppointmentToCreateInput> {
  @override
  final Iterable<Type> types = const [
    GAppointmentToCreateInput,
    _$GAppointmentToCreateInput
  ];
  @override
  final String wireName = 'GAppointmentToCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAppointmentToCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GAppointmentType)),
      'professionalOrEstablishmentName',
      serializers.serialize(object.professionalOrEstablishmentName,
          specifiedType: const FullType(String)),
      'date',
      serializers.serialize(object.date, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.speciality;
    if (value != null) {
      result
        ..add('speciality')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.address;
    if (value != null) {
      result
        ..add('address')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.idProfessionnelSante;
    if (value != null) {
      result
        ..add('idProfessionnelSante')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.idEtablissementSante;
    if (value != null) {
      result
        ..add('idEtablissementSante')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAppointmentToCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppointmentToCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GAppointmentType))!
              as GAppointmentType;
          break;
        case 'professionalOrEstablishmentName':
          result.professionalOrEstablishmentName = serializers.deserialize(
              value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'date':
          result.date = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'speciality':
          result.speciality = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'address':
          result.address = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'status':
          result.status = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'idProfessionnelSante':
          result.idProfessionnelSante = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'idEtablissementSante':
          result.idEtablissementSante = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAppointmentToUpdateInputSerializer
    implements StructuredSerializer<GAppointmentToUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GAppointmentToUpdateInput,
    _$GAppointmentToUpdateInput
  ];
  @override
  final String wireName = 'GAppointmentToUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAppointmentToUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GAppointmentType)),
      'professionalOrEstablishmentName',
      serializers.serialize(object.professionalOrEstablishmentName,
          specifiedType: const FullType(String)),
      'date',
      serializers.serialize(object.date, specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.name;
    if (value != null) {
      result
        ..add('name')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.speciality;
    if (value != null) {
      result
        ..add('speciality')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.address;
    if (value != null) {
      result
        ..add('address')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.status;
    if (value != null) {
      result
        ..add('status')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.idProfessionnelSante;
    if (value != null) {
      result
        ..add('idProfessionnelSante')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.idEtablissementSante;
    if (value != null) {
      result
        ..add('idEtablissementSante')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GAppointmentToUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAppointmentToUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
                  specifiedType: const FullType(GAppointmentType))!
              as GAppointmentType;
          break;
        case 'professionalOrEstablishmentName':
          result.professionalOrEstablishmentName = serializers.deserialize(
              value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'date':
          result.date = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'speciality':
          result.speciality = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'address':
          result.address = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'status':
          result.status = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'idProfessionnelSante':
          result.idProfessionnelSante = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'idEtablissementSante':
          result.idEtablissementSante = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GReminderToCreateInputSerializer
    implements StructuredSerializer<GReminderToCreateInput> {
  @override
  final Iterable<Type> types = const [
    GReminderToCreateInput,
    _$GReminderToCreateInput
  ];
  @override
  final String wireName = 'GReminderToCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReminderToCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'date',
      serializers.serialize(object.date, specifiedType: const FullType(String)),
      'comment',
      serializers.serialize(object.comment,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GReminderToCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReminderToCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'date':
          result.date = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GReminderToUpdateInputSerializer
    implements StructuredSerializer<GReminderToUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GReminderToUpdateInput,
    _$GReminderToUpdateInput
  ];
  @override
  final String wireName = 'GReminderToUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReminderToUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'date',
      serializers.serialize(object.date, specifiedType: const FullType(String)),
      'comment',
      serializers.serialize(object.comment,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GReminderToUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReminderToUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'date':
          result.date = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GUpdatePreventionStatusViewModelSerializer
    implements StructuredSerializer<GUpdatePreventionStatusViewModel> {
  @override
  final Iterable<Type> types = const [
    GUpdatePreventionStatusViewModel,
    _$GUpdatePreventionStatusViewModel
  ];
  @override
  final String wireName = 'GUpdatePreventionStatusViewModel';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GUpdatePreventionStatusViewModel object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'code',
      serializers.serialize(object.code, specifiedType: const FullType(String)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'statut',
      serializers.serialize(object.statut,
          specifiedType: const FullType(GPreventionTypeEnum)),
      'dateDebutPrevention',
      serializers.serialize(object.dateDebutPrevention,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.executionDate;
    if (value != null) {
      result
        ..add('executionDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.previousStatus;
    if (value != null) {
      result
        ..add('previousStatus')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GPreventionTypeEnum)));
    }
    return result;
  }

  @override
  GUpdatePreventionStatusViewModel deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUpdatePreventionStatusViewModelBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'statut':
          result.statut = serializers.deserialize(value,
                  specifiedType: const FullType(GPreventionTypeEnum))!
              as GPreventionTypeEnum;
          break;
        case 'dateDebutPrevention':
          result.dateDebutPrevention = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'executionDate':
          result.executionDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'previousStatus':
          result.previousStatus = serializers.deserialize(value,
                  specifiedType: const FullType(GPreventionTypeEnum))
              as GPreventionTypeEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GAllergyInputSerializer implements StructuredSerializer<GAllergyInput> {
  @override
  final Iterable<Type> types = const [GAllergyInput, _$GAllergyInput];
  @override
  final String wireName = 'GAllergyInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAllergyInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkedTreatmentsId;
    if (value != null) {
      result
        ..add('linkedTreatmentsId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GAllergyInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAllergyInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'linkedTreatmentsId':
          result.linkedTreatmentsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GAllergyUpdateInputSerializer
    implements StructuredSerializer<GAllergyUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GAllergyUpdateInput,
    _$GAllergyUpdateInput
  ];
  @override
  final String wireName = 'GAllergyUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAllergyUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkedTreatmentUpdate;
    if (value != null) {
      result
        ..add('linkedTreatmentUpdate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GLinkUpdateInput)])));
    }
    return result;
  }

  @override
  GAllergyUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAllergyUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'linkedTreatmentUpdate':
          result.linkedTreatmentUpdate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLinkUpdateInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GLinkIdInputSerializer implements StructuredSerializer<GLinkIdInput> {
  @override
  final Iterable<Type> types = const [GLinkIdInput, _$GLinkIdInput];
  @override
  final String wireName = 'GLinkIdInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GLinkIdInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GLinkType)),
    ];

    return result;
  }

  @override
  GLinkIdInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLinkIdInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(GLinkType))! as GLinkType;
          break;
      }
    }

    return result.build();
  }
}

class _$GDisabilityInputSerializer
    implements StructuredSerializer<GDisabilityInput> {
  @override
  final Iterable<Type> types = const [GDisabilityInput, _$GDisabilityInput];
  @override
  final String wireName = 'GDisabilityInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDisabilityInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'types',
      serializers.serialize(object.types,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GDisabilitiesTypesEnum)])),
      'humanHelp',
      serializers.serialize(object.humanHelp,
          specifiedType: const FullType(GHumanHelpEnum)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.disabilityRate;
    if (value != null) {
      result
        ..add('disabilityRate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDisabilityRateEnum)));
    }
    value = object.technicalHelp;
    if (value != null) {
      result
        ..add('technicalHelp')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDisabilityInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDisabilityInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'types':
          result.types.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GDisabilitiesTypesEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'disabilityRate':
          result.disabilityRate = serializers.deserialize(value,
                  specifiedType: const FullType(GDisabilityRateEnum))
              as GDisabilityRateEnum?;
          break;
        case 'technicalHelp':
          result.technicalHelp = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'humanHelp':
          result.humanHelp = serializers.deserialize(value,
              specifiedType: const FullType(GHumanHelpEnum))! as GHumanHelpEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GDisabilityUpdateInputSerializer
    implements StructuredSerializer<GDisabilityUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GDisabilityUpdateInput,
    _$GDisabilityUpdateInput
  ];
  @override
  final String wireName = 'GDisabilityUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDisabilityUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'types',
      serializers.serialize(object.types,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GDisabilitiesTypesEnum)])),
      'humanHelp',
      serializers.serialize(object.humanHelp,
          specifiedType: const FullType(GHumanHelpEnum)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.disabilityRate;
    if (value != null) {
      result
        ..add('disabilityRate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GDisabilityRateEnum)));
    }
    value = object.technicalHelp;
    if (value != null) {
      result
        ..add('technicalHelp')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDisabilityUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDisabilityUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'types':
          result.types.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GDisabilitiesTypesEnum)
              ]))! as BuiltList<Object?>);
          break;
        case 'disabilityRate':
          result.disabilityRate = serializers.deserialize(value,
                  specifiedType: const FullType(GDisabilityRateEnum))
              as GDisabilityRateEnum?;
          break;
        case 'technicalHelp':
          result.technicalHelp = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'humanHelp':
          result.humanHelp = serializers.deserialize(value,
              specifiedType: const FullType(GHumanHelpEnum))! as GHumanHelpEnum;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDiseaseInputSerializer implements StructuredSerializer<GDiseaseInput> {
  @override
  final Iterable<Type> types = const [GDiseaseInput, _$GDiseaseInput];
  @override
  final String wireName = 'GDiseaseInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDiseaseInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'startYear',
      serializers.serialize(object.startYear,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDay;
    if (value != null) {
      result
        ..add('startDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startMonth;
    if (value != null) {
      result
        ..add('startMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endDay;
    if (value != null) {
      result
        ..add('endDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endMonth;
    if (value != null) {
      result
        ..add('endMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endYear;
    if (value != null) {
      result
        ..add('endYear')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkedDocumentsId;
    if (value != null) {
      result
        ..add('linkedDocumentsId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.linkedTreatmentsId;
    if (value != null) {
      result
        ..add('linkedTreatmentsId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GDiseaseInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDiseaseInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDay':
          result.startDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startMonth':
          result.startMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startYear':
          result.startYear = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'endDay':
          result.endDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endMonth':
          result.endMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endYear':
          result.endYear = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'linkedDocumentsId':
          result.linkedDocumentsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'linkedTreatmentsId':
          result.linkedTreatmentsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDiseaseUpdateInputSerializer
    implements StructuredSerializer<GDiseaseUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GDiseaseUpdateInput,
    _$GDiseaseUpdateInput
  ];
  @override
  final String wireName = 'GDiseaseUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDiseaseUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'startYear',
      serializers.serialize(object.startYear,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDay;
    if (value != null) {
      result
        ..add('startDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startMonth;
    if (value != null) {
      result
        ..add('startMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endDay;
    if (value != null) {
      result
        ..add('endDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endMonth;
    if (value != null) {
      result
        ..add('endMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endYear;
    if (value != null) {
      result
        ..add('endYear')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkedTreatmentUpdate;
    if (value != null) {
      result
        ..add('linkedTreatmentUpdate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GLinkUpdateInput)])));
    }
    value = object.linkedDocumentUpdate;
    if (value != null) {
      result
        ..add('linkedDocumentUpdate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GLinkUpdateInput)])));
    }
    value = object.linkedDocumentsId;
    if (value != null) {
      result
        ..add('linkedDocumentsId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.linkedTreatmentsId;
    if (value != null) {
      result
        ..add('linkedTreatmentsId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GDiseaseUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDiseaseUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'startDay':
          result.startDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startMonth':
          result.startMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startYear':
          result.startYear = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'endDay':
          result.endDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endMonth':
          result.endMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endYear':
          result.endYear = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'linkedTreatmentUpdate':
          result.linkedTreatmentUpdate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLinkUpdateInput)]))!
              as BuiltList<Object?>);
          break;
        case 'linkedDocumentUpdate':
          result.linkedDocumentUpdate.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GLinkUpdateInput)]))!
              as BuiltList<Object?>);
          break;
        case 'linkedDocumentsId':
          result.linkedDocumentsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'linkedTreatmentsId':
          result.linkedTreatmentsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GLinkUpdateInputSerializer
    implements StructuredSerializer<GLinkUpdateInput> {
  @override
  final Iterable<Type> types = const [GLinkUpdateInput, _$GLinkUpdateInput];
  @override
  final String wireName = 'GLinkUpdateInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GLinkUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'linkId',
      serializers.serialize(object.linkId,
          specifiedType: const FullType(String)),
      'source',
      serializers.serialize(object.source,
          specifiedType: const FullType(GLinkIdInput)),
      'target',
      serializers.serialize(object.target,
          specifiedType: const FullType(GLinkIdInput)),
    ];

    return result;
  }

  @override
  GLinkUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLinkUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'linkId':
          result.linkId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'source':
          result.source.replace(serializers.deserialize(value,
              specifiedType: const FullType(GLinkIdInput))! as GLinkIdInput);
          break;
        case 'target':
          result.target.replace(serializers.deserialize(value,
              specifiedType: const FullType(GLinkIdInput))! as GLinkIdInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentInputSerializer
    implements StructuredSerializer<GDocumentInput> {
  @override
  final Iterable<Type> types = const [GDocumentInput, _$GDocumentInput];
  @override
  final String wireName = 'GDocumentInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDocumentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(GCategory)),
      'attachment',
      serializers.serialize(object.attachment,
          specifiedType: const FullType(String)),
      'mimeType',
      serializers.serialize(object.mimeType,
          specifiedType: const FullType(String)),
      'uploadedBy',
      serializers.serialize(object.uploadedBy,
          specifiedType: const FullType(String)),
      'author',
      serializers.serialize(object.author,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.confidentialities;
    if (value != null) {
      result
        ..add('confidentialities')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GConfidentiality)])));
    }
    value = object.createdAt;
    if (value != null) {
      result
        ..add('createdAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.uploadedAt;
    if (value != null) {
      result
        ..add('uploadedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.folderId;
    if (value != null) {
      result
        ..add('folderId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDocumentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'confidentialities':
          result.confidentialities.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GConfidentiality)]))!
              as BuiltList<Object?>);
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(GCategory))! as GCategory;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'uploadedAt':
          result.uploadedAt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'attachment':
          result.attachment = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'uploadedBy':
          result.uploadedBy = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'author':
          result.author = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'folderId':
          result.folderId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentUpdateInputSerializer
    implements StructuredSerializer<GDocumentUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GDocumentUpdateInput,
    _$GDocumentUpdateInput
  ];
  @override
  final String wireName = 'GDocumentUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDocumentUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(GCategory)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'attachment',
      serializers.serialize(object.attachment,
          specifiedType: const FullType(String)),
      'mimeType',
      serializers.serialize(object.mimeType,
          specifiedType: const FullType(String)),
      'uploadedBy',
      serializers.serialize(object.uploadedBy,
          specifiedType: const FullType(String)),
      'author',
      serializers.serialize(object.author,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.confidentialities;
    if (value != null) {
      result
        ..add('confidentialities')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GConfidentiality)])));
    }
    value = object.uploadedAt;
    if (value != null) {
      result
        ..add('uploadedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDocumentUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'confidentialities':
          result.confidentialities.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GConfidentiality)]))!
              as BuiltList<Object?>);
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(GCategory))! as GCategory;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'uploadedAt':
          result.uploadedAt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'attachment':
          result.attachment = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'uploadedBy':
          result.uploadedBy = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'author':
          result.author = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentPropertiesUpdateInputSerializer
    implements StructuredSerializer<GDocumentPropertiesUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GDocumentPropertiesUpdateInput,
    _$GDocumentPropertiesUpdateInput
  ];
  @override
  final String wireName = 'GDocumentPropertiesUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDocumentPropertiesUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'title',
      serializers.serialize(object.title,
          specifiedType: const FullType(String)),
      'category',
      serializers.serialize(object.category,
          specifiedType: const FullType(GCategory)),
      'createdAt',
      serializers.serialize(object.createdAt,
          specifiedType: const FullType(String)),
      'confidentialities',
      serializers.serialize(object.confidentialities,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GConfidentiality)])),
    ];
    Object? value;
    value = object.uploadedAt;
    if (value != null) {
      result
        ..add('uploadedAt')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.folderId;
    if (value != null) {
      result
        ..add('folderId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDocumentPropertiesUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentPropertiesUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'title':
          result.title = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'category':
          result.category = serializers.deserialize(value,
              specifiedType: const FullType(GCategory))! as GCategory;
          break;
        case 'createdAt':
          result.createdAt = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'uploadedAt':
          result.uploadedAt = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'confidentialities':
          result.confidentialities.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GConfidentiality)]))!
              as BuiltList<Object?>);
          break;
        case 'folderId':
          result.folderId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentDeleteInputSerializer
    implements StructuredSerializer<GDocumentDeleteInput> {
  @override
  final Iterable<Type> types = const [
    GDocumentDeleteInput,
    _$GDocumentDeleteInput
  ];
  @override
  final String wireName = 'GDocumentDeleteInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDocumentDeleteInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'documentId',
      serializers.serialize(object.documentId,
          specifiedType: const FullType(String)),
      'ensUserId',
      serializers.serialize(object.ensUserId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDocumentDeleteInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentDeleteInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'documentId':
          result.documentId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'ensUserId':
          result.ensUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentUpdateConfidentialityInputSerializer
    implements StructuredSerializer<GDocumentUpdateConfidentialityInput> {
  @override
  final Iterable<Type> types = const [
    GDocumentUpdateConfidentialityInput,
    _$GDocumentUpdateConfidentialityInput
  ];
  @override
  final String wireName = 'GDocumentUpdateConfidentialityInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDocumentUpdateConfidentialityInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.confidentialities;
    if (value != null) {
      result
        ..add('confidentialities')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GConfidentiality)])));
    }
    return result;
  }

  @override
  GDocumentUpdateConfidentialityInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentUpdateConfidentialityInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'confidentialities':
          result.confidentialities.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GConfidentiality)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentsDeletionInputSerializer
    implements StructuredSerializer<GDocumentsDeletionInput> {
  @override
  final Iterable<Type> types = const [
    GDocumentsDeletionInput,
    _$GDocumentsDeletionInput
  ];
  @override
  final String wireName = 'GDocumentsDeletionInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDocumentsDeletionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'documentsIds',
      serializers.serialize(object.documentsIds,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDocumentsDeletionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentsDeletionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'documentsIds':
          result.documentsIds.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GSingleDocumentMarkInputSerializer
    implements StructuredSerializer<GSingleDocumentMarkInput> {
  @override
  final Iterable<Type> types = const [
    GSingleDocumentMarkInput,
    _$GSingleDocumentMarkInput
  ];
  @override
  final String wireName = 'GSingleDocumentMarkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSingleDocumentMarkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'document',
      serializers.serialize(object.document,
          specifiedType: const FullType(GDocumentMarkInput)),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSingleDocumentMarkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSingleDocumentMarkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'document':
          result.document.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDocumentMarkInput))!
              as GDocumentMarkInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentMarkInputSerializer
    implements StructuredSerializer<GDocumentMarkInput> {
  @override
  final Iterable<Type> types = const [GDocumentMarkInput, _$GDocumentMarkInput];
  @override
  final String wireName = 'GDocumentMarkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDocumentMarkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.reported;
    if (value != null) {
      result
        ..add('reported')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.pinned;
    if (value != null) {
      result
        ..add('pinned')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GDocumentMarkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentMarkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'reported':
          result.reported = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'pinned':
          result.pinned = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMultipleDocumentsMarkInputSerializer
    implements StructuredSerializer<GMultipleDocumentsMarkInput> {
  @override
  final Iterable<Type> types = const [
    GMultipleDocumentsMarkInput,
    _$GMultipleDocumentsMarkInput
  ];
  @override
  final String wireName = 'GMultipleDocumentsMarkInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMultipleDocumentsMarkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'documents',
      serializers.serialize(object.documents,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GDocumentMarkInput)])),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMultipleDocumentsMarkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMultipleDocumentsMarkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'documents':
          result.documents.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDocumentMarkInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GSingleDocumentPatchInputSerializer
    implements StructuredSerializer<GSingleDocumentPatchInput> {
  @override
  final Iterable<Type> types = const [
    GSingleDocumentPatchInput,
    _$GSingleDocumentPatchInput
  ];
  @override
  final String wireName = 'GSingleDocumentPatchInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSingleDocumentPatchInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'document',
      serializers.serialize(object.document,
          specifiedType: const FullType(GDocumentPatchInput)),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GSingleDocumentPatchInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSingleDocumentPatchInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'document':
          result.document.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GDocumentPatchInput))!
              as GDocumentPatchInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentPatchInputSerializer
    implements StructuredSerializer<GDocumentPatchInput> {
  @override
  final Iterable<Type> types = const [
    GDocumentPatchInput,
    _$GDocumentPatchInput
  ];
  @override
  final String wireName = 'GDocumentPatchInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDocumentPatchInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.reported;
    if (value != null) {
      result
        ..add('reported')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.pinned;
    if (value != null) {
      result
        ..add('pinned')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.folderId;
    if (value != null) {
      result
        ..add('folderId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDocumentPatchInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDocumentPatchInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'reported':
          result.reported = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'pinned':
          result.pinned = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'folderId':
          result.folderId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GMultipleDocumentsPatchInputSerializer
    implements StructuredSerializer<GMultipleDocumentsPatchInput> {
  @override
  final Iterable<Type> types = const [
    GMultipleDocumentsPatchInput,
    _$GMultipleDocumentsPatchInput
  ];
  @override
  final String wireName = 'GMultipleDocumentsPatchInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMultipleDocumentsPatchInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'documents',
      serializers.serialize(object.documents,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GDocumentPatchInput)])),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GMultipleDocumentsPatchInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMultipleDocumentsPatchInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'documents':
          result.documents.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GDocumentPatchInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateFolderInputsSerializer
    implements StructuredSerializer<GCreateFolderInputs> {
  @override
  final Iterable<Type> types = const [
    GCreateFolderInputs,
    _$GCreateFolderInputs
  ];
  @override
  final String wireName = 'GCreateFolderInputs';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateFolderInputs object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'folderName',
      serializers.serialize(object.folderName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCreateFolderInputs deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateFolderInputsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'folderName':
          result.folderName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteFolderInputsSerializer
    implements StructuredSerializer<GDeleteFolderInputs> {
  @override
  final Iterable<Type> types = const [
    GDeleteFolderInputs,
    _$GDeleteFolderInputs
  ];
  @override
  final String wireName = 'GDeleteFolderInputs';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDeleteFolderInputs object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'folderId',
      serializers.serialize(object.folderId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GDeleteFolderInputs deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDeleteFolderInputsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'folderId':
          result.folderId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GRenameFolderInputsSerializer
    implements StructuredSerializer<GRenameFolderInputs> {
  @override
  final Iterable<Type> types = const [
    GRenameFolderInputs,
    _$GRenameFolderInputs
  ];
  @override
  final String wireName = 'GRenameFolderInputs';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GRenameFolderInputs object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'folderId',
      serializers.serialize(object.folderId,
          specifiedType: const FullType(String)),
      'folderName',
      serializers.serialize(object.folderName,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.patientId;
    if (value != null) {
      result
        ..add('patientId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GRenameFolderInputs deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GRenameFolderInputsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'folderId':
          result.folderId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'folderName':
          result.folderName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GFamilyHistoryInputSerializer
    implements StructuredSerializer<GFamilyHistoryInput> {
  @override
  final Iterable<Type> types = const [
    GFamilyHistoryInput,
    _$GFamilyHistoryInput
  ];
  @override
  final String wireName = 'GFamilyHistoryInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GFamilyHistoryInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'familyRelationship',
      serializers.serialize(object.familyRelationship,
          specifiedType: const FullType(GFamilyRelationshipEnum)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GFamilyHistoryInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFamilyHistoryInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'familyRelationship':
          result.familyRelationship = serializers.deserialize(value,
                  specifiedType: const FullType(GFamilyRelationshipEnum))!
              as GFamilyRelationshipEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GFamilyHistoryUpdateInputSerializer
    implements StructuredSerializer<GFamilyHistoryUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GFamilyHistoryUpdateInput,
    _$GFamilyHistoryUpdateInput
  ];
  @override
  final String wireName = 'GFamilyHistoryUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GFamilyHistoryUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'familyRelationship',
      serializers.serialize(object.familyRelationship,
          specifiedType: const FullType(GFamilyRelationshipEnum)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GFamilyHistoryUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFamilyHistoryUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'familyRelationship':
          result.familyRelationship = serializers.deserialize(value,
                  specifiedType: const FullType(GFamilyRelationshipEnum))!
              as GFamilyRelationshipEnum;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteLinkInputSerializer
    implements StructuredSerializer<GDeleteLinkInput> {
  @override
  final Iterable<Type> types = const [GDeleteLinkInput, _$GDeleteLinkInput];
  @override
  final String wireName = 'GDeleteLinkInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GDeleteLinkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'linkId',
      serializers.serialize(object.linkId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDeleteLinkInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDeleteLinkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'linkId':
          result.linkId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteDraftFromConversationInputSerializer
    implements StructuredSerializer<GDeleteDraftFromConversationInput> {
  @override
  final Iterable<Type> types = const [
    GDeleteDraftFromConversationInput,
    _$GDeleteDraftFromConversationInput
  ];
  @override
  final String wireName = 'GDeleteDraftFromConversationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDeleteDraftFromConversationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'conversationId',
      serializers.serialize(object.conversationId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.filters;
    if (value != null) {
      result
        ..add('filters')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GFiltersInput)));
    }
    return result;
  }

  @override
  GDeleteDraftFromConversationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDeleteDraftFromConversationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'conversationId':
          result.conversationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'filters':
          result.filters.replace(serializers.deserialize(value,
              specifiedType: const FullType(GFiltersInput))! as GFiltersInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GConversationTrashInputSerializer
    implements StructuredSerializer<GConversationTrashInput> {
  @override
  final Iterable<Type> types = const [
    GConversationTrashInput,
    _$GConversationTrashInput
  ];
  @override
  final String wireName = 'GConversationTrashInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GConversationTrashInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'conversationId',
      serializers.serialize(object.conversationId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GConversationTrashInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GConversationTrashInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'conversationId':
          result.conversationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GAcknowledgeInputSerializer
    implements StructuredSerializer<GAcknowledgeInput> {
  @override
  final Iterable<Type> types = const [GAcknowledgeInput, _$GAcknowledgeInput];
  @override
  final String wireName = 'GAcknowledgeInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GAcknowledgeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'conversationId',
      serializers.serialize(object.conversationId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GAcknowledgeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAcknowledgeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'conversationId':
          result.conversationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCreateContactWithControlInputSerializer
    implements StructuredSerializer<GCreateContactWithControlInput> {
  @override
  final Iterable<Type> types = const [
    GCreateContactWithControlInput,
    _$GCreateContactWithControlInput
  ];
  @override
  final String wireName = 'GCreateContactWithControlInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GCreateContactWithControlInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'email',
      serializers.serialize(object.email,
          specifiedType: const FullType(String)),
      'fullName',
      serializers.serialize(object.fullName,
          specifiedType: const FullType(String)),
      'idFineg',
      serializers.serialize(object.idFineg,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GCreateContactWithControlInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCreateContactWithControlInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'email':
          result.email = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fullName':
          result.fullName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'idFineg':
          result.idFineg = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GTicketToCreateInputSerializer
    implements StructuredSerializer<GTicketToCreateInput> {
  @override
  final Iterable<Type> types = const [
    GTicketToCreateInput,
    _$GTicketToCreateInput
  ];
  @override
  final String wireName = 'GTicketToCreateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTicketToCreateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'reason',
      serializers.serialize(object.reason,
          specifiedType: const FullType(String)),
      'message',
      serializers.serialize(object.message,
          specifiedType: const FullType(String)),
      'hasConsent',
      serializers.serialize(object.hasConsent,
          specifiedType: const FullType(bool)),
    ];
    Object? value;
    value = object.idDocument;
    if (value != null) {
      result
        ..add('idDocument')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.documents;
    if (value != null) {
      result
        ..add('documents')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GTicketDocumentInput)])));
    }
    return result;
  }

  @override
  GTicketToCreateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTicketToCreateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'reason':
          result.reason = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'message':
          result.message = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'hasConsent':
          result.hasConsent = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'idDocument':
          result.idDocument = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'documents':
          result.documents.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GTicketDocumentInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GTicketDocumentInputSerializer
    implements StructuredSerializer<GTicketDocumentInput> {
  @override
  final Iterable<Type> types = const [
    GTicketDocumentInput,
    _$GTicketDocumentInput
  ];
  @override
  final String wireName = 'GTicketDocumentInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTicketDocumentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'data',
      serializers.serialize(object.data, specifiedType: const FullType(String)),
      'typeMime',
      serializers.serialize(object.typeMime,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GTicketDocumentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTicketDocumentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'data':
          result.data = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'typeMime':
          result.typeMime = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GReportRequestFormSerializer
    implements StructuredSerializer<GReportRequestForm> {
  @override
  final Iterable<Type> types = const [GReportRequestForm, _$GReportRequestForm];
  @override
  final String wireName = 'GReportRequestForm';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReportRequestForm object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'idEns',
      serializers.serialize(object.idEns,
          specifiedType: const FullType(String)),
      'typeDemande',
      serializers.serialize(object.typeDemande,
          specifiedType: const FullType(GTypeDemande)),
      'idSignale',
      serializers.serialize(object.idSignale,
          specifiedType: const FullType(String)),
      'description',
      serializers.serialize(object.description,
          specifiedType: const FullType(String)),
      'nom',
      serializers.serialize(object.nom, specifiedType: const FullType(String)),
      'documents',
      serializers.serialize(object.documents,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GReportDocumentModel)])),
    ];
    Object? value;
    value = object.hasConsent;
    if (value != null) {
      result
        ..add('hasConsent')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    return result;
  }

  @override
  GReportRequestForm deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReportRequestFormBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'idEns':
          result.idEns = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'typeDemande':
          result.typeDemande = serializers.deserialize(value,
              specifiedType: const FullType(GTypeDemande))! as GTypeDemande;
          break;
        case 'idSignale':
          result.idSignale = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'description':
          result.description = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'nom':
          result.nom = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'hasConsent':
          result.hasConsent = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'documents':
          result.documents.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GReportDocumentModel)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GReportDocumentModelSerializer
    implements StructuredSerializer<GReportDocumentModel> {
  @override
  final Iterable<Type> types = const [
    GReportDocumentModel,
    _$GReportDocumentModel
  ];
  @override
  final String wireName = 'GReportDocumentModel';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GReportDocumentModel object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'data',
      serializers.serialize(object.data, specifiedType: const FullType(String)),
      'typeMime',
      serializers.serialize(object.typeMime,
          specifiedType: const FullType(GDocumentMimeTypeEnum)),
    ];

    return result;
  }

  @override
  GReportDocumentModel deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GReportDocumentModelBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'data':
          result.data = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'typeMime':
          result.typeMime = serializers.deserialize(value,
                  specifiedType: const FullType(GDocumentMimeTypeEnum))!
              as GDocumentMimeTypeEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GDocumentMimeTypeEnumSerializer
    implements PrimitiveSerializer<GDocumentMimeTypeEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GDocumentMimeTypeEnum];
  @override
  final String wireName = 'GDocumentMimeTypeEnum';

  @override
  Object serialize(Serializers serializers, GDocumentMimeTypeEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GDocumentMimeTypeEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GDocumentMimeTypeEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GLifestyleItemInputSerializer
    implements StructuredSerializer<GLifestyleItemInput> {
  @override
  final Iterable<Type> types = const [
    GLifestyleItemInput,
    _$GLifestyleItemInput
  ];
  @override
  final String wireName = 'GLifestyleItemInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GLifestyleItemInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'details',
      serializers.serialize(object.details,
          specifiedType: const FullType(GLifestyleItemDetailInput)),
    ];

    return result;
  }

  @override
  GLifestyleItemInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLifestyleItemInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'details':
          result.details.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GLifestyleItemDetailInput))!
              as GLifestyleItemDetailInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GLifestyleItemDetailInputSerializer
    implements StructuredSerializer<GLifestyleItemDetailInput> {
  @override
  final Iterable<Type> types = const [
    GLifestyleItemDetailInput,
    _$GLifestyleItemDetailInput
  ];
  @override
  final String wireName = 'GLifestyleItemDetailInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GLifestyleItemDetailInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'lastModificationDate',
      serializers.serialize(object.lastModificationDate,
          specifiedType: const FullType(String)),
      'answers',
      serializers.serialize(object.answers,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GLifestyleAnswerInput)])),
    ];

    return result;
  }

  @override
  GLifestyleItemDetailInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLifestyleItemDetailInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'lastModificationDate':
          result.lastModificationDate = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'answers':
          result.answers.replace(serializers.deserialize(value,
              specifiedType: const FullType(BuiltList, const [
                const FullType(GLifestyleAnswerInput)
              ]))! as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GLifestyleAnswerInputSerializer
    implements StructuredSerializer<GLifestyleAnswerInput> {
  @override
  final Iterable<Type> types = const [
    GLifestyleAnswerInput,
    _$GLifestyleAnswerInput
  ];
  @override
  final String wireName = 'GLifestyleAnswerInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GLifestyleAnswerInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.value;
    if (value != null) {
      result
        ..add('value')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.countValue;
    if (value != null) {
      result
        ..add('countValue')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GLifestyleAnswerInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLifestyleAnswerInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'countValue':
          result.countValue = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GLifestyleItemUpdateInputSerializer
    implements StructuredSerializer<GLifestyleItemUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GLifestyleItemUpdateInput,
    _$GLifestyleItemUpdateInput
  ];
  @override
  final String wireName = 'GLifestyleItemUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GLifestyleItemUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'details',
      serializers.serialize(object.details,
          specifiedType: const FullType(GLifestyleItemDetailInput)),
    ];

    return result;
  }

  @override
  GLifestyleItemUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLifestyleItemUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'details':
          result.details.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GLifestyleItemDetailInput))!
              as GLifestyleItemDetailInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GHospitalizationUpdateInputSerializer
    implements StructuredSerializer<GHospitalizationUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GHospitalizationUpdateInput,
    _$GHospitalizationUpdateInput
  ];
  @override
  final String wireName = 'GHospitalizationUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHospitalizationUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'startYear',
      serializers.serialize(object.startYear,
          specifiedType: const FullType(String)),
      'duration',
      serializers.serialize(object.duration,
          specifiedType: const FullType(double)),
      'durationUnit',
      serializers.serialize(object.durationUnit,
          specifiedType: const FullType(GDurationUnitEnum)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDay;
    if (value != null) {
      result
        ..add('startDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startMonth;
    if (value != null) {
      result
        ..add('startMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkedDocumentsId;
    if (value != null) {
      result
        ..add('linkedDocumentsId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GHospitalizationUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHospitalizationUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDay':
          result.startDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startMonth':
          result.startMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startYear':
          result.startYear = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'duration':
          result.duration = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
        case 'durationUnit':
          result.durationUnit = serializers.deserialize(value,
                  specifiedType: const FullType(GDurationUnitEnum))!
              as GDurationUnitEnum;
          break;
        case 'linkedDocumentsId':
          result.linkedDocumentsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GHospitalizationInputSerializer
    implements StructuredSerializer<GHospitalizationInput> {
  @override
  final Iterable<Type> types = const [
    GHospitalizationInput,
    _$GHospitalizationInput
  ];
  @override
  final String wireName = 'GHospitalizationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHospitalizationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'startYear',
      serializers.serialize(object.startYear,
          specifiedType: const FullType(String)),
      'duration',
      serializers.serialize(object.duration,
          specifiedType: const FullType(double)),
      'durationUnit',
      serializers.serialize(object.durationUnit,
          specifiedType: const FullType(GDurationUnitEnum)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDay;
    if (value != null) {
      result
        ..add('startDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startMonth;
    if (value != null) {
      result
        ..add('startMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.linkedDocumentsId;
    if (value != null) {
      result
        ..add('linkedDocumentsId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GHospitalizationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHospitalizationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDay':
          result.startDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startMonth':
          result.startMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startYear':
          result.startYear = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'duration':
          result.duration = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
        case 'durationUnit':
          result.durationUnit = serializers.deserialize(value,
                  specifiedType: const FullType(GDurationUnitEnum))!
              as GDurationUnitEnum;
          break;
        case 'linkedDocumentsId':
          result.linkedDocumentsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GLinkedDocumentInputSerializer
    implements StructuredSerializer<GLinkedDocumentInput> {
  @override
  final Iterable<Type> types = const [
    GLinkedDocumentInput,
    _$GLinkedDocumentInput
  ];
  @override
  final String wireName = 'GLinkedDocumentInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GLinkedDocumentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'linkId',
      serializers.serialize(object.linkId,
          specifiedType: const FullType(String)),
      'documentId',
      serializers.serialize(object.documentId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GLinkedDocumentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLinkedDocumentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'linkId':
          result.linkId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'documentId':
          result.documentId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GLinkedTreatmentInputSerializer
    implements StructuredSerializer<GLinkedTreatmentInput> {
  @override
  final Iterable<Type> types = const [
    GLinkedTreatmentInput,
    _$GLinkedTreatmentInput
  ];
  @override
  final String wireName = 'GLinkedTreatmentInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GLinkedTreatmentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'linkId',
      serializers.serialize(object.linkId,
          specifiedType: const FullType(String)),
      'treatmentId',
      serializers.serialize(object.treatmentId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GLinkedTreatmentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLinkedTreatmentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'linkId':
          result.linkId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'treatmentId':
          result.treatmentId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMeasureInputSerializer implements StructuredSerializer<GMeasureInput> {
  @override
  final Iterable<Type> types = const [GMeasureInput, _$GMeasureInput];
  @override
  final String wireName = 'GMeasureInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMeasureInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'code',
      serializers.serialize(object.code,
          specifiedType: const FullType(GMeasureCode)),
      'metrics',
      serializers.serialize(object.metrics,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GMetricInput)])),
    ];
    Object? value;
    value = object.id;
    if (value != null) {
      result
        ..add('id')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.effectiveDate;
    if (value != null) {
      result
        ..add('effectiveDate')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comments;
    if (value != null) {
      result
        ..add('comments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GCommentInput)])));
    }
    return result;
  }

  @override
  GMeasureInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMeasureInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(GMeasureCode))! as GMeasureCode;
          break;
        case 'effectiveDate':
          result.effectiveDate = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'metrics':
          result.metrics.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GMetricInput)]))!
              as BuiltList<Object?>);
          break;
        case 'comments':
          result.comments.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GCommentInput)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GMetricInputSerializer implements StructuredSerializer<GMetricInput> {
  @override
  final Iterable<Type> types = const [GMetricInput, _$GMetricInput];
  @override
  final String wireName = 'GMetricInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMetricInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'code',
      serializers.serialize(object.code,
          specifiedType: const FullType(GMeasureCode)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
      'unit',
      serializers.serialize(object.unit, specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GMetricInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMetricInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(GMeasureCode))! as GMeasureCode;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'unit':
          result.unit = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCommentInputSerializer implements StructuredSerializer<GCommentInput> {
  @override
  final Iterable<Type> types = const [GCommentInput, _$GCommentInput];
  @override
  final String wireName = 'GCommentInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCommentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'code',
      serializers.serialize(object.code, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.extra;
    if (value != null) {
      result
        ..add('extra')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GCommentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCommentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'code':
          result.code = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'extra':
          result.extra = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GDeleteMeasureModelSerializer
    implements StructuredSerializer<GDeleteMeasureModel> {
  @override
  final Iterable<Type> types = const [
    GDeleteMeasureModel,
    _$GDeleteMeasureModel
  ];
  @override
  final String wireName = 'GDeleteMeasureModel';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDeleteMeasureModel object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDeleteMeasureModel deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDeleteMeasureModelBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GMeasureTargetInputSerializer
    implements StructuredSerializer<GMeasureTargetInput> {
  @override
  final Iterable<Type> types = const [
    GMeasureTargetInput,
    _$GMeasureTargetInput
  ];
  @override
  final String wireName = 'GMeasureTargetInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GMeasureTargetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GMeasureCode)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(double)),
    ];

    return result;
  }

  @override
  GMeasureTargetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMeasureTargetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(GMeasureCode))! as GMeasureCode;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
      }
    }

    return result.build();
  }
}

class _$GEditMeasureTargetInputSerializer
    implements StructuredSerializer<GEditMeasureTargetInput> {
  @override
  final Iterable<Type> types = const [
    GEditMeasureTargetInput,
    _$GEditMeasureTargetInput
  ];
  @override
  final String wireName = 'GEditMeasureTargetInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GEditMeasureTargetInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'targetId',
      serializers.serialize(object.targetId,
          specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(double)),
    ];

    return result;
  }

  @override
  GEditMeasureTargetInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEditMeasureTargetInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'targetId':
          result.targetId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(double))! as double;
          break;
      }
    }

    return result.build();
  }
}

class _$GMeasureTileInputSerializer
    implements StructuredSerializer<GMeasureTileInput> {
  @override
  final Iterable<Type> types = const [GMeasureTileInput, _$GMeasureTileInput];
  @override
  final String wireName = 'GMeasureTileInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GMeasureTileInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'type',
      serializers.serialize(object.type,
          specifiedType: const FullType(GMeasureCode)),
      'visible',
      serializers.serialize(object.visible,
          specifiedType: const FullType(bool)),
    ];

    return result;
  }

  @override
  GMeasureTileInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GMeasureTileInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'type':
          result.type = serializers.deserialize(value,
              specifiedType: const FullType(GMeasureCode))! as GMeasureCode;
          break;
        case 'visible':
          result.visible = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GAdvanceDirectiveInputSerializer
    implements StructuredSerializer<GAdvanceDirectiveInput> {
  @override
  final Iterable<Type> types = const [
    GAdvanceDirectiveInput,
    _$GAdvanceDirectiveInput
  ];
  @override
  final String wireName = 'GAdvanceDirectiveInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GAdvanceDirectiveInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'filename',
      serializers.serialize(object.filename,
          specifiedType: const FullType(String)),
      'attachment',
      serializers.serialize(object.attachment,
          specifiedType: const FullType(String)),
      'mimeType',
      serializers.serialize(object.mimeType,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.confidentialities;
    if (value != null) {
      result
        ..add('confidentialities')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GConfidentiality)])));
    }
    return result;
  }

  @override
  GAdvanceDirectiveInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GAdvanceDirectiveInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'filename':
          result.filename = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'attachment':
          result.attachment = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'confidentialities':
          result.confidentialities.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GConfidentiality)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GHealthProfessionalInputSerializer
    implements StructuredSerializer<GHealthProfessionalInput> {
  @override
  final Iterable<Type> types = const [
    GHealthProfessionalInput,
    _$GHealthProfessionalInput
  ];
  @override
  final String wireName = 'GHealthProfessionalInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHealthProfessionalInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'nationalId',
      serializers.serialize(object.nationalId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.role;
    if (value != null) {
      result
        ..add('role')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GHealthProfessionalRoleEnum)));
    }
    return result;
  }

  @override
  GHealthProfessionalInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHealthProfessionalInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'nationalId':
          result.nationalId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'role':
          result.role = serializers.deserialize(value,
                  specifiedType: const FullType(GHealthProfessionalRoleEnum))
              as GHealthProfessionalRoleEnum?;
          break;
      }
    }

    return result.build();
  }
}

class _$GLinkInputSerializer implements StructuredSerializer<GLinkInput> {
  @override
  final Iterable<Type> types = const [GLinkInput, _$GLinkInput];
  @override
  final String wireName = 'GLinkInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GLinkInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'sourceId',
      serializers.serialize(object.sourceId,
          specifiedType: const FullType(String)),
      'sourceType',
      serializers.serialize(object.sourceType,
          specifiedType: const FullType(GLinkType)),
      'targetId',
      serializers.serialize(object.targetId,
          specifiedType: const FullType(String)),
      'targetType',
      serializers.serialize(object.targetType,
          specifiedType: const FullType(GLinkType)),
    ];

    return result;
  }

  @override
  GLinkInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GLinkInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sourceId':
          result.sourceId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'sourceType':
          result.sourceType = serializers.deserialize(value,
              specifiedType: const FullType(GLinkType))! as GLinkType;
          break;
        case 'targetId':
          result.targetId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'targetType':
          result.targetType = serializers.deserialize(value,
              specifiedType: const FullType(GLinkType))! as GLinkType;
          break;
      }
    }

    return result.build();
  }
}

class _$GContactPostInputSerializer
    implements StructuredSerializer<GContactPostInput> {
  @override
  final Iterable<Type> types = const [GContactPostInput, _$GContactPostInput];
  @override
  final String wireName = 'GContactPostInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GContactPostInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'firstName',
      serializers.serialize(object.firstName,
          specifiedType: const FullType(String)),
      'lastName',
      serializers.serialize(object.lastName,
          specifiedType: const FullType(String)),
      'relation',
      serializers.serialize(object.relation,
          specifiedType: const FullType(GEntourageRelation)),
      'mobileNumber',
      serializers.serialize(object.mobileNumber,
          specifiedType: const FullType(String)),
      'postalCode',
      serializers.serialize(object.postalCode,
          specifiedType: const FullType(String)),
      'city',
      serializers.serialize(object.city, specifiedType: const FullType(String)),
      'contactsType',
      serializers.serialize(object.contactsType,
          specifiedType:
              const FullType(BuiltList, const [const FullType(GContactType)])),
    ];
    Object? value;
    value = object.prefix;
    if (value != null) {
      result
        ..add('prefix')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fullName;
    if (value != null) {
      result
        ..add('fullName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fixedLineNumber;
    if (value != null) {
      result
        ..add('fixedLineNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.emailAddress;
    if (value != null) {
      result
        ..add('emailAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.streetAddressLine;
    if (value != null) {
      result
        ..add('streetAddressLine')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GContactPostInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GContactPostInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'prefix':
          result.prefix = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullName':
          result.fullName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'relation':
          result.relation = serializers.deserialize(value,
                  specifiedType: const FullType(GEntourageRelation))!
              as GEntourageRelation;
          break;
        case 'mobileNumber':
          result.mobileNumber = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fixedLineNumber':
          result.fixedLineNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'emailAddress':
          result.emailAddress = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'streetAddressLine':
          result.streetAddressLine = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'postalCode':
          result.postalCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'city':
          result.city = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'country':
          result.country = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'contactsType':
          result.contactsType.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GContactType)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GContactUpdateInputSerializer
    implements StructuredSerializer<GContactUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GContactUpdateInput,
    _$GContactUpdateInput
  ];
  @override
  final String wireName = 'GContactUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GContactUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'firstName',
      serializers.serialize(object.firstName,
          specifiedType: const FullType(String)),
      'lastName',
      serializers.serialize(object.lastName,
          specifiedType: const FullType(String)),
      'relation',
      serializers.serialize(object.relation,
          specifiedType: const FullType(GEntourageRelation)),
      'mobileNumber',
      serializers.serialize(object.mobileNumber,
          specifiedType: const FullType(String)),
      'postalCode',
      serializers.serialize(object.postalCode,
          specifiedType: const FullType(String)),
      'city',
      serializers.serialize(object.city, specifiedType: const FullType(String)),
      'idContact',
      serializers.serialize(object.idContact,
          specifiedType: const FullType(String)),
      'contactType',
      serializers.serialize(object.contactType,
          specifiedType: const FullType(GContactType)),
    ];
    Object? value;
    value = object.prefix;
    if (value != null) {
      result
        ..add('prefix')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fullName;
    if (value != null) {
      result
        ..add('fullName')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.fixedLineNumber;
    if (value != null) {
      result
        ..add('fixedLineNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.emailAddress;
    if (value != null) {
      result
        ..add('emailAddress')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.streetAddressLine;
    if (value != null) {
      result
        ..add('streetAddressLine')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.country;
    if (value != null) {
      result
        ..add('country')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GContactUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GContactUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'prefix':
          result.prefix = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'fullName':
          result.fullName = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'firstName':
          result.firstName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'lastName':
          result.lastName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'relation':
          result.relation = serializers.deserialize(value,
                  specifiedType: const FullType(GEntourageRelation))!
              as GEntourageRelation;
          break;
        case 'mobileNumber':
          result.mobileNumber = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'fixedLineNumber':
          result.fixedLineNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'emailAddress':
          result.emailAddress = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'streetAddressLine':
          result.streetAddressLine = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'postalCode':
          result.postalCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'city':
          result.city = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'country':
          result.country = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'idContact':
          result.idContact = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'contactType':
          result.contactType = serializers.deserialize(value,
              specifiedType: const FullType(GContactType))! as GContactType;
          break;
      }
    }

    return result.build();
  }
}

class _$GHealthStructureInputSerializer
    implements StructuredSerializer<GHealthStructureInput> {
  @override
  final Iterable<Type> types = const [
    GHealthStructureInput,
    _$GHealthStructureInput
  ];
  @override
  final String wireName = 'GHealthStructureInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHealthStructureInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'nationalId',
      serializers.serialize(object.nationalId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GHealthStructureInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHealthStructureInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'nationalId':
          result.nationalId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GSendResponseInputSerializer
    implements StructuredSerializer<GSendResponseInput> {
  @override
  final Iterable<Type> types = const [GSendResponseInput, _$GSendResponseInput];
  @override
  final String wireName = 'GSendResponseInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSendResponseInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'conversationId',
      serializers.serialize(object.conversationId,
          specifiedType: const FullType(String)),
      'content',
      serializers.serialize(object.content,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.draft;
    if (value != null) {
      result
        ..add('draft')
        ..add(
            serializers.serialize(value, specifiedType: const FullType(bool)));
    }
    value = object.replyType;
    if (value != null) {
      result
        ..add('replyType')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GReplyTypeEnum)));
    }
    value = object.messageId;
    if (value != null) {
      result
        ..add('messageId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.subject;
    if (value != null) {
      result
        ..add('subject')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.medicalProfileFilename;
    if (value != null) {
      result
        ..add('medicalProfileFilename')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.attachments;
    if (value != null) {
      result
        ..add('attachments')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(GFileInput)])));
    }
    value = object.ensDocuments;
    if (value != null) {
      result
        ..add('ensDocuments')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GEnsDocumentInput)])));
    }
    value = object.filesId;
    if (value != null) {
      result
        ..add('filesId')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    value = object.recipientsId;
    if (value != null) {
      result
        ..add('recipientsId')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GRecipientsIdInput)));
    }
    value = object.filters;
    if (value != null) {
      result
        ..add('filters')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GFiltersInput)));
    }
    return result;
  }

  @override
  GSendResponseInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSendResponseInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'draft':
          result.draft = serializers.deserialize(value,
              specifiedType: const FullType(bool)) as bool?;
          break;
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'replyType':
          result.replyType = serializers.deserialize(value,
              specifiedType: const FullType(GReplyTypeEnum)) as GReplyTypeEnum?;
          break;
        case 'conversationId':
          result.conversationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'messageId':
          result.messageId = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'content':
          result.content = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'subject':
          result.subject = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'medicalProfileFilename':
          result.medicalProfileFilename = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'attachments':
          result.attachments.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GFileInput)]))!
              as BuiltList<Object?>);
          break;
        case 'ensDocuments':
          result.ensDocuments.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GEnsDocumentInput)]))!
              as BuiltList<Object?>);
          break;
        case 'filesId':
          result.filesId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
        case 'recipientsId':
          result.recipientsId.replace(serializers.deserialize(value,
                  specifiedType: const FullType(GRecipientsIdInput))!
              as GRecipientsIdInput);
          break;
        case 'filters':
          result.filters.replace(serializers.deserialize(value,
              specifiedType: const FullType(GFiltersInput))! as GFiltersInput);
          break;
      }
    }

    return result.build();
  }
}

class _$GFileInputSerializer implements StructuredSerializer<GFileInput> {
  @override
  final Iterable<Type> types = const [GFileInput, _$GFileInput];
  @override
  final String wireName = 'GFileInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GFileInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'attachment',
      serializers.serialize(object.attachment,
          specifiedType: const FullType(String)),
      'mimeType',
      serializers.serialize(object.mimeType,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GFileInput deserialize(Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFileInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'attachment':
          result.attachment = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'mimeType':
          result.mimeType = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GEnsDocumentInputSerializer
    implements StructuredSerializer<GEnsDocumentInput> {
  @override
  final Iterable<Type> types = const [GEnsDocumentInput, _$GEnsDocumentInput];
  @override
  final String wireName = 'GEnsDocumentInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GEnsDocumentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'documentId',
      serializers.serialize(object.documentId,
          specifiedType: const FullType(String)),
      'documentTitle',
      serializers.serialize(object.documentTitle,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GEnsDocumentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GEnsDocumentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'documentId':
          result.documentId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'documentTitle':
          result.documentTitle = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GRecipientsIdInputSerializer
    implements StructuredSerializer<GRecipientsIdInput> {
  @override
  final Iterable<Type> types = const [GRecipientsIdInput, _$GRecipientsIdInput];
  @override
  final String wireName = 'GRecipientsIdInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GRecipientsIdInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[];
    Object? value;
    value = object.to;
    if (value != null) {
      result
        ..add('to')
        ..add(serializers.serialize(value,
            specifiedType:
                const FullType(BuiltList, const [const FullType(String)])));
    }
    return result;
  }

  @override
  GRecipientsIdInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GRecipientsIdInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'to':
          result.to.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GSaveNotificationTokenInputSerializer
    implements StructuredSerializer<GSaveNotificationTokenInput> {
  @override
  final Iterable<Type> types = const [
    GSaveNotificationTokenInput,
    _$GSaveNotificationTokenInput
  ];
  @override
  final String wireName = 'GSaveNotificationTokenInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GSaveNotificationTokenInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'token',
      serializers.serialize(object.token,
          specifiedType: const FullType(String)),
      'os',
      serializers.serialize(object.os,
          specifiedType: const FullType(GMobileOsEnum)),
    ];

    return result;
  }

  @override
  GSaveNotificationTokenInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GSaveNotificationTokenInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'token':
          result.token = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'os':
          result.os = serializers.deserialize(value,
              specifiedType: const FullType(GMobileOsEnum))! as GMobileOsEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GMobileOsEnumSerializer implements PrimitiveSerializer<GMobileOsEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GMobileOsEnum];
  @override
  final String wireName = 'GMobileOsEnum';

  @override
  Object serialize(Serializers serializers, GMobileOsEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GMobileOsEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GMobileOsEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GUserActionInputSerializer
    implements StructuredSerializer<GUserActionInput> {
  @override
  final Iterable<Type> types = const [GUserActionInput, _$GUserActionInput];
  @override
  final String wireName = 'GUserActionInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserActionInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'ensUserId',
      serializers.serialize(object.ensUserId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.actionNavigation;
    if (value != null) {
      result
        ..add('actionNavigation')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GUserActionEnum)));
    }
    value = object.params;
    if (value != null) {
      result
        ..add('params')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(
                BuiltList, const [const FullType(GUserActionParams)])));
    }
    return result;
  }

  @override
  GUserActionInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserActionInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'actionNavigation':
          result.actionNavigation = serializers.deserialize(value,
                  specifiedType: const FullType(GUserActionEnum))
              as GUserActionEnum?;
          break;
        case 'ensUserId':
          result.ensUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'params':
          result.params.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GUserActionParams)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GUserActionEnumSerializer
    implements PrimitiveSerializer<GUserActionEnum> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GUserActionEnum];
  @override
  final String wireName = 'GUserActionEnum';

  @override
  Object serialize(Serializers serializers, GUserActionEnum object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GUserActionEnum deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GUserActionEnum.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GUserActionParamsSerializer
    implements StructuredSerializer<GUserActionParams> {
  @override
  final Iterable<Type> types = const [GUserActionParams, _$GUserActionParams];
  @override
  final String wireName = 'GUserActionParams';

  @override
  Iterable<Object?> serialize(Serializers serializers, GUserActionParams object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'key',
      serializers.serialize(object.key, specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GUserActionParams deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GUserActionParamsBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'key':
          result.key = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GTreatmentInputSerializer
    implements StructuredSerializer<GTreatmentInput> {
  @override
  final Iterable<Type> types = const [GTreatmentInput, _$GTreatmentInput];
  @override
  final String wireName = 'GTreatmentInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GTreatmentInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'startYear',
      serializers.serialize(object.startYear,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDay;
    if (value != null) {
      result
        ..add('startDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startMonth;
    if (value != null) {
      result
        ..add('startMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endDay;
    if (value != null) {
      result
        ..add('endDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endMonth;
    if (value != null) {
      result
        ..add('endMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endYear;
    if (value != null) {
      result
        ..add('endYear')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dosage;
    if (value != null) {
      result
        ..add('dosage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTreatmentInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTreatmentInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDay':
          result.startDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startMonth':
          result.startMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startYear':
          result.startYear = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'endDay':
          result.endDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endMonth':
          result.endMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endYear':
          result.endYear = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dosage':
          result.dosage = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GTreatmentUpdateInputSerializer
    implements StructuredSerializer<GTreatmentUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GTreatmentUpdateInput,
    _$GTreatmentUpdateInput
  ];
  @override
  final String wireName = 'GTreatmentUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GTreatmentUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'name',
      serializers.serialize(object.name, specifiedType: const FullType(String)),
      'startYear',
      serializers.serialize(object.startYear,
          specifiedType: const FullType(String)),
      'id',
      serializers.serialize(object.id, specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startDay;
    if (value != null) {
      result
        ..add('startDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.startMonth;
    if (value != null) {
      result
        ..add('startMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endDay;
    if (value != null) {
      result
        ..add('endDay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endMonth;
    if (value != null) {
      result
        ..add('endMonth')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.endYear;
    if (value != null) {
      result
        ..add('endYear')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.dosage;
    if (value != null) {
      result
        ..add('dosage')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GTreatmentUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GTreatmentUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'name':
          result.name = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startDay':
          result.startDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startMonth':
          result.startMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'startYear':
          result.startYear = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'endDay':
          result.endDay = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endMonth':
          result.endMonth = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'endYear':
          result.endYear = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'dosage':
          result.dosage = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'id':
          result.id = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GVaccineInputSerializer implements StructuredSerializer<GVaccineInput> {
  @override
  final Iterable<Type> types = const [GVaccineInput, _$GVaccineInput];
  @override
  final String wireName = 'GVaccineInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GVaccineInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'vaccineRefId',
      serializers.serialize(object.vaccineRefId,
          specifiedType: const FullType(String)),
      'effectiveTime',
      serializers.serialize(object.effectiveTime,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.typeOfAdministration;
    if (value != null) {
      result
        ..add('typeOfAdministration')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVaccineTypeOfAdministrationEnum)));
    }
    value = object.lotNumber;
    if (value != null) {
      result
        ..add('lotNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.performer;
    if (value != null) {
      result
        ..add('performer')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVaccineInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVaccineInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'vaccineRefId':
          result.vaccineRefId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'effectiveTime':
          result.effectiveTime = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'typeOfAdministration':
          result.typeOfAdministration = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GVaccineTypeOfAdministrationEnum))
              as GVaccineTypeOfAdministrationEnum?;
          break;
        case 'lotNumber':
          result.lotNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'performer':
          result.performer = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
      }
    }

    return result.build();
  }
}

class _$GVaccineUpdateInputSerializer
    implements StructuredSerializer<GVaccineUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GVaccineUpdateInput,
    _$GVaccineUpdateInput
  ];
  @override
  final String wireName = 'GVaccineUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GVaccineUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'vaccineRefId',
      serializers.serialize(object.vaccineRefId,
          specifiedType: const FullType(String)),
      'effectiveTime',
      serializers.serialize(object.effectiveTime,
          specifiedType: const FullType(String)),
      'vaccineId',
      serializers.serialize(object.vaccineId,
          specifiedType: const FullType(String)),
    ];
    Object? value;
    value = object.typeOfAdministration;
    if (value != null) {
      result
        ..add('typeOfAdministration')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(GVaccineTypeOfAdministrationEnum)));
    }
    value = object.lotNumber;
    if (value != null) {
      result
        ..add('lotNumber')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.performer;
    if (value != null) {
      result
        ..add('performer')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    value = object.comment;
    if (value != null) {
      result
        ..add('comment')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(String)));
    }
    return result;
  }

  @override
  GVaccineUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GVaccineUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'vaccineRefId':
          result.vaccineRefId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'effectiveTime':
          result.effectiveTime = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'typeOfAdministration':
          result.typeOfAdministration = serializers.deserialize(value,
                  specifiedType:
                      const FullType(GVaccineTypeOfAdministrationEnum))
              as GVaccineTypeOfAdministrationEnum?;
          break;
        case 'lotNumber':
          result.lotNumber = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'performer':
          result.performer = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'comment':
          result.comment = serializers.deserialize(value,
              specifiedType: const FullType(String)) as String?;
          break;
        case 'vaccineId':
          result.vaccineId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GCloseEnsInputSerializer
    implements StructuredSerializer<GCloseEnsInput> {
  @override
  final Iterable<Type> types = const [GCloseEnsInput, _$GCloseEnsInput];
  @override
  final String wireName = 'GCloseEnsInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GCloseEnsInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'loggedInUserId',
      serializers.serialize(object.loggedInUserId,
          specifiedType: const FullType(String)),
      'password',
      serializers.serialize(object.password,
          specifiedType: const FullType(String)),
      'suppressionDemandee',
      serializers.serialize(object.suppressionDemandee,
          specifiedType: const FullType(bool)),
    ];

    return result;
  }

  @override
  GCloseEnsInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GCloseEnsInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'loggedInUserId':
          result.loggedInUserId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'password':
          result.password = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'suppressionDemandee':
          result.suppressionDemandee = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationMatchPotentialDelegateInputSerializer
    implements StructuredSerializer<GDelegationMatchPotentialDelegateInput> {
  @override
  final Iterable<Type> types = const [
    GDelegationMatchPotentialDelegateInput,
    _$GDelegationMatchPotentialDelegateInput
  ];
  @override
  final String wireName = 'GDelegationMatchPotentialDelegateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDelegationMatchPotentialDelegateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'ins',
      serializers.serialize(object.ins, specifiedType: const FullType(String)),
      'firstGivenName',
      serializers.serialize(object.firstGivenName,
          specifiedType: const FullType(String)),
      'familyName',
      serializers.serialize(object.familyName,
          specifiedType: const FullType(String)),
      'birthDate',
      serializers.serialize(object.birthDate,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDelegationMatchPotentialDelegateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDelegationMatchPotentialDelegateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'ins':
          result.ins = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'firstGivenName':
          result.firstGivenName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'familyName':
          result.familyName = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'birthDate':
          result.birthDate = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationInviteToCaregivingInputSerializer
    implements StructuredSerializer<GDelegationInviteToCaregivingInput> {
  @override
  final Iterable<Type> types = const [
    GDelegationInviteToCaregivingInput,
    _$GDelegationInviteToCaregivingInput
  ];
  @override
  final String wireName = 'GDelegationInviteToCaregivingInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDelegationInviteToCaregivingInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'idp',
      serializers.serialize(object.idp, specifiedType: const FullType(String)),
      'transactionId',
      serializers.serialize(object.transactionId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDelegationInviteToCaregivingInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDelegationInviteToCaregivingInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'idp':
          result.idp = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'transactionId':
          result.transactionId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationAcceptInvitationInputSerializer
    implements StructuredSerializer<GDelegationAcceptInvitationInput> {
  @override
  final Iterable<Type> types = const [
    GDelegationAcceptInvitationInput,
    _$GDelegationAcceptInvitationInput
  ];
  @override
  final String wireName = 'GDelegationAcceptInvitationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDelegationAcceptInvitationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'invitationId',
      serializers.serialize(object.invitationId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDelegationAcceptInvitationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDelegationAcceptInvitationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'invitationId':
          result.invitationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationRefuseInvitationInputSerializer
    implements StructuredSerializer<GDelegationRefuseInvitationInput> {
  @override
  final Iterable<Type> types = const [
    GDelegationRefuseInvitationInput,
    _$GDelegationRefuseInvitationInput
  ];
  @override
  final String wireName = 'GDelegationRefuseInvitationInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDelegationRefuseInvitationInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'invitationId',
      serializers.serialize(object.invitationId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDelegationRefuseInvitationInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDelegationRefuseInvitationInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'invitationId':
          result.invitationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDelegationRevokeInputSerializer
    implements StructuredSerializer<GDelegationRevokeInput> {
  @override
  final Iterable<Type> types = const [
    GDelegationRevokeInput,
    _$GDelegationRevokeInput
  ];
  @override
  final String wireName = 'GDelegationRevokeInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GDelegationRevokeInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'delegationId',
      serializers.serialize(object.delegationId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GDelegationRevokeInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GDelegationRevokeInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'delegationId':
          result.delegationId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GHealthQuizResponseInputSerializer
    implements StructuredSerializer<GHealthQuizResponseInput> {
  @override
  final Iterable<Type> types = const [
    GHealthQuizResponseInput,
    _$GHealthQuizResponseInput
  ];
  @override
  final String wireName = 'GHealthQuizResponseInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GHealthQuizResponseInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'quizCode',
      serializers.serialize(object.quizCode,
          specifiedType: const FullType(String)),
      'quizVersion',
      serializers.serialize(object.quizVersion,
          specifiedType: const FullType(String)),
      'details',
      serializers.serialize(object.details,
          specifiedType: const FullType(
              BuiltList, const [const FullType(GResponseInput)])),
      'status',
      serializers.serialize(object.status,
          specifiedType: const FullType(GHealthQuizCompletionStatus)),
    ];
    Object? value;
    value = object.questionToDisplay;
    if (value != null) {
      result
        ..add('questionToDisplay')
        ..add(serializers.serialize(value,
            specifiedType: const FullType(double)));
    }
    return result;
  }

  @override
  GHealthQuizResponseInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GHealthQuizResponseInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'quizCode':
          result.quizCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'quizVersion':
          result.quizVersion = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'details':
          result.details.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(GResponseInput)]))!
              as BuiltList<Object?>);
          break;
        case 'status':
          result.status = serializers.deserialize(value,
                  specifiedType: const FullType(GHealthQuizCompletionStatus))!
              as GHealthQuizCompletionStatus;
          break;
        case 'questionToDisplay':
          result.questionToDisplay = serializers.deserialize(value,
              specifiedType: const FullType(double)) as double?;
          break;
      }
    }

    return result.build();
  }
}

class _$GResponseInputSerializer
    implements StructuredSerializer<GResponseInput> {
  @override
  final Iterable<Type> types = const [GResponseInput, _$GResponseInput];
  @override
  final String wireName = 'GResponseInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GResponseInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'questionCode',
      serializers.serialize(object.questionCode,
          specifiedType: const FullType(String)),
      'value',
      serializers.serialize(object.value,
          specifiedType:
              const FullType(BuiltList, const [const FullType(String)])),
    ];

    return result;
  }

  @override
  GResponseInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GResponseInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'questionCode':
          result.questionCode = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'value':
          result.value.replace(serializers.deserialize(value,
                  specifiedType: const FullType(
                      BuiltList, const [const FullType(String)]))!
              as BuiltList<Object?>);
          break;
      }
    }

    return result.build();
  }
}

class _$GFinalityConsentToUpdateInputSerializer
    implements StructuredSerializer<GFinalityConsentToUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GFinalityConsentToUpdateInput,
    _$GFinalityConsentToUpdateInput
  ];
  @override
  final String wireName = 'GFinalityConsentToUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GFinalityConsentToUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'consent',
      serializers.serialize(object.consent,
          specifiedType: const FullType(bool)),
      'finalityCode',
      serializers.serialize(object.finalityCode,
          specifiedType: const FullType(GFinalityCode)),
    ];

    return result;
  }

  @override
  GFinalityConsentToUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GFinalityConsentToUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'consent':
          result.consent = serializers.deserialize(value,
              specifiedType: const FullType(bool))! as bool;
          break;
        case 'finalityCode':
          result.finalityCode = serializers.deserialize(value,
              specifiedType: const FullType(GFinalityCode))! as GFinalityCode;
          break;
      }
    }

    return result.build();
  }
}

class _$GFinalityCodeSerializer implements PrimitiveSerializer<GFinalityCode> {
  static const Map<String, Object> _toWire = const <String, Object>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };
  static const Map<Object, String> _fromWire = const <Object, String>{
    'gUnknownEnumValue': 'gUnknownEnumValue',
  };

  @override
  final Iterable<Type> types = const <Type>[GFinalityCode];
  @override
  final String wireName = 'GFinalityCode';

  @override
  Object serialize(Serializers serializers, GFinalityCode object,
          {FullType specifiedType = FullType.unspecified}) =>
      _toWire[object.name] ?? object.name;

  @override
  GFinalityCode deserialize(Serializers serializers, Object serialized,
          {FullType specifiedType = FullType.unspecified}) =>
      GFinalityCode.valueOf(
          _fromWire[serialized] ?? (serialized is String ? serialized : ''));
}

class _$GBloodGroupInputSerializer
    implements StructuredSerializer<GBloodGroupInput> {
  @override
  final Iterable<Type> types = const [GBloodGroupInput, _$GBloodGroupInput];
  @override
  final String wireName = 'GBloodGroupInput';

  @override
  Iterable<Object?> serialize(Serializers serializers, GBloodGroupInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'bloodGroup',
      serializers.serialize(object.bloodGroup,
          specifiedType: const FullType(GBloodGroupEnum)),
    ];

    return result;
  }

  @override
  GBloodGroupInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBloodGroupInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'bloodGroup':
          result.bloodGroup = serializers.deserialize(value,
                  specifiedType: const FullType(GBloodGroupEnum))!
              as GBloodGroupEnum;
          break;
      }
    }

    return result.build();
  }
}

class _$GBloodGroupUpdateInputSerializer
    implements StructuredSerializer<GBloodGroupUpdateInput> {
  @override
  final Iterable<Type> types = const [
    GBloodGroupUpdateInput,
    _$GBloodGroupUpdateInput
  ];
  @override
  final String wireName = 'GBloodGroupUpdateInput';

  @override
  Iterable<Object?> serialize(
      Serializers serializers, GBloodGroupUpdateInput object,
      {FullType specifiedType = FullType.unspecified}) {
    final result = <Object?>[
      'patientId',
      serializers.serialize(object.patientId,
          specifiedType: const FullType(String)),
      'bloodGroup',
      serializers.serialize(object.bloodGroup,
          specifiedType: const FullType(GBloodGroupEnum)),
      'bloodGroupId',
      serializers.serialize(object.bloodGroupId,
          specifiedType: const FullType(String)),
    ];

    return result;
  }

  @override
  GBloodGroupUpdateInput deserialize(
      Serializers serializers, Iterable<Object?> serialized,
      {FullType specifiedType = FullType.unspecified}) {
    final result = new GBloodGroupUpdateInputBuilder();

    final iterator = serialized.iterator;
    while (iterator.moveNext()) {
      final key = iterator.current! as String;
      iterator.moveNext();
      final Object? value = iterator.current;
      switch (key) {
        case 'patientId':
          result.patientId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
        case 'bloodGroup':
          result.bloodGroup = serializers.deserialize(value,
                  specifiedType: const FullType(GBloodGroupEnum))!
              as GBloodGroupEnum;
          break;
        case 'bloodGroupId':
          result.bloodGroupId = serializers.deserialize(value,
              specifiedType: const FullType(String))! as String;
          break;
      }
    }

    return result.build();
  }
}

class _$GDate extends GDate {
  @override
  final String value;

  factory _$GDate([void Function(GDateBuilder)? updates]) =>
      (new GDateBuilder()..update(updates))._build();

  _$GDate._({required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(value, r'GDate', 'value');
  }

  @override
  GDate rebuild(void Function(GDateBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDateBuilder toBuilder() => new GDateBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDate && value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDate')..add('value', value))
        .toString();
  }
}

class GDateBuilder implements Builder<GDate, GDateBuilder> {
  _$GDate? _$v;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GDateBuilder();

  GDateBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDate other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDate;
  }

  @override
  void update(void Function(GDateBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDate build() => _build();

  _$GDate _build() {
    final _$result = _$v ??
        new _$GDate._(
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GDate', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GOtpForResetPasswordInput extends GOtpForResetPasswordInput {
  @override
  final String nir;
  @override
  final String vitalCardNumber;
  @override
  final String dateOfBirth;
  @override
  final GCanalType canalType;

  factory _$GOtpForResetPasswordInput(
          [void Function(GOtpForResetPasswordInputBuilder)? updates]) =>
      (new GOtpForResetPasswordInputBuilder()..update(updates))._build();

  _$GOtpForResetPasswordInput._(
      {required this.nir,
      required this.vitalCardNumber,
      required this.dateOfBirth,
      required this.canalType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        nir, r'GOtpForResetPasswordInput', 'nir');
    BuiltValueNullFieldError.checkNotNull(
        vitalCardNumber, r'GOtpForResetPasswordInput', 'vitalCardNumber');
    BuiltValueNullFieldError.checkNotNull(
        dateOfBirth, r'GOtpForResetPasswordInput', 'dateOfBirth');
    BuiltValueNullFieldError.checkNotNull(
        canalType, r'GOtpForResetPasswordInput', 'canalType');
  }

  @override
  GOtpForResetPasswordInput rebuild(
          void Function(GOtpForResetPasswordInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GOtpForResetPasswordInputBuilder toBuilder() =>
      new GOtpForResetPasswordInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GOtpForResetPasswordInput &&
        nir == other.nir &&
        vitalCardNumber == other.vitalCardNumber &&
        dateOfBirth == other.dateOfBirth &&
        canalType == other.canalType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, nir.hashCode);
    _$hash = $jc(_$hash, vitalCardNumber.hashCode);
    _$hash = $jc(_$hash, dateOfBirth.hashCode);
    _$hash = $jc(_$hash, canalType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GOtpForResetPasswordInput')
          ..add('nir', nir)
          ..add('vitalCardNumber', vitalCardNumber)
          ..add('dateOfBirth', dateOfBirth)
          ..add('canalType', canalType))
        .toString();
  }
}

class GOtpForResetPasswordInputBuilder
    implements
        Builder<GOtpForResetPasswordInput, GOtpForResetPasswordInputBuilder> {
  _$GOtpForResetPasswordInput? _$v;

  String? _nir;
  String? get nir => _$this._nir;
  set nir(String? nir) => _$this._nir = nir;

  String? _vitalCardNumber;
  String? get vitalCardNumber => _$this._vitalCardNumber;
  set vitalCardNumber(String? vitalCardNumber) =>
      _$this._vitalCardNumber = vitalCardNumber;

  String? _dateOfBirth;
  String? get dateOfBirth => _$this._dateOfBirth;
  set dateOfBirth(String? dateOfBirth) => _$this._dateOfBirth = dateOfBirth;

  GCanalType? _canalType;
  GCanalType? get canalType => _$this._canalType;
  set canalType(GCanalType? canalType) => _$this._canalType = canalType;

  GOtpForResetPasswordInputBuilder();

  GOtpForResetPasswordInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _nir = $v.nir;
      _vitalCardNumber = $v.vitalCardNumber;
      _dateOfBirth = $v.dateOfBirth;
      _canalType = $v.canalType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GOtpForResetPasswordInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GOtpForResetPasswordInput;
  }

  @override
  void update(void Function(GOtpForResetPasswordInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GOtpForResetPasswordInput build() => _build();

  _$GOtpForResetPasswordInput _build() {
    final _$result = _$v ??
        new _$GOtpForResetPasswordInput._(
            nir: BuiltValueNullFieldError.checkNotNull(
                nir, r'GOtpForResetPasswordInput', 'nir'),
            vitalCardNumber: BuiltValueNullFieldError.checkNotNull(
                vitalCardNumber,
                r'GOtpForResetPasswordInput',
                'vitalCardNumber'),
            dateOfBirth: BuiltValueNullFieldError.checkNotNull(
                dateOfBirth, r'GOtpForResetPasswordInput', 'dateOfBirth'),
            canalType: BuiltValueNullFieldError.checkNotNull(
                canalType, r'GOtpForResetPasswordInput', 'canalType'));
    replace(_$result);
    return _$result;
  }
}

class _$GSendLoginInput extends GSendLoginInput {
  @override
  final String nir;
  @override
  final String dateOfBirth;
  @override
  final GCanalType canalType;

  factory _$GSendLoginInput([void Function(GSendLoginInputBuilder)? updates]) =>
      (new GSendLoginInputBuilder()..update(updates))._build();

  _$GSendLoginInput._(
      {required this.nir, required this.dateOfBirth, required this.canalType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(nir, r'GSendLoginInput', 'nir');
    BuiltValueNullFieldError.checkNotNull(
        dateOfBirth, r'GSendLoginInput', 'dateOfBirth');
    BuiltValueNullFieldError.checkNotNull(
        canalType, r'GSendLoginInput', 'canalType');
  }

  @override
  GSendLoginInput rebuild(void Function(GSendLoginInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSendLoginInputBuilder toBuilder() =>
      new GSendLoginInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSendLoginInput &&
        nir == other.nir &&
        dateOfBirth == other.dateOfBirth &&
        canalType == other.canalType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, nir.hashCode);
    _$hash = $jc(_$hash, dateOfBirth.hashCode);
    _$hash = $jc(_$hash, canalType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSendLoginInput')
          ..add('nir', nir)
          ..add('dateOfBirth', dateOfBirth)
          ..add('canalType', canalType))
        .toString();
  }
}

class GSendLoginInputBuilder
    implements Builder<GSendLoginInput, GSendLoginInputBuilder> {
  _$GSendLoginInput? _$v;

  String? _nir;
  String? get nir => _$this._nir;
  set nir(String? nir) => _$this._nir = nir;

  String? _dateOfBirth;
  String? get dateOfBirth => _$this._dateOfBirth;
  set dateOfBirth(String? dateOfBirth) => _$this._dateOfBirth = dateOfBirth;

  GCanalType? _canalType;
  GCanalType? get canalType => _$this._canalType;
  set canalType(GCanalType? canalType) => _$this._canalType = canalType;

  GSendLoginInputBuilder();

  GSendLoginInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _nir = $v.nir;
      _dateOfBirth = $v.dateOfBirth;
      _canalType = $v.canalType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSendLoginInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSendLoginInput;
  }

  @override
  void update(void Function(GSendLoginInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSendLoginInput build() => _build();

  _$GSendLoginInput _build() {
    final _$result = _$v ??
        new _$GSendLoginInput._(
            nir: BuiltValueNullFieldError.checkNotNull(
                nir, r'GSendLoginInput', 'nir'),
            dateOfBirth: BuiltValueNullFieldError.checkNotNull(
                dateOfBirth, r'GSendLoginInput', 'dateOfBirth'),
            canalType: BuiltValueNullFieldError.checkNotNull(
                canalType, r'GSendLoginInput', 'canalType'));
    replace(_$result);
    return _$result;
  }
}

class _$GGetPersonalInformationInput extends GGetPersonalInformationInput {
  @override
  final String patientId;

  factory _$GGetPersonalInformationInput(
          [void Function(GGetPersonalInformationInputBuilder)? updates]) =>
      (new GGetPersonalInformationInputBuilder()..update(updates))._build();

  _$GGetPersonalInformationInput._({required this.patientId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GGetPersonalInformationInput', 'patientId');
  }

  @override
  GGetPersonalInformationInput rebuild(
          void Function(GGetPersonalInformationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGetPersonalInformationInputBuilder toBuilder() =>
      new GGetPersonalInformationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetPersonalInformationInput &&
        patientId == other.patientId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetPersonalInformationInput')
          ..add('patientId', patientId))
        .toString();
  }
}

class GGetPersonalInformationInputBuilder
    implements
        Builder<GGetPersonalInformationInput,
            GGetPersonalInformationInputBuilder> {
  _$GGetPersonalInformationInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GGetPersonalInformationInputBuilder();

  GGetPersonalInformationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetPersonalInformationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetPersonalInformationInput;
  }

  @override
  void update(void Function(GGetPersonalInformationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetPersonalInformationInput build() => _build();

  _$GGetPersonalInformationInput _build() {
    final _$result = _$v ??
        new _$GGetPersonalInformationInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GGetPersonalInformationInput', 'patientId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGetCompteInformationInput extends GGetCompteInformationInput {
  @override
  final String loggedInUserId;

  factory _$GGetCompteInformationInput(
          [void Function(GGetCompteInformationInputBuilder)? updates]) =>
      (new GGetCompteInformationInputBuilder()..update(updates))._build();

  _$GGetCompteInformationInput._({required this.loggedInUserId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        loggedInUserId, r'GGetCompteInformationInput', 'loggedInUserId');
  }

  @override
  GGetCompteInformationInput rebuild(
          void Function(GGetCompteInformationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGetCompteInformationInputBuilder toBuilder() =>
      new GGetCompteInformationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetCompteInformationInput &&
        loggedInUserId == other.loggedInUserId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, loggedInUserId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetCompteInformationInput')
          ..add('loggedInUserId', loggedInUserId))
        .toString();
  }
}

class GGetCompteInformationInputBuilder
    implements
        Builder<GGetCompteInformationInput, GGetCompteInformationInputBuilder> {
  _$GGetCompteInformationInput? _$v;

  String? _loggedInUserId;
  String? get loggedInUserId => _$this._loggedInUserId;
  set loggedInUserId(String? loggedInUserId) =>
      _$this._loggedInUserId = loggedInUserId;

  GGetCompteInformationInputBuilder();

  GGetCompteInformationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _loggedInUserId = $v.loggedInUserId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetCompteInformationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetCompteInformationInput;
  }

  @override
  void update(void Function(GGetCompteInformationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetCompteInformationInput build() => _build();

  _$GGetCompteInformationInput _build() {
    final _$result = _$v ??
        new _$GGetCompteInformationInput._(
            loggedInUserId: BuiltValueNullFieldError.checkNotNull(
                loggedInUserId,
                r'GGetCompteInformationInput',
                'loggedInUserId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGetAyantsDroitsInput extends GGetAyantsDroitsInput {
  @override
  final String patientId;

  factory _$GGetAyantsDroitsInput(
          [void Function(GGetAyantsDroitsInputBuilder)? updates]) =>
      (new GGetAyantsDroitsInputBuilder()..update(updates))._build();

  _$GGetAyantsDroitsInput._({required this.patientId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GGetAyantsDroitsInput', 'patientId');
  }

  @override
  GGetAyantsDroitsInput rebuild(
          void Function(GGetAyantsDroitsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGetAyantsDroitsInputBuilder toBuilder() =>
      new GGetAyantsDroitsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetAyantsDroitsInput && patientId == other.patientId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetAyantsDroitsInput')
          ..add('patientId', patientId))
        .toString();
  }
}

class GGetAyantsDroitsInputBuilder
    implements Builder<GGetAyantsDroitsInput, GGetAyantsDroitsInputBuilder> {
  _$GGetAyantsDroitsInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GGetAyantsDroitsInputBuilder();

  GGetAyantsDroitsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetAyantsDroitsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetAyantsDroitsInput;
  }

  @override
  void update(void Function(GGetAyantsDroitsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetAyantsDroitsInput build() => _build();

  _$GGetAyantsDroitsInput _build() {
    final _$result = _$v ??
        new _$GGetAyantsDroitsInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GGetAyantsDroitsInput', 'patientId'));
    replace(_$result);
    return _$result;
  }
}

class _$GEnsHistoryInput extends GEnsHistoryInput {
  @override
  final String patientId;

  factory _$GEnsHistoryInput(
          [void Function(GEnsHistoryInputBuilder)? updates]) =>
      (new GEnsHistoryInputBuilder()..update(updates))._build();

  _$GEnsHistoryInput._({required this.patientId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GEnsHistoryInput', 'patientId');
  }

  @override
  GEnsHistoryInput rebuild(void Function(GEnsHistoryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEnsHistoryInputBuilder toBuilder() =>
      new GEnsHistoryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEnsHistoryInput && patientId == other.patientId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEnsHistoryInput')
          ..add('patientId', patientId))
        .toString();
  }
}

class GEnsHistoryInputBuilder
    implements Builder<GEnsHistoryInput, GEnsHistoryInputBuilder> {
  _$GEnsHistoryInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GEnsHistoryInputBuilder();

  GEnsHistoryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEnsHistoryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEnsHistoryInput;
  }

  @override
  void update(void Function(GEnsHistoryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEnsHistoryInput build() => _build();

  _$GEnsHistoryInput _build() {
    final _$result = _$v ??
        new _$GEnsHistoryInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GEnsHistoryInput', 'patientId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSynchronizedServicesHistoryInput
    extends GSynchronizedServicesHistoryInput {
  @override
  final String patientId;

  factory _$GSynchronizedServicesHistoryInput(
          [void Function(GSynchronizedServicesHistoryInputBuilder)? updates]) =>
      (new GSynchronizedServicesHistoryInputBuilder()..update(updates))
          ._build();

  _$GSynchronizedServicesHistoryInput._({required this.patientId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GSynchronizedServicesHistoryInput', 'patientId');
  }

  @override
  GSynchronizedServicesHistoryInput rebuild(
          void Function(GSynchronizedServicesHistoryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSynchronizedServicesHistoryInputBuilder toBuilder() =>
      new GSynchronizedServicesHistoryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSynchronizedServicesHistoryInput &&
        patientId == other.patientId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSynchronizedServicesHistoryInput')
          ..add('patientId', patientId))
        .toString();
  }
}

class GSynchronizedServicesHistoryInputBuilder
    implements
        Builder<GSynchronizedServicesHistoryInput,
            GSynchronizedServicesHistoryInputBuilder> {
  _$GSynchronizedServicesHistoryInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GSynchronizedServicesHistoryInputBuilder();

  GSynchronizedServicesHistoryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSynchronizedServicesHistoryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSynchronizedServicesHistoryInput;
  }

  @override
  void update(
      void Function(GSynchronizedServicesHistoryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSynchronizedServicesHistoryInput build() => _build();

  _$GSynchronizedServicesHistoryInput _build() {
    final _$result = _$v ??
        new _$GSynchronizedServicesHistoryInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GSynchronizedServicesHistoryInput', 'patientId'));
    replace(_$result);
    return _$result;
  }
}

class _$GTraceDocumentHistoryInput extends GTraceDocumentHistoryInput {
  @override
  final String patientId;

  factory _$GTraceDocumentHistoryInput(
          [void Function(GTraceDocumentHistoryInputBuilder)? updates]) =>
      (new GTraceDocumentHistoryInputBuilder()..update(updates))._build();

  _$GTraceDocumentHistoryInput._({required this.patientId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GTraceDocumentHistoryInput', 'patientId');
  }

  @override
  GTraceDocumentHistoryInput rebuild(
          void Function(GTraceDocumentHistoryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTraceDocumentHistoryInputBuilder toBuilder() =>
      new GTraceDocumentHistoryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTraceDocumentHistoryInput && patientId == other.patientId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTraceDocumentHistoryInput')
          ..add('patientId', patientId))
        .toString();
  }
}

class GTraceDocumentHistoryInputBuilder
    implements
        Builder<GTraceDocumentHistoryInput, GTraceDocumentHistoryInputBuilder> {
  _$GTraceDocumentHistoryInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GTraceDocumentHistoryInputBuilder();

  GTraceDocumentHistoryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTraceDocumentHistoryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTraceDocumentHistoryInput;
  }

  @override
  void update(void Function(GTraceDocumentHistoryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTraceDocumentHistoryInput build() => _build();

  _$GTraceDocumentHistoryInput _build() {
    final _$result = _$v ??
        new _$GTraceDocumentHistoryInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GTraceDocumentHistoryInput', 'patientId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGetDmpConsentementInput extends GGetDmpConsentementInput {
  @override
  final String patientId;

  factory _$GGetDmpConsentementInput(
          [void Function(GGetDmpConsentementInputBuilder)? updates]) =>
      (new GGetDmpConsentementInputBuilder()..update(updates))._build();

  _$GGetDmpConsentementInput._({required this.patientId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GGetDmpConsentementInput', 'patientId');
  }

  @override
  GGetDmpConsentementInput rebuild(
          void Function(GGetDmpConsentementInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGetDmpConsentementInputBuilder toBuilder() =>
      new GGetDmpConsentementInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetDmpConsentementInput && patientId == other.patientId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetDmpConsentementInput')
          ..add('patientId', patientId))
        .toString();
  }
}

class GGetDmpConsentementInputBuilder
    implements
        Builder<GGetDmpConsentementInput, GGetDmpConsentementInputBuilder> {
  _$GGetDmpConsentementInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GGetDmpConsentementInputBuilder();

  GGetDmpConsentementInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetDmpConsentementInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetDmpConsentementInput;
  }

  @override
  void update(void Function(GGetDmpConsentementInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetDmpConsentementInput build() => _build();

  _$GGetDmpConsentementInput _build() {
    final _$result = _$v ??
        new _$GGetDmpConsentementInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GGetDmpConsentementInput', 'patientId'));
    replace(_$result);
    return _$result;
  }
}

class _$GGetLegalRepresentativesInput extends GGetLegalRepresentativesInput {
  @override
  final String patientId;
  @override
  final GDelegationTypeEnum type;

  factory _$GGetLegalRepresentativesInput(
          [void Function(GGetLegalRepresentativesInputBuilder)? updates]) =>
      (new GGetLegalRepresentativesInputBuilder()..update(updates))._build();

  _$GGetLegalRepresentativesInput._(
      {required this.patientId, required this.type})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GGetLegalRepresentativesInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GGetLegalRepresentativesInput', 'type');
  }

  @override
  GGetLegalRepresentativesInput rebuild(
          void Function(GGetLegalRepresentativesInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGetLegalRepresentativesInputBuilder toBuilder() =>
      new GGetLegalRepresentativesInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetLegalRepresentativesInput &&
        patientId == other.patientId &&
        type == other.type;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetLegalRepresentativesInput')
          ..add('patientId', patientId)
          ..add('type', type))
        .toString();
  }
}

class GGetLegalRepresentativesInputBuilder
    implements
        Builder<GGetLegalRepresentativesInput,
            GGetLegalRepresentativesInputBuilder> {
  _$GGetLegalRepresentativesInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GDelegationTypeEnum? _type;
  GDelegationTypeEnum? get type => _$this._type;
  set type(GDelegationTypeEnum? type) => _$this._type = type;

  GGetLegalRepresentativesInputBuilder();

  GGetLegalRepresentativesInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetLegalRepresentativesInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetLegalRepresentativesInput;
  }

  @override
  void update(void Function(GGetLegalRepresentativesInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetLegalRepresentativesInput build() => _build();

  _$GGetLegalRepresentativesInput _build() {
    final _$result = _$v ??
        new _$GGetLegalRepresentativesInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GGetLegalRepresentativesInput', 'patientId'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GGetLegalRepresentativesInput', 'type'));
    replace(_$result);
    return _$result;
  }
}

class _$GAccountGetAccountFamilyInput extends GAccountGetAccountFamilyInput {
  @override
  final String patientId;
  @override
  final BuiltList<int>? profilsListIndex;

  factory _$GAccountGetAccountFamilyInput(
          [void Function(GAccountGetAccountFamilyInputBuilder)? updates]) =>
      (new GAccountGetAccountFamilyInputBuilder()..update(updates))._build();

  _$GAccountGetAccountFamilyInput._(
      {required this.patientId, this.profilsListIndex})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GAccountGetAccountFamilyInput', 'patientId');
  }

  @override
  GAccountGetAccountFamilyInput rebuild(
          void Function(GAccountGetAccountFamilyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccountGetAccountFamilyInputBuilder toBuilder() =>
      new GAccountGetAccountFamilyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccountGetAccountFamilyInput &&
        patientId == other.patientId &&
        profilsListIndex == other.profilsListIndex;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, profilsListIndex.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAccountGetAccountFamilyInput')
          ..add('patientId', patientId)
          ..add('profilsListIndex', profilsListIndex))
        .toString();
  }
}

class GAccountGetAccountFamilyInputBuilder
    implements
        Builder<GAccountGetAccountFamilyInput,
            GAccountGetAccountFamilyInputBuilder> {
  _$GAccountGetAccountFamilyInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  ListBuilder<int>? _profilsListIndex;
  ListBuilder<int> get profilsListIndex =>
      _$this._profilsListIndex ??= new ListBuilder<int>();
  set profilsListIndex(ListBuilder<int>? profilsListIndex) =>
      _$this._profilsListIndex = profilsListIndex;

  GAccountGetAccountFamilyInputBuilder();

  GAccountGetAccountFamilyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _profilsListIndex = $v.profilsListIndex?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccountGetAccountFamilyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAccountGetAccountFamilyInput;
  }

  @override
  void update(void Function(GAccountGetAccountFamilyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAccountGetAccountFamilyInput build() => _build();

  _$GAccountGetAccountFamilyInput _build() {
    _$GAccountGetAccountFamilyInput _$result;
    try {
      _$result = _$v ??
          new _$GAccountGetAccountFamilyInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GAccountGetAccountFamilyInput', 'patientId'),
              profilsListIndex: _profilsListIndex?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'profilsListIndex';
        _profilsListIndex?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAccountGetAccountFamilyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GGetPendingInvitationInput extends GGetPendingInvitationInput {
  @override
  final String idEnsOD;
  @override
  final GDelegationTypeEnum type;

  factory _$GGetPendingInvitationInput(
          [void Function(GGetPendingInvitationInputBuilder)? updates]) =>
      (new GGetPendingInvitationInputBuilder()..update(updates))._build();

  _$GGetPendingInvitationInput._({required this.idEnsOD, required this.type})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        idEnsOD, r'GGetPendingInvitationInput', 'idEnsOD');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GGetPendingInvitationInput', 'type');
  }

  @override
  GGetPendingInvitationInput rebuild(
          void Function(GGetPendingInvitationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGetPendingInvitationInputBuilder toBuilder() =>
      new GGetPendingInvitationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetPendingInvitationInput &&
        idEnsOD == other.idEnsOD &&
        type == other.type;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, idEnsOD.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetPendingInvitationInput')
          ..add('idEnsOD', idEnsOD)
          ..add('type', type))
        .toString();
  }
}

class GGetPendingInvitationInputBuilder
    implements
        Builder<GGetPendingInvitationInput, GGetPendingInvitationInputBuilder> {
  _$GGetPendingInvitationInput? _$v;

  String? _idEnsOD;
  String? get idEnsOD => _$this._idEnsOD;
  set idEnsOD(String? idEnsOD) => _$this._idEnsOD = idEnsOD;

  GDelegationTypeEnum? _type;
  GDelegationTypeEnum? get type => _$this._type;
  set type(GDelegationTypeEnum? type) => _$this._type = type;

  GGetPendingInvitationInputBuilder();

  GGetPendingInvitationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _idEnsOD = $v.idEnsOD;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetPendingInvitationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetPendingInvitationInput;
  }

  @override
  void update(void Function(GGetPendingInvitationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetPendingInvitationInput build() => _build();

  _$GGetPendingInvitationInput _build() {
    final _$result = _$v ??
        new _$GGetPendingInvitationInput._(
            idEnsOD: BuiltValueNullFieldError.checkNotNull(
                idEnsOD, r'GGetPendingInvitationInput', 'idEnsOD'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GGetPendingInvitationInput', 'type'));
    replace(_$result);
    return _$result;
  }
}

class _$GDownloadRematInProgressInput extends GDownloadRematInProgressInput {
  @override
  final String patientId;
  @override
  final String loggedInUserId;

  factory _$GDownloadRematInProgressInput(
          [void Function(GDownloadRematInProgressInputBuilder)? updates]) =>
      (new GDownloadRematInProgressInputBuilder()..update(updates))._build();

  _$GDownloadRematInProgressInput._(
      {required this.patientId, required this.loggedInUserId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDownloadRematInProgressInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        loggedInUserId, r'GDownloadRematInProgressInput', 'loggedInUserId');
  }

  @override
  GDownloadRematInProgressInput rebuild(
          void Function(GDownloadRematInProgressInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDownloadRematInProgressInputBuilder toBuilder() =>
      new GDownloadRematInProgressInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDownloadRematInProgressInput &&
        patientId == other.patientId &&
        loggedInUserId == other.loggedInUserId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, loggedInUserId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDownloadRematInProgressInput')
          ..add('patientId', patientId)
          ..add('loggedInUserId', loggedInUserId))
        .toString();
  }
}

class GDownloadRematInProgressInputBuilder
    implements
        Builder<GDownloadRematInProgressInput,
            GDownloadRematInProgressInputBuilder> {
  _$GDownloadRematInProgressInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _loggedInUserId;
  String? get loggedInUserId => _$this._loggedInUserId;
  set loggedInUserId(String? loggedInUserId) =>
      _$this._loggedInUserId = loggedInUserId;

  GDownloadRematInProgressInputBuilder();

  GDownloadRematInProgressInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _loggedInUserId = $v.loggedInUserId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDownloadRematInProgressInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDownloadRematInProgressInput;
  }

  @override
  void update(void Function(GDownloadRematInProgressInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDownloadRematInProgressInput build() => _build();

  _$GDownloadRematInProgressInput _build() {
    final _$result = _$v ??
        new _$GDownloadRematInProgressInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GDownloadRematInProgressInput', 'patientId'),
            loggedInUserId: BuiltValueNullFieldError.checkNotNull(
                loggedInUserId,
                r'GDownloadRematInProgressInput',
                'loggedInUserId'));
    replace(_$result);
    return _$result;
  }
}

class _$GResearchPsInput extends GResearchPsInput {
  @override
  final String? lastName;
  @override
  final String? firstName;
  @override
  final String? cityCode;
  @override
  final String? zipCode;
  @override
  final String? departmentCode;
  @override
  final String? professionCode;
  @override
  final String? experticeCode;

  factory _$GResearchPsInput(
          [void Function(GResearchPsInputBuilder)? updates]) =>
      (new GResearchPsInputBuilder()..update(updates))._build();

  _$GResearchPsInput._(
      {this.lastName,
      this.firstName,
      this.cityCode,
      this.zipCode,
      this.departmentCode,
      this.professionCode,
      this.experticeCode})
      : super._();

  @override
  GResearchPsInput rebuild(void Function(GResearchPsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GResearchPsInputBuilder toBuilder() =>
      new GResearchPsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GResearchPsInput &&
        lastName == other.lastName &&
        firstName == other.firstName &&
        cityCode == other.cityCode &&
        zipCode == other.zipCode &&
        departmentCode == other.departmentCode &&
        professionCode == other.professionCode &&
        experticeCode == other.experticeCode;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, lastName.hashCode);
    _$hash = $jc(_$hash, firstName.hashCode);
    _$hash = $jc(_$hash, cityCode.hashCode);
    _$hash = $jc(_$hash, zipCode.hashCode);
    _$hash = $jc(_$hash, departmentCode.hashCode);
    _$hash = $jc(_$hash, professionCode.hashCode);
    _$hash = $jc(_$hash, experticeCode.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GResearchPsInput')
          ..add('lastName', lastName)
          ..add('firstName', firstName)
          ..add('cityCode', cityCode)
          ..add('zipCode', zipCode)
          ..add('departmentCode', departmentCode)
          ..add('professionCode', professionCode)
          ..add('experticeCode', experticeCode))
        .toString();
  }
}

class GResearchPsInputBuilder
    implements Builder<GResearchPsInput, GResearchPsInputBuilder> {
  _$GResearchPsInput? _$v;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _cityCode;
  String? get cityCode => _$this._cityCode;
  set cityCode(String? cityCode) => _$this._cityCode = cityCode;

  String? _zipCode;
  String? get zipCode => _$this._zipCode;
  set zipCode(String? zipCode) => _$this._zipCode = zipCode;

  String? _departmentCode;
  String? get departmentCode => _$this._departmentCode;
  set departmentCode(String? departmentCode) =>
      _$this._departmentCode = departmentCode;

  String? _professionCode;
  String? get professionCode => _$this._professionCode;
  set professionCode(String? professionCode) =>
      _$this._professionCode = professionCode;

  String? _experticeCode;
  String? get experticeCode => _$this._experticeCode;
  set experticeCode(String? experticeCode) =>
      _$this._experticeCode = experticeCode;

  GResearchPsInputBuilder();

  GResearchPsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _lastName = $v.lastName;
      _firstName = $v.firstName;
      _cityCode = $v.cityCode;
      _zipCode = $v.zipCode;
      _departmentCode = $v.departmentCode;
      _professionCode = $v.professionCode;
      _experticeCode = $v.experticeCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GResearchPsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GResearchPsInput;
  }

  @override
  void update(void Function(GResearchPsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GResearchPsInput build() => _build();

  _$GResearchPsInput _build() {
    final _$result = _$v ??
        new _$GResearchPsInput._(
            lastName: lastName,
            firstName: firstName,
            cityCode: cityCode,
            zipCode: zipCode,
            departmentCode: departmentCode,
            professionCode: professionCode,
            experticeCode: experticeCode);
    replace(_$result);
    return _$result;
  }
}

class _$GGetCityInput extends GGetCityInput {
  @override
  final String? cityName;
  @override
  final String? zipCode;
  @override
  final String matchingRule;

  factory _$GGetCityInput([void Function(GGetCityInputBuilder)? updates]) =>
      (new GGetCityInputBuilder()..update(updates))._build();

  _$GGetCityInput._({this.cityName, this.zipCode, required this.matchingRule})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        matchingRule, r'GGetCityInput', 'matchingRule');
  }

  @override
  GGetCityInput rebuild(void Function(GGetCityInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGetCityInputBuilder toBuilder() => new GGetCityInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGetCityInput &&
        cityName == other.cityName &&
        zipCode == other.zipCode &&
        matchingRule == other.matchingRule;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, cityName.hashCode);
    _$hash = $jc(_$hash, zipCode.hashCode);
    _$hash = $jc(_$hash, matchingRule.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGetCityInput')
          ..add('cityName', cityName)
          ..add('zipCode', zipCode)
          ..add('matchingRule', matchingRule))
        .toString();
  }
}

class GGetCityInputBuilder
    implements Builder<GGetCityInput, GGetCityInputBuilder> {
  _$GGetCityInput? _$v;

  String? _cityName;
  String? get cityName => _$this._cityName;
  set cityName(String? cityName) => _$this._cityName = cityName;

  String? _zipCode;
  String? get zipCode => _$this._zipCode;
  set zipCode(String? zipCode) => _$this._zipCode = zipCode;

  String? _matchingRule;
  String? get matchingRule => _$this._matchingRule;
  set matchingRule(String? matchingRule) => _$this._matchingRule = matchingRule;

  GGetCityInputBuilder();

  GGetCityInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _cityName = $v.cityName;
      _zipCode = $v.zipCode;
      _matchingRule = $v.matchingRule;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGetCityInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGetCityInput;
  }

  @override
  void update(void Function(GGetCityInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGetCityInput build() => _build();

  _$GGetCityInput _build() {
    final _$result = _$v ??
        new _$GGetCityInput._(
            cityName: cityName,
            zipCode: zipCode,
            matchingRule: BuiltValueNullFieldError.checkNotNull(
                matchingRule, r'GGetCityInput', 'matchingRule'));
    replace(_$result);
    return _$result;
  }
}

class _$GAdvanceDirectivesFormEndOfLifeInput
    extends GAdvanceDirectivesFormEndOfLifeInput {
  @override
  final String contexte;
  @override
  final String maintientArtificiel;
  @override
  final String sedation;
  @override
  final GActsAndTreatmentsInput actesEtTraitementsEntrepris;
  @override
  final GActsAndTreatmentsInput actesEtTraitementsArretes;
  @override
  final GActsAndTreatmentsInput actesEtTraitementsSpecifiques;

  factory _$GAdvanceDirectivesFormEndOfLifeInput(
          [void Function(GAdvanceDirectivesFormEndOfLifeInputBuilder)?
              updates]) =>
      (new GAdvanceDirectivesFormEndOfLifeInputBuilder()..update(updates))
          ._build();

  _$GAdvanceDirectivesFormEndOfLifeInput._(
      {required this.contexte,
      required this.maintientArtificiel,
      required this.sedation,
      required this.actesEtTraitementsEntrepris,
      required this.actesEtTraitementsArretes,
      required this.actesEtTraitementsSpecifiques})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        contexte, r'GAdvanceDirectivesFormEndOfLifeInput', 'contexte');
    BuiltValueNullFieldError.checkNotNull(maintientArtificiel,
        r'GAdvanceDirectivesFormEndOfLifeInput', 'maintientArtificiel');
    BuiltValueNullFieldError.checkNotNull(
        sedation, r'GAdvanceDirectivesFormEndOfLifeInput', 'sedation');
    BuiltValueNullFieldError.checkNotNull(actesEtTraitementsEntrepris,
        r'GAdvanceDirectivesFormEndOfLifeInput', 'actesEtTraitementsEntrepris');
    BuiltValueNullFieldError.checkNotNull(actesEtTraitementsArretes,
        r'GAdvanceDirectivesFormEndOfLifeInput', 'actesEtTraitementsArretes');
    BuiltValueNullFieldError.checkNotNull(
        actesEtTraitementsSpecifiques,
        r'GAdvanceDirectivesFormEndOfLifeInput',
        'actesEtTraitementsSpecifiques');
  }

  @override
  GAdvanceDirectivesFormEndOfLifeInput rebuild(
          void Function(GAdvanceDirectivesFormEndOfLifeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAdvanceDirectivesFormEndOfLifeInputBuilder toBuilder() =>
      new GAdvanceDirectivesFormEndOfLifeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAdvanceDirectivesFormEndOfLifeInput &&
        contexte == other.contexte &&
        maintientArtificiel == other.maintientArtificiel &&
        sedation == other.sedation &&
        actesEtTraitementsEntrepris == other.actesEtTraitementsEntrepris &&
        actesEtTraitementsArretes == other.actesEtTraitementsArretes &&
        actesEtTraitementsSpecifiques == other.actesEtTraitementsSpecifiques;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, contexte.hashCode);
    _$hash = $jc(_$hash, maintientArtificiel.hashCode);
    _$hash = $jc(_$hash, sedation.hashCode);
    _$hash = $jc(_$hash, actesEtTraitementsEntrepris.hashCode);
    _$hash = $jc(_$hash, actesEtTraitementsArretes.hashCode);
    _$hash = $jc(_$hash, actesEtTraitementsSpecifiques.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAdvanceDirectivesFormEndOfLifeInput')
          ..add('contexte', contexte)
          ..add('maintientArtificiel', maintientArtificiel)
          ..add('sedation', sedation)
          ..add('actesEtTraitementsEntrepris', actesEtTraitementsEntrepris)
          ..add('actesEtTraitementsArretes', actesEtTraitementsArretes)
          ..add('actesEtTraitementsSpecifiques', actesEtTraitementsSpecifiques))
        .toString();
  }
}

class GAdvanceDirectivesFormEndOfLifeInputBuilder
    implements
        Builder<GAdvanceDirectivesFormEndOfLifeInput,
            GAdvanceDirectivesFormEndOfLifeInputBuilder> {
  _$GAdvanceDirectivesFormEndOfLifeInput? _$v;

  String? _contexte;
  String? get contexte => _$this._contexte;
  set contexte(String? contexte) => _$this._contexte = contexte;

  String? _maintientArtificiel;
  String? get maintientArtificiel => _$this._maintientArtificiel;
  set maintientArtificiel(String? maintientArtificiel) =>
      _$this._maintientArtificiel = maintientArtificiel;

  String? _sedation;
  String? get sedation => _$this._sedation;
  set sedation(String? sedation) => _$this._sedation = sedation;

  GActsAndTreatmentsInputBuilder? _actesEtTraitementsEntrepris;
  GActsAndTreatmentsInputBuilder get actesEtTraitementsEntrepris =>
      _$this._actesEtTraitementsEntrepris ??=
          new GActsAndTreatmentsInputBuilder();
  set actesEtTraitementsEntrepris(
          GActsAndTreatmentsInputBuilder? actesEtTraitementsEntrepris) =>
      _$this._actesEtTraitementsEntrepris = actesEtTraitementsEntrepris;

  GActsAndTreatmentsInputBuilder? _actesEtTraitementsArretes;
  GActsAndTreatmentsInputBuilder get actesEtTraitementsArretes =>
      _$this._actesEtTraitementsArretes ??=
          new GActsAndTreatmentsInputBuilder();
  set actesEtTraitementsArretes(
          GActsAndTreatmentsInputBuilder? actesEtTraitementsArretes) =>
      _$this._actesEtTraitementsArretes = actesEtTraitementsArretes;

  GActsAndTreatmentsInputBuilder? _actesEtTraitementsSpecifiques;
  GActsAndTreatmentsInputBuilder get actesEtTraitementsSpecifiques =>
      _$this._actesEtTraitementsSpecifiques ??=
          new GActsAndTreatmentsInputBuilder();
  set actesEtTraitementsSpecifiques(
          GActsAndTreatmentsInputBuilder? actesEtTraitementsSpecifiques) =>
      _$this._actesEtTraitementsSpecifiques = actesEtTraitementsSpecifiques;

  GAdvanceDirectivesFormEndOfLifeInputBuilder();

  GAdvanceDirectivesFormEndOfLifeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _contexte = $v.contexte;
      _maintientArtificiel = $v.maintientArtificiel;
      _sedation = $v.sedation;
      _actesEtTraitementsEntrepris = $v.actesEtTraitementsEntrepris.toBuilder();
      _actesEtTraitementsArretes = $v.actesEtTraitementsArretes.toBuilder();
      _actesEtTraitementsSpecifiques =
          $v.actesEtTraitementsSpecifiques.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAdvanceDirectivesFormEndOfLifeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAdvanceDirectivesFormEndOfLifeInput;
  }

  @override
  void update(
      void Function(GAdvanceDirectivesFormEndOfLifeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAdvanceDirectivesFormEndOfLifeInput build() => _build();

  _$GAdvanceDirectivesFormEndOfLifeInput _build() {
    _$GAdvanceDirectivesFormEndOfLifeInput _$result;
    try {
      _$result = _$v ??
          new _$GAdvanceDirectivesFormEndOfLifeInput._(
              contexte: BuiltValueNullFieldError.checkNotNull(contexte,
                  r'GAdvanceDirectivesFormEndOfLifeInput', 'contexte'),
              maintientArtificiel: BuiltValueNullFieldError.checkNotNull(
                  maintientArtificiel,
                  r'GAdvanceDirectivesFormEndOfLifeInput',
                  'maintientArtificiel'),
              sedation: BuiltValueNullFieldError.checkNotNull(sedation,
                  r'GAdvanceDirectivesFormEndOfLifeInput', 'sedation'),
              actesEtTraitementsEntrepris: actesEtTraitementsEntrepris.build(),
              actesEtTraitementsArretes: actesEtTraitementsArretes.build(),
              actesEtTraitementsSpecifiques:
                  actesEtTraitementsSpecifiques.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'actesEtTraitementsEntrepris';
        actesEtTraitementsEntrepris.build();
        _$failedField = 'actesEtTraitementsArretes';
        actesEtTraitementsArretes.build();
        _$failedField = 'actesEtTraitementsSpecifiques';
        actesEtTraitementsSpecifiques.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAdvanceDirectivesFormEndOfLifeInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GActsAndTreatmentsInput extends GActsAndTreatmentsInput {
  @override
  final String? reanimationCardiaque;
  @override
  final String? branchement;
  @override
  final String? interventionChirurgicale;
  @override
  final String? autres;

  factory _$GActsAndTreatmentsInput(
          [void Function(GActsAndTreatmentsInputBuilder)? updates]) =>
      (new GActsAndTreatmentsInputBuilder()..update(updates))._build();

  _$GActsAndTreatmentsInput._(
      {this.reanimationCardiaque,
      this.branchement,
      this.interventionChirurgicale,
      this.autres})
      : super._();

  @override
  GActsAndTreatmentsInput rebuild(
          void Function(GActsAndTreatmentsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GActsAndTreatmentsInputBuilder toBuilder() =>
      new GActsAndTreatmentsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GActsAndTreatmentsInput &&
        reanimationCardiaque == other.reanimationCardiaque &&
        branchement == other.branchement &&
        interventionChirurgicale == other.interventionChirurgicale &&
        autres == other.autres;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, reanimationCardiaque.hashCode);
    _$hash = $jc(_$hash, branchement.hashCode);
    _$hash = $jc(_$hash, interventionChirurgicale.hashCode);
    _$hash = $jc(_$hash, autres.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GActsAndTreatmentsInput')
          ..add('reanimationCardiaque', reanimationCardiaque)
          ..add('branchement', branchement)
          ..add('interventionChirurgicale', interventionChirurgicale)
          ..add('autres', autres))
        .toString();
  }
}

class GActsAndTreatmentsInputBuilder
    implements
        Builder<GActsAndTreatmentsInput, GActsAndTreatmentsInputBuilder> {
  _$GActsAndTreatmentsInput? _$v;

  String? _reanimationCardiaque;
  String? get reanimationCardiaque => _$this._reanimationCardiaque;
  set reanimationCardiaque(String? reanimationCardiaque) =>
      _$this._reanimationCardiaque = reanimationCardiaque;

  String? _branchement;
  String? get branchement => _$this._branchement;
  set branchement(String? branchement) => _$this._branchement = branchement;

  String? _interventionChirurgicale;
  String? get interventionChirurgicale => _$this._interventionChirurgicale;
  set interventionChirurgicale(String? interventionChirurgicale) =>
      _$this._interventionChirurgicale = interventionChirurgicale;

  String? _autres;
  String? get autres => _$this._autres;
  set autres(String? autres) => _$this._autres = autres;

  GActsAndTreatmentsInputBuilder();

  GActsAndTreatmentsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _reanimationCardiaque = $v.reanimationCardiaque;
      _branchement = $v.branchement;
      _interventionChirurgicale = $v.interventionChirurgicale;
      _autres = $v.autres;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GActsAndTreatmentsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GActsAndTreatmentsInput;
  }

  @override
  void update(void Function(GActsAndTreatmentsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GActsAndTreatmentsInput build() => _build();

  _$GActsAndTreatmentsInput _build() {
    final _$result = _$v ??
        new _$GActsAndTreatmentsInput._(
            reanimationCardiaque: reanimationCardiaque,
            branchement: branchement,
            interventionChirurgicale: interventionChirurgicale,
            autres: autres);
    replace(_$result);
    return _$result;
  }
}

class _$GAdvanceDirectivesFormGoodHealthInput
    extends GAdvanceDirectivesFormGoodHealthInput {
  @override
  final String contexte;
  @override
  final String maintientArtificiel;
  @override
  final String sedation;
  @override
  final String actesEtTraitements;

  factory _$GAdvanceDirectivesFormGoodHealthInput(
          [void Function(GAdvanceDirectivesFormGoodHealthInputBuilder)?
              updates]) =>
      (new GAdvanceDirectivesFormGoodHealthInputBuilder()..update(updates))
          ._build();

  _$GAdvanceDirectivesFormGoodHealthInput._(
      {required this.contexte,
      required this.maintientArtificiel,
      required this.sedation,
      required this.actesEtTraitements})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        contexte, r'GAdvanceDirectivesFormGoodHealthInput', 'contexte');
    BuiltValueNullFieldError.checkNotNull(maintientArtificiel,
        r'GAdvanceDirectivesFormGoodHealthInput', 'maintientArtificiel');
    BuiltValueNullFieldError.checkNotNull(
        sedation, r'GAdvanceDirectivesFormGoodHealthInput', 'sedation');
    BuiltValueNullFieldError.checkNotNull(actesEtTraitements,
        r'GAdvanceDirectivesFormGoodHealthInput', 'actesEtTraitements');
  }

  @override
  GAdvanceDirectivesFormGoodHealthInput rebuild(
          void Function(GAdvanceDirectivesFormGoodHealthInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAdvanceDirectivesFormGoodHealthInputBuilder toBuilder() =>
      new GAdvanceDirectivesFormGoodHealthInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAdvanceDirectivesFormGoodHealthInput &&
        contexte == other.contexte &&
        maintientArtificiel == other.maintientArtificiel &&
        sedation == other.sedation &&
        actesEtTraitements == other.actesEtTraitements;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, contexte.hashCode);
    _$hash = $jc(_$hash, maintientArtificiel.hashCode);
    _$hash = $jc(_$hash, sedation.hashCode);
    _$hash = $jc(_$hash, actesEtTraitements.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GAdvanceDirectivesFormGoodHealthInput')
          ..add('contexte', contexte)
          ..add('maintientArtificiel', maintientArtificiel)
          ..add('sedation', sedation)
          ..add('actesEtTraitements', actesEtTraitements))
        .toString();
  }
}

class GAdvanceDirectivesFormGoodHealthInputBuilder
    implements
        Builder<GAdvanceDirectivesFormGoodHealthInput,
            GAdvanceDirectivesFormGoodHealthInputBuilder> {
  _$GAdvanceDirectivesFormGoodHealthInput? _$v;

  String? _contexte;
  String? get contexte => _$this._contexte;
  set contexte(String? contexte) => _$this._contexte = contexte;

  String? _maintientArtificiel;
  String? get maintientArtificiel => _$this._maintientArtificiel;
  set maintientArtificiel(String? maintientArtificiel) =>
      _$this._maintientArtificiel = maintientArtificiel;

  String? _sedation;
  String? get sedation => _$this._sedation;
  set sedation(String? sedation) => _$this._sedation = sedation;

  String? _actesEtTraitements;
  String? get actesEtTraitements => _$this._actesEtTraitements;
  set actesEtTraitements(String? actesEtTraitements) =>
      _$this._actesEtTraitements = actesEtTraitements;

  GAdvanceDirectivesFormGoodHealthInputBuilder();

  GAdvanceDirectivesFormGoodHealthInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _contexte = $v.contexte;
      _maintientArtificiel = $v.maintientArtificiel;
      _sedation = $v.sedation;
      _actesEtTraitements = $v.actesEtTraitements;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAdvanceDirectivesFormGoodHealthInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAdvanceDirectivesFormGoodHealthInput;
  }

  @override
  void update(
      void Function(GAdvanceDirectivesFormGoodHealthInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAdvanceDirectivesFormGoodHealthInput build() => _build();

  _$GAdvanceDirectivesFormGoodHealthInput _build() {
    final _$result = _$v ??
        new _$GAdvanceDirectivesFormGoodHealthInput._(
            contexte: BuiltValueNullFieldError.checkNotNull(
                contexte, r'GAdvanceDirectivesFormGoodHealthInput', 'contexte'),
            maintientArtificiel: BuiltValueNullFieldError.checkNotNull(
                maintientArtificiel,
                r'GAdvanceDirectivesFormGoodHealthInput',
                'maintientArtificiel'),
            sedation: BuiltValueNullFieldError.checkNotNull(
                sedation, r'GAdvanceDirectivesFormGoodHealthInput', 'sedation'),
            actesEtTraitements: BuiltValueNullFieldError.checkNotNull(
                actesEtTraitements,
                r'GAdvanceDirectivesFormGoodHealthInput',
                'actesEtTraitements'));
    replace(_$result);
    return _$result;
  }
}

class _$GEpisodeInputWithCount extends GEpisodeInputWithCount {
  @override
  final String patientId;
  @override
  final GEpisodeCategory? category;
  @override
  final double? count;

  factory _$GEpisodeInputWithCount(
          [void Function(GEpisodeInputWithCountBuilder)? updates]) =>
      (new GEpisodeInputWithCountBuilder()..update(updates))._build();

  _$GEpisodeInputWithCount._(
      {required this.patientId, this.category, this.count})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GEpisodeInputWithCount', 'patientId');
  }

  @override
  GEpisodeInputWithCount rebuild(
          void Function(GEpisodeInputWithCountBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpisodeInputWithCountBuilder toBuilder() =>
      new GEpisodeInputWithCountBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpisodeInputWithCount &&
        patientId == other.patientId &&
        category == other.category &&
        count == other.count;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, count.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpisodeInputWithCount')
          ..add('patientId', patientId)
          ..add('category', category)
          ..add('count', count))
        .toString();
  }
}

class GEpisodeInputWithCountBuilder
    implements Builder<GEpisodeInputWithCount, GEpisodeInputWithCountBuilder> {
  _$GEpisodeInputWithCount? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GEpisodeCategory? _category;
  GEpisodeCategory? get category => _$this._category;
  set category(GEpisodeCategory? category) => _$this._category = category;

  double? _count;
  double? get count => _$this._count;
  set count(double? count) => _$this._count = count;

  GEpisodeInputWithCountBuilder();

  GEpisodeInputWithCountBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _category = $v.category;
      _count = $v.count;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpisodeInputWithCount other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpisodeInputWithCount;
  }

  @override
  void update(void Function(GEpisodeInputWithCountBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpisodeInputWithCount build() => _build();

  _$GEpisodeInputWithCount _build() {
    final _$result = _$v ??
        new _$GEpisodeInputWithCount._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GEpisodeInputWithCount', 'patientId'),
            category: category,
            count: count);
    replace(_$result);
    return _$result;
  }
}

class _$GEpisodeInput extends GEpisodeInput {
  @override
  final String patientId;
  @override
  final GEpisodeCategory? category;

  factory _$GEpisodeInput([void Function(GEpisodeInputBuilder)? updates]) =>
      (new GEpisodeInputBuilder()..update(updates))._build();

  _$GEpisodeInput._({required this.patientId, this.category}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GEpisodeInput', 'patientId');
  }

  @override
  GEpisodeInput rebuild(void Function(GEpisodeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpisodeInputBuilder toBuilder() => new GEpisodeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpisodeInput &&
        patientId == other.patientId &&
        category == other.category;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpisodeInput')
          ..add('patientId', patientId)
          ..add('category', category))
        .toString();
  }
}

class GEpisodeInputBuilder
    implements Builder<GEpisodeInput, GEpisodeInputBuilder> {
  _$GEpisodeInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GEpisodeCategory? _category;
  GEpisodeCategory? get category => _$this._category;
  set category(GEpisodeCategory? category) => _$this._category = category;

  GEpisodeInputBuilder();

  GEpisodeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _category = $v.category;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpisodeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpisodeInput;
  }

  @override
  void update(void Function(GEpisodeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpisodeInput build() => _build();

  _$GEpisodeInput _build() {
    final _$result = _$v ??
        new _$GEpisodeInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GEpisodeInput', 'patientId'),
            category: category);
    replace(_$result);
    return _$result;
  }
}

class _$GEpisodeInputWithPagination extends GEpisodeInputWithPagination {
  @override
  final String patientId;
  @override
  final GEpisodeCategory? category;
  @override
  final double? currentPage;
  @override
  final double? episodesPerPage;

  factory _$GEpisodeInputWithPagination(
          [void Function(GEpisodeInputWithPaginationBuilder)? updates]) =>
      (new GEpisodeInputWithPaginationBuilder()..update(updates))._build();

  _$GEpisodeInputWithPagination._(
      {required this.patientId,
      this.category,
      this.currentPage,
      this.episodesPerPage})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GEpisodeInputWithPagination', 'patientId');
  }

  @override
  GEpisodeInputWithPagination rebuild(
          void Function(GEpisodeInputWithPaginationBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEpisodeInputWithPaginationBuilder toBuilder() =>
      new GEpisodeInputWithPaginationBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEpisodeInputWithPagination &&
        patientId == other.patientId &&
        category == other.category &&
        currentPage == other.currentPage &&
        episodesPerPage == other.episodesPerPage;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, currentPage.hashCode);
    _$hash = $jc(_$hash, episodesPerPage.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEpisodeInputWithPagination')
          ..add('patientId', patientId)
          ..add('category', category)
          ..add('currentPage', currentPage)
          ..add('episodesPerPage', episodesPerPage))
        .toString();
  }
}

class GEpisodeInputWithPaginationBuilder
    implements
        Builder<GEpisodeInputWithPagination,
            GEpisodeInputWithPaginationBuilder> {
  _$GEpisodeInputWithPagination? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GEpisodeCategory? _category;
  GEpisodeCategory? get category => _$this._category;
  set category(GEpisodeCategory? category) => _$this._category = category;

  double? _currentPage;
  double? get currentPage => _$this._currentPage;
  set currentPage(double? currentPage) => _$this._currentPage = currentPage;

  double? _episodesPerPage;
  double? get episodesPerPage => _$this._episodesPerPage;
  set episodesPerPage(double? episodesPerPage) =>
      _$this._episodesPerPage = episodesPerPage;

  GEpisodeInputWithPaginationBuilder();

  GEpisodeInputWithPaginationBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _category = $v.category;
      _currentPage = $v.currentPage;
      _episodesPerPage = $v.episodesPerPage;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEpisodeInputWithPagination other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEpisodeInputWithPagination;
  }

  @override
  void update(void Function(GEpisodeInputWithPaginationBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEpisodeInputWithPagination build() => _build();

  _$GEpisodeInputWithPagination _build() {
    final _$result = _$v ??
        new _$GEpisodeInputWithPagination._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GEpisodeInputWithPagination', 'patientId'),
            category: category,
            currentPage: currentPage,
            episodesPerPage: episodesPerPage);
    replace(_$result);
    return _$result;
  }
}

class _$GMessagingPageableInput extends GMessagingPageableInput {
  @override
  final GPageableInput pageable;
  @override
  final String patientId;
  @override
  final GFiltersInput? filters;

  factory _$GMessagingPageableInput(
          [void Function(GMessagingPageableInputBuilder)? updates]) =>
      (new GMessagingPageableInputBuilder()..update(updates))._build();

  _$GMessagingPageableInput._(
      {required this.pageable, required this.patientId, this.filters})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        pageable, r'GMessagingPageableInput', 'pageable');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GMessagingPageableInput', 'patientId');
  }

  @override
  GMessagingPageableInput rebuild(
          void Function(GMessagingPageableInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMessagingPageableInputBuilder toBuilder() =>
      new GMessagingPageableInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMessagingPageableInput &&
        pageable == other.pageable &&
        patientId == other.patientId &&
        filters == other.filters;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, pageable.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, filters.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMessagingPageableInput')
          ..add('pageable', pageable)
          ..add('patientId', patientId)
          ..add('filters', filters))
        .toString();
  }
}

class GMessagingPageableInputBuilder
    implements
        Builder<GMessagingPageableInput, GMessagingPageableInputBuilder> {
  _$GMessagingPageableInput? _$v;

  GPageableInputBuilder? _pageable;
  GPageableInputBuilder get pageable =>
      _$this._pageable ??= new GPageableInputBuilder();
  set pageable(GPageableInputBuilder? pageable) => _$this._pageable = pageable;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GFiltersInputBuilder? _filters;
  GFiltersInputBuilder get filters =>
      _$this._filters ??= new GFiltersInputBuilder();
  set filters(GFiltersInputBuilder? filters) => _$this._filters = filters;

  GMessagingPageableInputBuilder();

  GMessagingPageableInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pageable = $v.pageable.toBuilder();
      _patientId = $v.patientId;
      _filters = $v.filters?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMessagingPageableInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMessagingPageableInput;
  }

  @override
  void update(void Function(GMessagingPageableInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMessagingPageableInput build() => _build();

  _$GMessagingPageableInput _build() {
    _$GMessagingPageableInput _$result;
    try {
      _$result = _$v ??
          new _$GMessagingPageableInput._(
              pageable: pageable.build(),
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GMessagingPageableInput', 'patientId'),
              filters: _filters?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pageable';
        pageable.build();

        _$failedField = 'filters';
        _filters?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMessagingPageableInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GPageableInput extends GPageableInput {
  @override
  final int? itemsPerPage;
  @override
  final int? page;

  factory _$GPageableInput([void Function(GPageableInputBuilder)? updates]) =>
      (new GPageableInputBuilder()..update(updates))._build();

  _$GPageableInput._({this.itemsPerPage, this.page}) : super._();

  @override
  GPageableInput rebuild(void Function(GPageableInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GPageableInputBuilder toBuilder() =>
      new GPageableInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GPageableInput &&
        itemsPerPage == other.itemsPerPage &&
        page == other.page;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, itemsPerPage.hashCode);
    _$hash = $jc(_$hash, page.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GPageableInput')
          ..add('itemsPerPage', itemsPerPage)
          ..add('page', page))
        .toString();
  }
}

class GPageableInputBuilder
    implements Builder<GPageableInput, GPageableInputBuilder> {
  _$GPageableInput? _$v;

  int? _itemsPerPage;
  int? get itemsPerPage => _$this._itemsPerPage;
  set itemsPerPage(int? itemsPerPage) => _$this._itemsPerPage = itemsPerPage;

  int? _page;
  int? get page => _$this._page;
  set page(int? page) => _$this._page = page;

  GPageableInputBuilder();

  GPageableInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _itemsPerPage = $v.itemsPerPage;
      _page = $v.page;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GPageableInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GPageableInput;
  }

  @override
  void update(void Function(GPageableInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GPageableInput build() => _build();

  _$GPageableInput _build() {
    final _$result =
        _$v ?? new _$GPageableInput._(itemsPerPage: itemsPerPage, page: page);
    replace(_$result);
    return _$result;
  }
}

class _$GFiltersInput extends GFiltersInput {
  @override
  final bool? withNewMessage;

  factory _$GFiltersInput([void Function(GFiltersInputBuilder)? updates]) =>
      (new GFiltersInputBuilder()..update(updates))._build();

  _$GFiltersInput._({this.withNewMessage}) : super._();

  @override
  GFiltersInput rebuild(void Function(GFiltersInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFiltersInputBuilder toBuilder() => new GFiltersInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFiltersInput && withNewMessage == other.withNewMessage;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, withNewMessage.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFiltersInput')
          ..add('withNewMessage', withNewMessage))
        .toString();
  }
}

class GFiltersInputBuilder
    implements Builder<GFiltersInput, GFiltersInputBuilder> {
  _$GFiltersInput? _$v;

  bool? _withNewMessage;
  bool? get withNewMessage => _$this._withNewMessage;
  set withNewMessage(bool? withNewMessage) =>
      _$this._withNewMessage = withNewMessage;

  GFiltersInputBuilder();

  GFiltersInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _withNewMessage = $v.withNewMessage;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFiltersInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFiltersInput;
  }

  @override
  void update(void Function(GFiltersInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFiltersInput build() => _build();

  _$GFiltersInput _build() {
    final _$result =
        _$v ?? new _$GFiltersInput._(withNewMessage: withNewMessage);
    replace(_$result);
    return _$result;
  }
}

class _$GMessageInput extends GMessageInput {
  @override
  final String patientId;
  @override
  final String messageId;

  factory _$GMessageInput([void Function(GMessageInputBuilder)? updates]) =>
      (new GMessageInputBuilder()..update(updates))._build();

  _$GMessageInput._({required this.patientId, required this.messageId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GMessageInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        messageId, r'GMessageInput', 'messageId');
  }

  @override
  GMessageInput rebuild(void Function(GMessageInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMessageInputBuilder toBuilder() => new GMessageInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMessageInput &&
        patientId == other.patientId &&
        messageId == other.messageId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, messageId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMessageInput')
          ..add('patientId', patientId)
          ..add('messageId', messageId))
        .toString();
  }
}

class GMessageInputBuilder
    implements Builder<GMessageInput, GMessageInputBuilder> {
  _$GMessageInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _messageId;
  String? get messageId => _$this._messageId;
  set messageId(String? messageId) => _$this._messageId = messageId;

  GMessageInputBuilder();

  GMessageInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _messageId = $v.messageId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMessageInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMessageInput;
  }

  @override
  void update(void Function(GMessageInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMessageInput build() => _build();

  _$GMessageInput _build() {
    final _$result = _$v ??
        new _$GMessageInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GMessageInput', 'patientId'),
            messageId: BuiltValueNullFieldError.checkNotNull(
                messageId, r'GMessageInput', 'messageId'));
    replace(_$result);
    return _$result;
  }
}

class _$GMessagingInput extends GMessagingInput {
  @override
  final String patientId;
  @override
  final String conversationId;

  factory _$GMessagingInput([void Function(GMessagingInputBuilder)? updates]) =>
      (new GMessagingInputBuilder()..update(updates))._build();

  _$GMessagingInput._({required this.patientId, required this.conversationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GMessagingInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        conversationId, r'GMessagingInput', 'conversationId');
  }

  @override
  GMessagingInput rebuild(void Function(GMessagingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMessagingInputBuilder toBuilder() =>
      new GMessagingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMessagingInput &&
        patientId == other.patientId &&
        conversationId == other.conversationId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, conversationId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMessagingInput')
          ..add('patientId', patientId)
          ..add('conversationId', conversationId))
        .toString();
  }
}

class GMessagingInputBuilder
    implements Builder<GMessagingInput, GMessagingInputBuilder> {
  _$GMessagingInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _conversationId;
  String? get conversationId => _$this._conversationId;
  set conversationId(String? conversationId) =>
      _$this._conversationId = conversationId;

  GMessagingInputBuilder();

  GMessagingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _conversationId = $v.conversationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMessagingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMessagingInput;
  }

  @override
  void update(void Function(GMessagingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMessagingInput build() => _build();

  _$GMessagingInput _build() {
    final _$result = _$v ??
        new _$GMessagingInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GMessagingInput', 'patientId'),
            conversationId: BuiltValueNullFieldError.checkNotNull(
                conversationId, r'GMessagingInput', 'conversationId'));
    replace(_$result);
    return _$result;
  }
}

class _$GHealthProfessionalEmailsInput extends GHealthProfessionalEmailsInput {
  @override
  final BuiltList<String>? emails;

  factory _$GHealthProfessionalEmailsInput(
          [void Function(GHealthProfessionalEmailsInputBuilder)? updates]) =>
      (new GHealthProfessionalEmailsInputBuilder()..update(updates))._build();

  _$GHealthProfessionalEmailsInput._({this.emails}) : super._();

  @override
  GHealthProfessionalEmailsInput rebuild(
          void Function(GHealthProfessionalEmailsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHealthProfessionalEmailsInputBuilder toBuilder() =>
      new GHealthProfessionalEmailsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHealthProfessionalEmailsInput && emails == other.emails;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, emails.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHealthProfessionalEmailsInput')
          ..add('emails', emails))
        .toString();
  }
}

class GHealthProfessionalEmailsInputBuilder
    implements
        Builder<GHealthProfessionalEmailsInput,
            GHealthProfessionalEmailsInputBuilder> {
  _$GHealthProfessionalEmailsInput? _$v;

  ListBuilder<String>? _emails;
  ListBuilder<String> get emails =>
      _$this._emails ??= new ListBuilder<String>();
  set emails(ListBuilder<String>? emails) => _$this._emails = emails;

  GHealthProfessionalEmailsInputBuilder();

  GHealthProfessionalEmailsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _emails = $v.emails?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHealthProfessionalEmailsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHealthProfessionalEmailsInput;
  }

  @override
  void update(void Function(GHealthProfessionalEmailsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHealthProfessionalEmailsInput build() => _build();

  _$GHealthProfessionalEmailsInput _build() {
    _$GHealthProfessionalEmailsInput _$result;
    try {
      _$result = _$v ??
          new _$GHealthProfessionalEmailsInput._(emails: _emails?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'emails';
        _emails?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHealthProfessionalEmailsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GContactDetailsInput extends GContactDetailsInput {
  @override
  final String name;
  @override
  final String type;
  @override
  final String idNat;
  @override
  final String typeBal;

  factory _$GContactDetailsInput(
          [void Function(GContactDetailsInputBuilder)? updates]) =>
      (new GContactDetailsInputBuilder()..update(updates))._build();

  _$GContactDetailsInput._(
      {required this.name,
      required this.type,
      required this.idNat,
      required this.typeBal})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GContactDetailsInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GContactDetailsInput', 'type');
    BuiltValueNullFieldError.checkNotNull(
        idNat, r'GContactDetailsInput', 'idNat');
    BuiltValueNullFieldError.checkNotNull(
        typeBal, r'GContactDetailsInput', 'typeBal');
  }

  @override
  GContactDetailsInput rebuild(
          void Function(GContactDetailsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GContactDetailsInputBuilder toBuilder() =>
      new GContactDetailsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GContactDetailsInput &&
        name == other.name &&
        type == other.type &&
        idNat == other.idNat &&
        typeBal == other.typeBal;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, idNat.hashCode);
    _$hash = $jc(_$hash, typeBal.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GContactDetailsInput')
          ..add('name', name)
          ..add('type', type)
          ..add('idNat', idNat)
          ..add('typeBal', typeBal))
        .toString();
  }
}

class GContactDetailsInputBuilder
    implements Builder<GContactDetailsInput, GContactDetailsInputBuilder> {
  _$GContactDetailsInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _idNat;
  String? get idNat => _$this._idNat;
  set idNat(String? idNat) => _$this._idNat = idNat;

  String? _typeBal;
  String? get typeBal => _$this._typeBal;
  set typeBal(String? typeBal) => _$this._typeBal = typeBal;

  GContactDetailsInputBuilder();

  GContactDetailsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _type = $v.type;
      _idNat = $v.idNat;
      _typeBal = $v.typeBal;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GContactDetailsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GContactDetailsInput;
  }

  @override
  void update(void Function(GContactDetailsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GContactDetailsInput build() => _build();

  _$GContactDetailsInput _build() {
    final _$result = _$v ??
        new _$GContactDetailsInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GContactDetailsInput', 'name'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GContactDetailsInput', 'type'),
            idNat: BuiltValueNullFieldError.checkNotNull(
                idNat, r'GContactDetailsInput', 'idNat'),
            typeBal: BuiltValueNullFieldError.checkNotNull(
                typeBal, r'GContactDetailsInput', 'typeBal'));
    replace(_$result);
    return _$result;
  }
}

class _$GMeasureGrowthMetricsParams extends GMeasureGrowthMetricsParams {
  @override
  final GMeasureCode code;
  @override
  final GMeasureGender gender;
  @override
  final String birthdate;
  @override
  final BuiltList<GMeasureCategory>? categories;
  @override
  final String startPeriod;
  @override
  final String endPeriod;
  @override
  final bool? isReducedDataForChart;

  factory _$GMeasureGrowthMetricsParams(
          [void Function(GMeasureGrowthMetricsParamsBuilder)? updates]) =>
      (new GMeasureGrowthMetricsParamsBuilder()..update(updates))._build();

  _$GMeasureGrowthMetricsParams._(
      {required this.code,
      required this.gender,
      required this.birthdate,
      this.categories,
      required this.startPeriod,
      required this.endPeriod,
      this.isReducedDataForChart})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        code, r'GMeasureGrowthMetricsParams', 'code');
    BuiltValueNullFieldError.checkNotNull(
        gender, r'GMeasureGrowthMetricsParams', 'gender');
    BuiltValueNullFieldError.checkNotNull(
        birthdate, r'GMeasureGrowthMetricsParams', 'birthdate');
    BuiltValueNullFieldError.checkNotNull(
        startPeriod, r'GMeasureGrowthMetricsParams', 'startPeriod');
    BuiltValueNullFieldError.checkNotNull(
        endPeriod, r'GMeasureGrowthMetricsParams', 'endPeriod');
  }

  @override
  GMeasureGrowthMetricsParams rebuild(
          void Function(GMeasureGrowthMetricsParamsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMeasureGrowthMetricsParamsBuilder toBuilder() =>
      new GMeasureGrowthMetricsParamsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMeasureGrowthMetricsParams &&
        code == other.code &&
        gender == other.gender &&
        birthdate == other.birthdate &&
        categories == other.categories &&
        startPeriod == other.startPeriod &&
        endPeriod == other.endPeriod &&
        isReducedDataForChart == other.isReducedDataForChart;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, gender.hashCode);
    _$hash = $jc(_$hash, birthdate.hashCode);
    _$hash = $jc(_$hash, categories.hashCode);
    _$hash = $jc(_$hash, startPeriod.hashCode);
    _$hash = $jc(_$hash, endPeriod.hashCode);
    _$hash = $jc(_$hash, isReducedDataForChart.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMeasureGrowthMetricsParams')
          ..add('code', code)
          ..add('gender', gender)
          ..add('birthdate', birthdate)
          ..add('categories', categories)
          ..add('startPeriod', startPeriod)
          ..add('endPeriod', endPeriod)
          ..add('isReducedDataForChart', isReducedDataForChart))
        .toString();
  }
}

class GMeasureGrowthMetricsParamsBuilder
    implements
        Builder<GMeasureGrowthMetricsParams,
            GMeasureGrowthMetricsParamsBuilder> {
  _$GMeasureGrowthMetricsParams? _$v;

  GMeasureCode? _code;
  GMeasureCode? get code => _$this._code;
  set code(GMeasureCode? code) => _$this._code = code;

  GMeasureGender? _gender;
  GMeasureGender? get gender => _$this._gender;
  set gender(GMeasureGender? gender) => _$this._gender = gender;

  String? _birthdate;
  String? get birthdate => _$this._birthdate;
  set birthdate(String? birthdate) => _$this._birthdate = birthdate;

  ListBuilder<GMeasureCategory>? _categories;
  ListBuilder<GMeasureCategory> get categories =>
      _$this._categories ??= new ListBuilder<GMeasureCategory>();
  set categories(ListBuilder<GMeasureCategory>? categories) =>
      _$this._categories = categories;

  String? _startPeriod;
  String? get startPeriod => _$this._startPeriod;
  set startPeriod(String? startPeriod) => _$this._startPeriod = startPeriod;

  String? _endPeriod;
  String? get endPeriod => _$this._endPeriod;
  set endPeriod(String? endPeriod) => _$this._endPeriod = endPeriod;

  bool? _isReducedDataForChart;
  bool? get isReducedDataForChart => _$this._isReducedDataForChart;
  set isReducedDataForChart(bool? isReducedDataForChart) =>
      _$this._isReducedDataForChart = isReducedDataForChart;

  GMeasureGrowthMetricsParamsBuilder();

  GMeasureGrowthMetricsParamsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _code = $v.code;
      _gender = $v.gender;
      _birthdate = $v.birthdate;
      _categories = $v.categories?.toBuilder();
      _startPeriod = $v.startPeriod;
      _endPeriod = $v.endPeriod;
      _isReducedDataForChart = $v.isReducedDataForChart;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMeasureGrowthMetricsParams other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMeasureGrowthMetricsParams;
  }

  @override
  void update(void Function(GMeasureGrowthMetricsParamsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMeasureGrowthMetricsParams build() => _build();

  _$GMeasureGrowthMetricsParams _build() {
    _$GMeasureGrowthMetricsParams _$result;
    try {
      _$result = _$v ??
          new _$GMeasureGrowthMetricsParams._(
              code: BuiltValueNullFieldError.checkNotNull(
                  code, r'GMeasureGrowthMetricsParams', 'code'),
              gender: BuiltValueNullFieldError.checkNotNull(
                  gender, r'GMeasureGrowthMetricsParams', 'gender'),
              birthdate: BuiltValueNullFieldError.checkNotNull(
                  birthdate, r'GMeasureGrowthMetricsParams', 'birthdate'),
              categories: _categories?.build(),
              startPeriod: BuiltValueNullFieldError.checkNotNull(
                  startPeriod, r'GMeasureGrowthMetricsParams', 'startPeriod'),
              endPeriod: BuiltValueNullFieldError.checkNotNull(
                  endPeriod, r'GMeasureGrowthMetricsParams', 'endPeriod'),
              isReducedDataForChart: isReducedDataForChart);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'categories';
        _categories?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMeasureGrowthMetricsParams', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMeasurePageableInput extends GMeasurePageableInput {
  @override
  final GPageableInput pageable;
  @override
  final GMeasureCode code;
  @override
  final String patientId;
  @override
  final String? startPeriod;
  @override
  final String? endPeriod;

  factory _$GMeasurePageableInput(
          [void Function(GMeasurePageableInputBuilder)? updates]) =>
      (new GMeasurePageableInputBuilder()..update(updates))._build();

  _$GMeasurePageableInput._(
      {required this.pageable,
      required this.code,
      required this.patientId,
      this.startPeriod,
      this.endPeriod})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        pageable, r'GMeasurePageableInput', 'pageable');
    BuiltValueNullFieldError.checkNotNull(
        code, r'GMeasurePageableInput', 'code');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GMeasurePageableInput', 'patientId');
  }

  @override
  GMeasurePageableInput rebuild(
          void Function(GMeasurePageableInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMeasurePageableInputBuilder toBuilder() =>
      new GMeasurePageableInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMeasurePageableInput &&
        pageable == other.pageable &&
        code == other.code &&
        patientId == other.patientId &&
        startPeriod == other.startPeriod &&
        endPeriod == other.endPeriod;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, pageable.hashCode);
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, startPeriod.hashCode);
    _$hash = $jc(_$hash, endPeriod.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMeasurePageableInput')
          ..add('pageable', pageable)
          ..add('code', code)
          ..add('patientId', patientId)
          ..add('startPeriod', startPeriod)
          ..add('endPeriod', endPeriod))
        .toString();
  }
}

class GMeasurePageableInputBuilder
    implements Builder<GMeasurePageableInput, GMeasurePageableInputBuilder> {
  _$GMeasurePageableInput? _$v;

  GPageableInputBuilder? _pageable;
  GPageableInputBuilder get pageable =>
      _$this._pageable ??= new GPageableInputBuilder();
  set pageable(GPageableInputBuilder? pageable) => _$this._pageable = pageable;

  GMeasureCode? _code;
  GMeasureCode? get code => _$this._code;
  set code(GMeasureCode? code) => _$this._code = code;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _startPeriod;
  String? get startPeriod => _$this._startPeriod;
  set startPeriod(String? startPeriod) => _$this._startPeriod = startPeriod;

  String? _endPeriod;
  String? get endPeriod => _$this._endPeriod;
  set endPeriod(String? endPeriod) => _$this._endPeriod = endPeriod;

  GMeasurePageableInputBuilder();

  GMeasurePageableInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pageable = $v.pageable.toBuilder();
      _code = $v.code;
      _patientId = $v.patientId;
      _startPeriod = $v.startPeriod;
      _endPeriod = $v.endPeriod;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMeasurePageableInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMeasurePageableInput;
  }

  @override
  void update(void Function(GMeasurePageableInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMeasurePageableInput build() => _build();

  _$GMeasurePageableInput _build() {
    _$GMeasurePageableInput _$result;
    try {
      _$result = _$v ??
          new _$GMeasurePageableInput._(
              pageable: pageable.build(),
              code: BuiltValueNullFieldError.checkNotNull(
                  code, r'GMeasurePageableInput', 'code'),
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GMeasurePageableInput', 'patientId'),
              startPeriod: startPeriod,
              endPeriod: endPeriod);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'pageable';
        pageable.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMeasurePageableInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GHealthProfessionalTraceInput extends GHealthProfessionalTraceInput {
  @override
  final String patientId;
  @override
  final String rppsId;

  factory _$GHealthProfessionalTraceInput(
          [void Function(GHealthProfessionalTraceInputBuilder)? updates]) =>
      (new GHealthProfessionalTraceInputBuilder()..update(updates))._build();

  _$GHealthProfessionalTraceInput._(
      {required this.patientId, required this.rppsId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GHealthProfessionalTraceInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        rppsId, r'GHealthProfessionalTraceInput', 'rppsId');
  }

  @override
  GHealthProfessionalTraceInput rebuild(
          void Function(GHealthProfessionalTraceInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHealthProfessionalTraceInputBuilder toBuilder() =>
      new GHealthProfessionalTraceInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHealthProfessionalTraceInput &&
        patientId == other.patientId &&
        rppsId == other.rppsId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, rppsId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHealthProfessionalTraceInput')
          ..add('patientId', patientId)
          ..add('rppsId', rppsId))
        .toString();
  }
}

class GHealthProfessionalTraceInputBuilder
    implements
        Builder<GHealthProfessionalTraceInput,
            GHealthProfessionalTraceInputBuilder> {
  _$GHealthProfessionalTraceInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _rppsId;
  String? get rppsId => _$this._rppsId;
  set rppsId(String? rppsId) => _$this._rppsId = rppsId;

  GHealthProfessionalTraceInputBuilder();

  GHealthProfessionalTraceInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _rppsId = $v.rppsId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHealthProfessionalTraceInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHealthProfessionalTraceInput;
  }

  @override
  void update(void Function(GHealthProfessionalTraceInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHealthProfessionalTraceInput build() => _build();

  _$GHealthProfessionalTraceInput _build() {
    final _$result = _$v ??
        new _$GHealthProfessionalTraceInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GHealthProfessionalTraceInput', 'patientId'),
            rppsId: BuiltValueNullFieldError.checkNotNull(
                rppsId, r'GHealthProfessionalTraceInput', 'rppsId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSearchStructureInputModel extends GSearchStructureInputModel {
  @override
  final String? type;
  @override
  final String? name;
  @override
  final String? codeCommune;
  @override
  final String? codeDepartement;
  @override
  final String? codePostal;

  factory _$GSearchStructureInputModel(
          [void Function(GSearchStructureInputModelBuilder)? updates]) =>
      (new GSearchStructureInputModelBuilder()..update(updates))._build();

  _$GSearchStructureInputModel._(
      {this.type,
      this.name,
      this.codeCommune,
      this.codeDepartement,
      this.codePostal})
      : super._();

  @override
  GSearchStructureInputModel rebuild(
          void Function(GSearchStructureInputModelBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSearchStructureInputModelBuilder toBuilder() =>
      new GSearchStructureInputModelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSearchStructureInputModel &&
        type == other.type &&
        name == other.name &&
        codeCommune == other.codeCommune &&
        codeDepartement == other.codeDepartement &&
        codePostal == other.codePostal;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, codeCommune.hashCode);
    _$hash = $jc(_$hash, codeDepartement.hashCode);
    _$hash = $jc(_$hash, codePostal.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSearchStructureInputModel')
          ..add('type', type)
          ..add('name', name)
          ..add('codeCommune', codeCommune)
          ..add('codeDepartement', codeDepartement)
          ..add('codePostal', codePostal))
        .toString();
  }
}

class GSearchStructureInputModelBuilder
    implements
        Builder<GSearchStructureInputModel, GSearchStructureInputModelBuilder> {
  _$GSearchStructureInputModel? _$v;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _codeCommune;
  String? get codeCommune => _$this._codeCommune;
  set codeCommune(String? codeCommune) => _$this._codeCommune = codeCommune;

  String? _codeDepartement;
  String? get codeDepartement => _$this._codeDepartement;
  set codeDepartement(String? codeDepartement) =>
      _$this._codeDepartement = codeDepartement;

  String? _codePostal;
  String? get codePostal => _$this._codePostal;
  set codePostal(String? codePostal) => _$this._codePostal = codePostal;

  GSearchStructureInputModelBuilder();

  GSearchStructureInputModelBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _type = $v.type;
      _name = $v.name;
      _codeCommune = $v.codeCommune;
      _codeDepartement = $v.codeDepartement;
      _codePostal = $v.codePostal;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSearchStructureInputModel other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSearchStructureInputModel;
  }

  @override
  void update(void Function(GSearchStructureInputModelBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSearchStructureInputModel build() => _build();

  _$GSearchStructureInputModel _build() {
    final _$result = _$v ??
        new _$GSearchStructureInputModel._(
            type: type,
            name: name,
            codeCommune: codeCommune,
            codeDepartement: codeDepartement,
            codePostal: codePostal);
    replace(_$result);
    return _$result;
  }
}

class _$GFileGetInput extends GFileGetInput {
  @override
  final String patientId;
  @override
  final String fileId;

  factory _$GFileGetInput([void Function(GFileGetInputBuilder)? updates]) =>
      (new GFileGetInputBuilder()..update(updates))._build();

  _$GFileGetInput._({required this.patientId, required this.fileId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GFileGetInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(fileId, r'GFileGetInput', 'fileId');
  }

  @override
  GFileGetInput rebuild(void Function(GFileGetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFileGetInputBuilder toBuilder() => new GFileGetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFileGetInput &&
        patientId == other.patientId &&
        fileId == other.fileId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, fileId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFileGetInput')
          ..add('patientId', patientId)
          ..add('fileId', fileId))
        .toString();
  }
}

class GFileGetInputBuilder
    implements Builder<GFileGetInput, GFileGetInputBuilder> {
  _$GFileGetInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _fileId;
  String? get fileId => _$this._fileId;
  set fileId(String? fileId) => _$this._fileId = fileId;

  GFileGetInputBuilder();

  GFileGetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _fileId = $v.fileId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFileGetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFileGetInput;
  }

  @override
  void update(void Function(GFileGetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFileGetInput build() => _build();

  _$GFileGetInput _build() {
    final _$result = _$v ??
        new _$GFileGetInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GFileGetInput', 'patientId'),
            fileId: BuiltValueNullFieldError.checkNotNull(
                fileId, r'GFileGetInput', 'fileId'));
    replace(_$result);
    return _$result;
  }
}

class _$GDelegationInvitationFilter extends GDelegationInvitationFilter {
  @override
  final GDelegationInvitationStatus? status;
  @override
  final GDelegationType? type;
  @override
  final GDelegationDirection? direction;

  factory _$GDelegationInvitationFilter(
          [void Function(GDelegationInvitationFilterBuilder)? updates]) =>
      (new GDelegationInvitationFilterBuilder()..update(updates))._build();

  _$GDelegationInvitationFilter._({this.status, this.type, this.direction})
      : super._();

  @override
  GDelegationInvitationFilter rebuild(
          void Function(GDelegationInvitationFilterBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDelegationInvitationFilterBuilder toBuilder() =>
      new GDelegationInvitationFilterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDelegationInvitationFilter &&
        status == other.status &&
        type == other.type &&
        direction == other.direction;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, direction.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDelegationInvitationFilter')
          ..add('status', status)
          ..add('type', type)
          ..add('direction', direction))
        .toString();
  }
}

class GDelegationInvitationFilterBuilder
    implements
        Builder<GDelegationInvitationFilter,
            GDelegationInvitationFilterBuilder> {
  _$GDelegationInvitationFilter? _$v;

  GDelegationInvitationStatus? _status;
  GDelegationInvitationStatus? get status => _$this._status;
  set status(GDelegationInvitationStatus? status) => _$this._status = status;

  GDelegationType? _type;
  GDelegationType? get type => _$this._type;
  set type(GDelegationType? type) => _$this._type = type;

  GDelegationDirection? _direction;
  GDelegationDirection? get direction => _$this._direction;
  set direction(GDelegationDirection? direction) =>
      _$this._direction = direction;

  GDelegationInvitationFilterBuilder();

  GDelegationInvitationFilterBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _status = $v.status;
      _type = $v.type;
      _direction = $v.direction;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDelegationInvitationFilter other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDelegationInvitationFilter;
  }

  @override
  void update(void Function(GDelegationInvitationFilterBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDelegationInvitationFilter build() => _build();

  _$GDelegationInvitationFilter _build() {
    final _$result = _$v ??
        new _$GDelegationInvitationFilter._(
            status: status, type: type, direction: direction);
    replace(_$result);
    return _$result;
  }
}

class _$GDelegationFilter extends GDelegationFilter {
  @override
  final bool? onlyActive;
  @override
  final bool? withDetails;
  @override
  final GDelegationType? type;
  @override
  final GDelegationDirection? direction;

  factory _$GDelegationFilter(
          [void Function(GDelegationFilterBuilder)? updates]) =>
      (new GDelegationFilterBuilder()..update(updates))._build();

  _$GDelegationFilter._(
      {this.onlyActive, this.withDetails, this.type, this.direction})
      : super._();

  @override
  GDelegationFilter rebuild(void Function(GDelegationFilterBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDelegationFilterBuilder toBuilder() =>
      new GDelegationFilterBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDelegationFilter &&
        onlyActive == other.onlyActive &&
        withDetails == other.withDetails &&
        type == other.type &&
        direction == other.direction;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, onlyActive.hashCode);
    _$hash = $jc(_$hash, withDetails.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, direction.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDelegationFilter')
          ..add('onlyActive', onlyActive)
          ..add('withDetails', withDetails)
          ..add('type', type)
          ..add('direction', direction))
        .toString();
  }
}

class GDelegationFilterBuilder
    implements Builder<GDelegationFilter, GDelegationFilterBuilder> {
  _$GDelegationFilter? _$v;

  bool? _onlyActive;
  bool? get onlyActive => _$this._onlyActive;
  set onlyActive(bool? onlyActive) => _$this._onlyActive = onlyActive;

  bool? _withDetails;
  bool? get withDetails => _$this._withDetails;
  set withDetails(bool? withDetails) => _$this._withDetails = withDetails;

  GDelegationType? _type;
  GDelegationType? get type => _$this._type;
  set type(GDelegationType? type) => _$this._type = type;

  GDelegationDirection? _direction;
  GDelegationDirection? get direction => _$this._direction;
  set direction(GDelegationDirection? direction) =>
      _$this._direction = direction;

  GDelegationFilterBuilder();

  GDelegationFilterBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _onlyActive = $v.onlyActive;
      _withDetails = $v.withDetails;
      _type = $v.type;
      _direction = $v.direction;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDelegationFilter other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDelegationFilter;
  }

  @override
  void update(void Function(GDelegationFilterBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDelegationFilter build() => _build();

  _$GDelegationFilter _build() {
    final _$result = _$v ??
        new _$GDelegationFilter._(
            onlyActive: onlyActive,
            withDetails: withDetails,
            type: type,
            direction: direction);
    replace(_$result);
    return _$result;
  }
}

class _$GActivityTraceFilterInput extends GActivityTraceFilterInput {
  @override
  final String? startDate;
  @override
  final String? endDate;

  factory _$GActivityTraceFilterInput(
          [void Function(GActivityTraceFilterInputBuilder)? updates]) =>
      (new GActivityTraceFilterInputBuilder()..update(updates))._build();

  _$GActivityTraceFilterInput._({this.startDate, this.endDate}) : super._();

  @override
  GActivityTraceFilterInput rebuild(
          void Function(GActivityTraceFilterInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GActivityTraceFilterInputBuilder toBuilder() =>
      new GActivityTraceFilterInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GActivityTraceFilterInput &&
        startDate == other.startDate &&
        endDate == other.endDate;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, startDate.hashCode);
    _$hash = $jc(_$hash, endDate.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GActivityTraceFilterInput')
          ..add('startDate', startDate)
          ..add('endDate', endDate))
        .toString();
  }
}

class GActivityTraceFilterInputBuilder
    implements
        Builder<GActivityTraceFilterInput, GActivityTraceFilterInputBuilder> {
  _$GActivityTraceFilterInput? _$v;

  String? _startDate;
  String? get startDate => _$this._startDate;
  set startDate(String? startDate) => _$this._startDate = startDate;

  String? _endDate;
  String? get endDate => _$this._endDate;
  set endDate(String? endDate) => _$this._endDate = endDate;

  GActivityTraceFilterInputBuilder();

  GActivityTraceFilterInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _startDate = $v.startDate;
      _endDate = $v.endDate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GActivityTraceFilterInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GActivityTraceFilterInput;
  }

  @override
  void update(void Function(GActivityTraceFilterInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GActivityTraceFilterInput build() => _build();

  _$GActivityTraceFilterInput _build() {
    final _$result = _$v ??
        new _$GActivityTraceFilterInput._(
            startDate: startDate, endDate: endDate);
    replace(_$result);
    return _$result;
  }
}

class _$GSendOtpUpdateContactInput extends GSendOtpUpdateContactInput {
  @override
  final GCanalType canalType;
  @override
  final String canalValue;

  factory _$GSendOtpUpdateContactInput(
          [void Function(GSendOtpUpdateContactInputBuilder)? updates]) =>
      (new GSendOtpUpdateContactInputBuilder()..update(updates))._build();

  _$GSendOtpUpdateContactInput._(
      {required this.canalType, required this.canalValue})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        canalType, r'GSendOtpUpdateContactInput', 'canalType');
    BuiltValueNullFieldError.checkNotNull(
        canalValue, r'GSendOtpUpdateContactInput', 'canalValue');
  }

  @override
  GSendOtpUpdateContactInput rebuild(
          void Function(GSendOtpUpdateContactInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSendOtpUpdateContactInputBuilder toBuilder() =>
      new GSendOtpUpdateContactInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSendOtpUpdateContactInput &&
        canalType == other.canalType &&
        canalValue == other.canalValue;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, canalType.hashCode);
    _$hash = $jc(_$hash, canalValue.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSendOtpUpdateContactInput')
          ..add('canalType', canalType)
          ..add('canalValue', canalValue))
        .toString();
  }
}

class GSendOtpUpdateContactInputBuilder
    implements
        Builder<GSendOtpUpdateContactInput, GSendOtpUpdateContactInputBuilder> {
  _$GSendOtpUpdateContactInput? _$v;

  GCanalType? _canalType;
  GCanalType? get canalType => _$this._canalType;
  set canalType(GCanalType? canalType) => _$this._canalType = canalType;

  String? _canalValue;
  String? get canalValue => _$this._canalValue;
  set canalValue(String? canalValue) => _$this._canalValue = canalValue;

  GSendOtpUpdateContactInputBuilder();

  GSendOtpUpdateContactInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _canalType = $v.canalType;
      _canalValue = $v.canalValue;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSendOtpUpdateContactInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSendOtpUpdateContactInput;
  }

  @override
  void update(void Function(GSendOtpUpdateContactInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSendOtpUpdateContactInput build() => _build();

  _$GSendOtpUpdateContactInput _build() {
    final _$result = _$v ??
        new _$GSendOtpUpdateContactInput._(
            canalType: BuiltValueNullFieldError.checkNotNull(
                canalType, r'GSendOtpUpdateContactInput', 'canalType'),
            canalValue: BuiltValueNullFieldError.checkNotNull(
                canalValue, r'GSendOtpUpdateContactInput', 'canalValue'));
    replace(_$result);
    return _$result;
  }
}

class _$GVerifyOtpUpdateContactInput extends GVerifyOtpUpdateContactInput {
  @override
  final GCanalType canalType;
  @override
  final String otpCode;

  factory _$GVerifyOtpUpdateContactInput(
          [void Function(GVerifyOtpUpdateContactInputBuilder)? updates]) =>
      (new GVerifyOtpUpdateContactInputBuilder()..update(updates))._build();

  _$GVerifyOtpUpdateContactInput._(
      {required this.canalType, required this.otpCode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        canalType, r'GVerifyOtpUpdateContactInput', 'canalType');
    BuiltValueNullFieldError.checkNotNull(
        otpCode, r'GVerifyOtpUpdateContactInput', 'otpCode');
  }

  @override
  GVerifyOtpUpdateContactInput rebuild(
          void Function(GVerifyOtpUpdateContactInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVerifyOtpUpdateContactInputBuilder toBuilder() =>
      new GVerifyOtpUpdateContactInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVerifyOtpUpdateContactInput &&
        canalType == other.canalType &&
        otpCode == other.otpCode;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, canalType.hashCode);
    _$hash = $jc(_$hash, otpCode.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVerifyOtpUpdateContactInput')
          ..add('canalType', canalType)
          ..add('otpCode', otpCode))
        .toString();
  }
}

class GVerifyOtpUpdateContactInputBuilder
    implements
        Builder<GVerifyOtpUpdateContactInput,
            GVerifyOtpUpdateContactInputBuilder> {
  _$GVerifyOtpUpdateContactInput? _$v;

  GCanalType? _canalType;
  GCanalType? get canalType => _$this._canalType;
  set canalType(GCanalType? canalType) => _$this._canalType = canalType;

  String? _otpCode;
  String? get otpCode => _$this._otpCode;
  set otpCode(String? otpCode) => _$this._otpCode = otpCode;

  GVerifyOtpUpdateContactInputBuilder();

  GVerifyOtpUpdateContactInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _canalType = $v.canalType;
      _otpCode = $v.otpCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVerifyOtpUpdateContactInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVerifyOtpUpdateContactInput;
  }

  @override
  void update(void Function(GVerifyOtpUpdateContactInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVerifyOtpUpdateContactInput build() => _build();

  _$GVerifyOtpUpdateContactInput _build() {
    final _$result = _$v ??
        new _$GVerifyOtpUpdateContactInput._(
            canalType: BuiltValueNullFieldError.checkNotNull(
                canalType, r'GVerifyOtpUpdateContactInput', 'canalType'),
            otpCode: BuiltValueNullFieldError.checkNotNull(
                otpCode, r'GVerifyOtpUpdateContactInput', 'otpCode'));
    replace(_$result);
    return _$result;
  }
}

class _$GGenerateNewEnrolmentCodeInput extends GGenerateNewEnrolmentCodeInput {
  @override
  final String nir;
  @override
  final String vitalCardNumber;
  @override
  final String dateOfBirth;
  @override
  final String? nirFutureUser;

  factory _$GGenerateNewEnrolmentCodeInput(
          [void Function(GGenerateNewEnrolmentCodeInputBuilder)? updates]) =>
      (new GGenerateNewEnrolmentCodeInputBuilder()..update(updates))._build();

  _$GGenerateNewEnrolmentCodeInput._(
      {required this.nir,
      required this.vitalCardNumber,
      required this.dateOfBirth,
      this.nirFutureUser})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        nir, r'GGenerateNewEnrolmentCodeInput', 'nir');
    BuiltValueNullFieldError.checkNotNull(
        vitalCardNumber, r'GGenerateNewEnrolmentCodeInput', 'vitalCardNumber');
    BuiltValueNullFieldError.checkNotNull(
        dateOfBirth, r'GGenerateNewEnrolmentCodeInput', 'dateOfBirth');
  }

  @override
  GGenerateNewEnrolmentCodeInput rebuild(
          void Function(GGenerateNewEnrolmentCodeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GGenerateNewEnrolmentCodeInputBuilder toBuilder() =>
      new GGenerateNewEnrolmentCodeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GGenerateNewEnrolmentCodeInput &&
        nir == other.nir &&
        vitalCardNumber == other.vitalCardNumber &&
        dateOfBirth == other.dateOfBirth &&
        nirFutureUser == other.nirFutureUser;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, nir.hashCode);
    _$hash = $jc(_$hash, vitalCardNumber.hashCode);
    _$hash = $jc(_$hash, dateOfBirth.hashCode);
    _$hash = $jc(_$hash, nirFutureUser.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GGenerateNewEnrolmentCodeInput')
          ..add('nir', nir)
          ..add('vitalCardNumber', vitalCardNumber)
          ..add('dateOfBirth', dateOfBirth)
          ..add('nirFutureUser', nirFutureUser))
        .toString();
  }
}

class GGenerateNewEnrolmentCodeInputBuilder
    implements
        Builder<GGenerateNewEnrolmentCodeInput,
            GGenerateNewEnrolmentCodeInputBuilder> {
  _$GGenerateNewEnrolmentCodeInput? _$v;

  String? _nir;
  String? get nir => _$this._nir;
  set nir(String? nir) => _$this._nir = nir;

  String? _vitalCardNumber;
  String? get vitalCardNumber => _$this._vitalCardNumber;
  set vitalCardNumber(String? vitalCardNumber) =>
      _$this._vitalCardNumber = vitalCardNumber;

  String? _dateOfBirth;
  String? get dateOfBirth => _$this._dateOfBirth;
  set dateOfBirth(String? dateOfBirth) => _$this._dateOfBirth = dateOfBirth;

  String? _nirFutureUser;
  String? get nirFutureUser => _$this._nirFutureUser;
  set nirFutureUser(String? nirFutureUser) =>
      _$this._nirFutureUser = nirFutureUser;

  GGenerateNewEnrolmentCodeInputBuilder();

  GGenerateNewEnrolmentCodeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _nir = $v.nir;
      _vitalCardNumber = $v.vitalCardNumber;
      _dateOfBirth = $v.dateOfBirth;
      _nirFutureUser = $v.nirFutureUser;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GGenerateNewEnrolmentCodeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GGenerateNewEnrolmentCodeInput;
  }

  @override
  void update(void Function(GGenerateNewEnrolmentCodeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GGenerateNewEnrolmentCodeInput build() => _build();

  _$GGenerateNewEnrolmentCodeInput _build() {
    final _$result = _$v ??
        new _$GGenerateNewEnrolmentCodeInput._(
            nir: BuiltValueNullFieldError.checkNotNull(
                nir, r'GGenerateNewEnrolmentCodeInput', 'nir'),
            vitalCardNumber: BuiltValueNullFieldError.checkNotNull(
                vitalCardNumber,
                r'GGenerateNewEnrolmentCodeInput',
                'vitalCardNumber'),
            dateOfBirth: BuiltValueNullFieldError.checkNotNull(
                dateOfBirth, r'GGenerateNewEnrolmentCodeInput', 'dateOfBirth'),
            nirFutureUser: nirFutureUser);
    replace(_$result);
    return _$result;
  }
}

class _$GSendNewEnrolmentCodeInput extends GSendNewEnrolmentCodeInput {
  @override
  final GCanalType canalType;

  factory _$GSendNewEnrolmentCodeInput(
          [void Function(GSendNewEnrolmentCodeInputBuilder)? updates]) =>
      (new GSendNewEnrolmentCodeInputBuilder()..update(updates))._build();

  _$GSendNewEnrolmentCodeInput._({required this.canalType}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        canalType, r'GSendNewEnrolmentCodeInput', 'canalType');
  }

  @override
  GSendNewEnrolmentCodeInput rebuild(
          void Function(GSendNewEnrolmentCodeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSendNewEnrolmentCodeInputBuilder toBuilder() =>
      new GSendNewEnrolmentCodeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSendNewEnrolmentCodeInput && canalType == other.canalType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, canalType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSendNewEnrolmentCodeInput')
          ..add('canalType', canalType))
        .toString();
  }
}

class GSendNewEnrolmentCodeInputBuilder
    implements
        Builder<GSendNewEnrolmentCodeInput, GSendNewEnrolmentCodeInputBuilder> {
  _$GSendNewEnrolmentCodeInput? _$v;

  GCanalType? _canalType;
  GCanalType? get canalType => _$this._canalType;
  set canalType(GCanalType? canalType) => _$this._canalType = canalType;

  GSendNewEnrolmentCodeInputBuilder();

  GSendNewEnrolmentCodeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _canalType = $v.canalType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSendNewEnrolmentCodeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSendNewEnrolmentCodeInput;
  }

  @override
  void update(void Function(GSendNewEnrolmentCodeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSendNewEnrolmentCodeInput build() => _build();

  _$GSendNewEnrolmentCodeInput _build() {
    final _$result = _$v ??
        new _$GSendNewEnrolmentCodeInput._(
            canalType: BuiltValueNullFieldError.checkNotNull(
                canalType, r'GSendNewEnrolmentCodeInput', 'canalType'));
    replace(_$result);
    return _$result;
  }
}

class _$GVitalCardAuthenticationInput extends GVitalCardAuthenticationInput {
  @override
  final String? nir;
  @override
  final String? vitalCardNumber;
  @override
  final String enrolmentCode;

  factory _$GVitalCardAuthenticationInput(
          [void Function(GVitalCardAuthenticationInputBuilder)? updates]) =>
      (new GVitalCardAuthenticationInputBuilder()..update(updates))._build();

  _$GVitalCardAuthenticationInput._(
      {this.nir, this.vitalCardNumber, required this.enrolmentCode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        enrolmentCode, r'GVitalCardAuthenticationInput', 'enrolmentCode');
  }

  @override
  GVitalCardAuthenticationInput rebuild(
          void Function(GVitalCardAuthenticationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVitalCardAuthenticationInputBuilder toBuilder() =>
      new GVitalCardAuthenticationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVitalCardAuthenticationInput &&
        nir == other.nir &&
        vitalCardNumber == other.vitalCardNumber &&
        enrolmentCode == other.enrolmentCode;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, nir.hashCode);
    _$hash = $jc(_$hash, vitalCardNumber.hashCode);
    _$hash = $jc(_$hash, enrolmentCode.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVitalCardAuthenticationInput')
          ..add('nir', nir)
          ..add('vitalCardNumber', vitalCardNumber)
          ..add('enrolmentCode', enrolmentCode))
        .toString();
  }
}

class GVitalCardAuthenticationInputBuilder
    implements
        Builder<GVitalCardAuthenticationInput,
            GVitalCardAuthenticationInputBuilder> {
  _$GVitalCardAuthenticationInput? _$v;

  String? _nir;
  String? get nir => _$this._nir;
  set nir(String? nir) => _$this._nir = nir;

  String? _vitalCardNumber;
  String? get vitalCardNumber => _$this._vitalCardNumber;
  set vitalCardNumber(String? vitalCardNumber) =>
      _$this._vitalCardNumber = vitalCardNumber;

  String? _enrolmentCode;
  String? get enrolmentCode => _$this._enrolmentCode;
  set enrolmentCode(String? enrolmentCode) =>
      _$this._enrolmentCode = enrolmentCode;

  GVitalCardAuthenticationInputBuilder();

  GVitalCardAuthenticationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _nir = $v.nir;
      _vitalCardNumber = $v.vitalCardNumber;
      _enrolmentCode = $v.enrolmentCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVitalCardAuthenticationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVitalCardAuthenticationInput;
  }

  @override
  void update(void Function(GVitalCardAuthenticationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVitalCardAuthenticationInput build() => _build();

  _$GVitalCardAuthenticationInput _build() {
    final _$result = _$v ??
        new _$GVitalCardAuthenticationInput._(
            nir: nir,
            vitalCardNumber: vitalCardNumber,
            enrolmentCode: BuiltValueNullFieldError.checkNotNull(enrolmentCode,
                r'GVitalCardAuthenticationInput', 'enrolmentCode'));
    replace(_$result);
    return _$result;
  }
}

class _$GCreateAccountEnsInput extends GCreateAccountEnsInput {
  @override
  final String password;
  @override
  final String loginId;

  factory _$GCreateAccountEnsInput(
          [void Function(GCreateAccountEnsInputBuilder)? updates]) =>
      (new GCreateAccountEnsInputBuilder()..update(updates))._build();

  _$GCreateAccountEnsInput._({required this.password, required this.loginId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        password, r'GCreateAccountEnsInput', 'password');
    BuiltValueNullFieldError.checkNotNull(
        loginId, r'GCreateAccountEnsInput', 'loginId');
  }

  @override
  GCreateAccountEnsInput rebuild(
          void Function(GCreateAccountEnsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateAccountEnsInputBuilder toBuilder() =>
      new GCreateAccountEnsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateAccountEnsInput &&
        password == other.password &&
        loginId == other.loginId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, password.hashCode);
    _$hash = $jc(_$hash, loginId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateAccountEnsInput')
          ..add('password', password)
          ..add('loginId', loginId))
        .toString();
  }
}

class GCreateAccountEnsInputBuilder
    implements Builder<GCreateAccountEnsInput, GCreateAccountEnsInputBuilder> {
  _$GCreateAccountEnsInput? _$v;

  String? _password;
  String? get password => _$this._password;
  set password(String? password) => _$this._password = password;

  String? _loginId;
  String? get loginId => _$this._loginId;
  set loginId(String? loginId) => _$this._loginId = loginId;

  GCreateAccountEnsInputBuilder();

  GCreateAccountEnsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _password = $v.password;
      _loginId = $v.loginId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateAccountEnsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateAccountEnsInput;
  }

  @override
  void update(void Function(GCreateAccountEnsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateAccountEnsInput build() => _build();

  _$GCreateAccountEnsInput _build() {
    final _$result = _$v ??
        new _$GCreateAccountEnsInput._(
            password: BuiltValueNullFieldError.checkNotNull(
                password, r'GCreateAccountEnsInput', 'password'),
            loginId: BuiltValueNullFieldError.checkNotNull(
                loginId, r'GCreateAccountEnsInput', 'loginId'));
    replace(_$result);
    return _$result;
  }
}

class _$GFinalitiesConsentsToUpdateInput
    extends GFinalitiesConsentsToUpdateInput {
  @override
  final String pairingId;
  @override
  final BuiltList<GFinalityInput> finalities;

  factory _$GFinalitiesConsentsToUpdateInput(
          [void Function(GFinalitiesConsentsToUpdateInputBuilder)? updates]) =>
      (new GFinalitiesConsentsToUpdateInputBuilder()..update(updates))._build();

  _$GFinalitiesConsentsToUpdateInput._(
      {required this.pairingId, required this.finalities})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        pairingId, r'GFinalitiesConsentsToUpdateInput', 'pairingId');
    BuiltValueNullFieldError.checkNotNull(
        finalities, r'GFinalitiesConsentsToUpdateInput', 'finalities');
  }

  @override
  GFinalitiesConsentsToUpdateInput rebuild(
          void Function(GFinalitiesConsentsToUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFinalitiesConsentsToUpdateInputBuilder toBuilder() =>
      new GFinalitiesConsentsToUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFinalitiesConsentsToUpdateInput &&
        pairingId == other.pairingId &&
        finalities == other.finalities;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, pairingId.hashCode);
    _$hash = $jc(_$hash, finalities.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFinalitiesConsentsToUpdateInput')
          ..add('pairingId', pairingId)
          ..add('finalities', finalities))
        .toString();
  }
}

class GFinalitiesConsentsToUpdateInputBuilder
    implements
        Builder<GFinalitiesConsentsToUpdateInput,
            GFinalitiesConsentsToUpdateInputBuilder> {
  _$GFinalitiesConsentsToUpdateInput? _$v;

  String? _pairingId;
  String? get pairingId => _$this._pairingId;
  set pairingId(String? pairingId) => _$this._pairingId = pairingId;

  ListBuilder<GFinalityInput>? _finalities;
  ListBuilder<GFinalityInput> get finalities =>
      _$this._finalities ??= new ListBuilder<GFinalityInput>();
  set finalities(ListBuilder<GFinalityInput>? finalities) =>
      _$this._finalities = finalities;

  GFinalitiesConsentsToUpdateInputBuilder();

  GFinalitiesConsentsToUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _pairingId = $v.pairingId;
      _finalities = $v.finalities.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFinalitiesConsentsToUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFinalitiesConsentsToUpdateInput;
  }

  @override
  void update(void Function(GFinalitiesConsentsToUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFinalitiesConsentsToUpdateInput build() => _build();

  _$GFinalitiesConsentsToUpdateInput _build() {
    _$GFinalitiesConsentsToUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GFinalitiesConsentsToUpdateInput._(
              pairingId: BuiltValueNullFieldError.checkNotNull(
                  pairingId, r'GFinalitiesConsentsToUpdateInput', 'pairingId'),
              finalities: finalities.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'finalities';
        finalities.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GFinalitiesConsentsToUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GFinalityInput extends GFinalityInput {
  @override
  final double id;
  @override
  final String libelle;
  @override
  final String description;
  @override
  final String codeFinalite;
  @override
  final bool? consenti;

  factory _$GFinalityInput([void Function(GFinalityInputBuilder)? updates]) =>
      (new GFinalityInputBuilder()..update(updates))._build();

  _$GFinalityInput._(
      {required this.id,
      required this.libelle,
      required this.description,
      required this.codeFinalite,
      this.consenti})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GFinalityInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        libelle, r'GFinalityInput', 'libelle');
    BuiltValueNullFieldError.checkNotNull(
        description, r'GFinalityInput', 'description');
    BuiltValueNullFieldError.checkNotNull(
        codeFinalite, r'GFinalityInput', 'codeFinalite');
  }

  @override
  GFinalityInput rebuild(void Function(GFinalityInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFinalityInputBuilder toBuilder() =>
      new GFinalityInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFinalityInput &&
        id == other.id &&
        libelle == other.libelle &&
        description == other.description &&
        codeFinalite == other.codeFinalite &&
        consenti == other.consenti;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, libelle.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, codeFinalite.hashCode);
    _$hash = $jc(_$hash, consenti.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFinalityInput')
          ..add('id', id)
          ..add('libelle', libelle)
          ..add('description', description)
          ..add('codeFinalite', codeFinalite)
          ..add('consenti', consenti))
        .toString();
  }
}

class GFinalityInputBuilder
    implements Builder<GFinalityInput, GFinalityInputBuilder> {
  _$GFinalityInput? _$v;

  double? _id;
  double? get id => _$this._id;
  set id(double? id) => _$this._id = id;

  String? _libelle;
  String? get libelle => _$this._libelle;
  set libelle(String? libelle) => _$this._libelle = libelle;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _codeFinalite;
  String? get codeFinalite => _$this._codeFinalite;
  set codeFinalite(String? codeFinalite) => _$this._codeFinalite = codeFinalite;

  bool? _consenti;
  bool? get consenti => _$this._consenti;
  set consenti(bool? consenti) => _$this._consenti = consenti;

  GFinalityInputBuilder();

  GFinalityInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _libelle = $v.libelle;
      _description = $v.description;
      _codeFinalite = $v.codeFinalite;
      _consenti = $v.consenti;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFinalityInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFinalityInput;
  }

  @override
  void update(void Function(GFinalityInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFinalityInput build() => _build();

  _$GFinalityInput _build() {
    final _$result = _$v ??
        new _$GFinalityInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GFinalityInput', 'id'),
            libelle: BuiltValueNullFieldError.checkNotNull(
                libelle, r'GFinalityInput', 'libelle'),
            description: BuiltValueNullFieldError.checkNotNull(
                description, r'GFinalityInput', 'description'),
            codeFinalite: BuiltValueNullFieldError.checkNotNull(
                codeFinalite, r'GFinalityInput', 'codeFinalite'),
            consenti: consenti);
    replace(_$result);
    return _$result;
  }
}

class _$GChangeFinalityConsentByServiceOidInput
    extends GChangeFinalityConsentByServiceOidInput {
  @override
  final String oid;
  @override
  final String contexte;

  factory _$GChangeFinalityConsentByServiceOidInput(
          [void Function(GChangeFinalityConsentByServiceOidInputBuilder)?
              updates]) =>
      (new GChangeFinalityConsentByServiceOidInputBuilder()..update(updates))
          ._build();

  _$GChangeFinalityConsentByServiceOidInput._(
      {required this.oid, required this.contexte})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        oid, r'GChangeFinalityConsentByServiceOidInput', 'oid');
    BuiltValueNullFieldError.checkNotNull(
        contexte, r'GChangeFinalityConsentByServiceOidInput', 'contexte');
  }

  @override
  GChangeFinalityConsentByServiceOidInput rebuild(
          void Function(GChangeFinalityConsentByServiceOidInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GChangeFinalityConsentByServiceOidInputBuilder toBuilder() =>
      new GChangeFinalityConsentByServiceOidInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GChangeFinalityConsentByServiceOidInput &&
        oid == other.oid &&
        contexte == other.contexte;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, oid.hashCode);
    _$hash = $jc(_$hash, contexte.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GChangeFinalityConsentByServiceOidInput')
          ..add('oid', oid)
          ..add('contexte', contexte))
        .toString();
  }
}

class GChangeFinalityConsentByServiceOidInputBuilder
    implements
        Builder<GChangeFinalityConsentByServiceOidInput,
            GChangeFinalityConsentByServiceOidInputBuilder> {
  _$GChangeFinalityConsentByServiceOidInput? _$v;

  String? _oid;
  String? get oid => _$this._oid;
  set oid(String? oid) => _$this._oid = oid;

  String? _contexte;
  String? get contexte => _$this._contexte;
  set contexte(String? contexte) => _$this._contexte = contexte;

  GChangeFinalityConsentByServiceOidInputBuilder();

  GChangeFinalityConsentByServiceOidInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _oid = $v.oid;
      _contexte = $v.contexte;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GChangeFinalityConsentByServiceOidInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GChangeFinalityConsentByServiceOidInput;
  }

  @override
  void update(
      void Function(GChangeFinalityConsentByServiceOidInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GChangeFinalityConsentByServiceOidInput build() => _build();

  _$GChangeFinalityConsentByServiceOidInput _build() {
    final _$result = _$v ??
        new _$GChangeFinalityConsentByServiceOidInput._(
            oid: BuiltValueNullFieldError.checkNotNull(
                oid, r'GChangeFinalityConsentByServiceOidInput', 'oid'),
            contexte: BuiltValueNullFieldError.checkNotNull(contexte,
                r'GChangeFinalityConsentByServiceOidInput', 'contexte'));
    replace(_$result);
    return _$result;
  }
}

class _$GChangePasswordInput extends GChangePasswordInput {
  @override
  final String patientId;
  @override
  final String currentPassword;
  @override
  final String newPassword;

  factory _$GChangePasswordInput(
          [void Function(GChangePasswordInputBuilder)? updates]) =>
      (new GChangePasswordInputBuilder()..update(updates))._build();

  _$GChangePasswordInput._(
      {required this.patientId,
      required this.currentPassword,
      required this.newPassword})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GChangePasswordInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        currentPassword, r'GChangePasswordInput', 'currentPassword');
    BuiltValueNullFieldError.checkNotNull(
        newPassword, r'GChangePasswordInput', 'newPassword');
  }

  @override
  GChangePasswordInput rebuild(
          void Function(GChangePasswordInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GChangePasswordInputBuilder toBuilder() =>
      new GChangePasswordInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GChangePasswordInput &&
        patientId == other.patientId &&
        currentPassword == other.currentPassword &&
        newPassword == other.newPassword;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, currentPassword.hashCode);
    _$hash = $jc(_$hash, newPassword.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GChangePasswordInput')
          ..add('patientId', patientId)
          ..add('currentPassword', currentPassword)
          ..add('newPassword', newPassword))
        .toString();
  }
}

class GChangePasswordInputBuilder
    implements Builder<GChangePasswordInput, GChangePasswordInputBuilder> {
  _$GChangePasswordInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _currentPassword;
  String? get currentPassword => _$this._currentPassword;
  set currentPassword(String? currentPassword) =>
      _$this._currentPassword = currentPassword;

  String? _newPassword;
  String? get newPassword => _$this._newPassword;
  set newPassword(String? newPassword) => _$this._newPassword = newPassword;

  GChangePasswordInputBuilder();

  GChangePasswordInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _currentPassword = $v.currentPassword;
      _newPassword = $v.newPassword;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GChangePasswordInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GChangePasswordInput;
  }

  @override
  void update(void Function(GChangePasswordInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GChangePasswordInput build() => _build();

  _$GChangePasswordInput _build() {
    final _$result = _$v ??
        new _$GChangePasswordInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GChangePasswordInput', 'patientId'),
            currentPassword: BuiltValueNullFieldError.checkNotNull(
                currentPassword, r'GChangePasswordInput', 'currentPassword'),
            newPassword: BuiltValueNullFieldError.checkNotNull(
                newPassword, r'GChangePasswordInput', 'newPassword'));
    replace(_$result);
    return _$result;
  }
}

class _$GChangeContactInput extends GChangeContactInput {
  @override
  final String patientId;
  @override
  final String value;
  @override
  final GChangeContactInputCanalType type;

  factory _$GChangeContactInput(
          [void Function(GChangeContactInputBuilder)? updates]) =>
      (new GChangeContactInputBuilder()..update(updates))._build();

  _$GChangeContactInput._(
      {required this.patientId, required this.value, required this.type})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GChangeContactInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        value, r'GChangeContactInput', 'value');
    BuiltValueNullFieldError.checkNotNull(type, r'GChangeContactInput', 'type');
  }

  @override
  GChangeContactInput rebuild(
          void Function(GChangeContactInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GChangeContactInputBuilder toBuilder() =>
      new GChangeContactInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GChangeContactInput &&
        patientId == other.patientId &&
        value == other.value &&
        type == other.type;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GChangeContactInput')
          ..add('patientId', patientId)
          ..add('value', value)
          ..add('type', type))
        .toString();
  }
}

class GChangeContactInputBuilder
    implements Builder<GChangeContactInput, GChangeContactInputBuilder> {
  _$GChangeContactInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GChangeContactInputCanalType? _type;
  GChangeContactInputCanalType? get type => _$this._type;
  set type(GChangeContactInputCanalType? type) => _$this._type = type;

  GChangeContactInputBuilder();

  GChangeContactInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _value = $v.value;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GChangeContactInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GChangeContactInput;
  }

  @override
  void update(void Function(GChangeContactInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GChangeContactInput build() => _build();

  _$GChangeContactInput _build() {
    final _$result = _$v ??
        new _$GChangeContactInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GChangeContactInput', 'patientId'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GChangeContactInput', 'value'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GChangeContactInput', 'type'));
    replace(_$result);
    return _$result;
  }
}

class _$GValidateOtpInput extends GValidateOtpInput {
  @override
  final String patientId;
  @override
  final String code;
  @override
  final String type;
  @override
  final String value;

  factory _$GValidateOtpInput(
          [void Function(GValidateOtpInputBuilder)? updates]) =>
      (new GValidateOtpInputBuilder()..update(updates))._build();

  _$GValidateOtpInput._(
      {required this.patientId,
      required this.code,
      required this.type,
      required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GValidateOtpInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(code, r'GValidateOtpInput', 'code');
    BuiltValueNullFieldError.checkNotNull(type, r'GValidateOtpInput', 'type');
    BuiltValueNullFieldError.checkNotNull(value, r'GValidateOtpInput', 'value');
  }

  @override
  GValidateOtpInput rebuild(void Function(GValidateOtpInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GValidateOtpInputBuilder toBuilder() =>
      new GValidateOtpInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GValidateOtpInput &&
        patientId == other.patientId &&
        code == other.code &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GValidateOtpInput')
          ..add('patientId', patientId)
          ..add('code', code)
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GValidateOtpInputBuilder
    implements Builder<GValidateOtpInput, GValidateOtpInputBuilder> {
  _$GValidateOtpInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  String? _type;
  String? get type => _$this._type;
  set type(String? type) => _$this._type = type;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GValidateOtpInputBuilder();

  GValidateOtpInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _code = $v.code;
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GValidateOtpInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GValidateOtpInput;
  }

  @override
  void update(void Function(GValidateOtpInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GValidateOtpInput build() => _build();

  _$GValidateOtpInput _build() {
    final _$result = _$v ??
        new _$GValidateOtpInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GValidateOtpInput', 'patientId'),
            code: BuiltValueNullFieldError.checkNotNull(
                code, r'GValidateOtpInput', 'code'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GValidateOtpInput', 'type'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GValidateOtpInput', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GChangePreferenceNotificationInput
    extends GChangePreferenceNotificationInput {
  @override
  final String patientId;
  @override
  final GPreferenceNotificationEnum typeNotification;
  @override
  final bool isActive;

  factory _$GChangePreferenceNotificationInput(
          [void Function(GChangePreferenceNotificationInputBuilder)?
              updates]) =>
      (new GChangePreferenceNotificationInputBuilder()..update(updates))
          ._build();

  _$GChangePreferenceNotificationInput._(
      {required this.patientId,
      required this.typeNotification,
      required this.isActive})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GChangePreferenceNotificationInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(typeNotification,
        r'GChangePreferenceNotificationInput', 'typeNotification');
    BuiltValueNullFieldError.checkNotNull(
        isActive, r'GChangePreferenceNotificationInput', 'isActive');
  }

  @override
  GChangePreferenceNotificationInput rebuild(
          void Function(GChangePreferenceNotificationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GChangePreferenceNotificationInputBuilder toBuilder() =>
      new GChangePreferenceNotificationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GChangePreferenceNotificationInput &&
        patientId == other.patientId &&
        typeNotification == other.typeNotification &&
        isActive == other.isActive;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, typeNotification.hashCode);
    _$hash = $jc(_$hash, isActive.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GChangePreferenceNotificationInput')
          ..add('patientId', patientId)
          ..add('typeNotification', typeNotification)
          ..add('isActive', isActive))
        .toString();
  }
}

class GChangePreferenceNotificationInputBuilder
    implements
        Builder<GChangePreferenceNotificationInput,
            GChangePreferenceNotificationInputBuilder> {
  _$GChangePreferenceNotificationInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GPreferenceNotificationEnum? _typeNotification;
  GPreferenceNotificationEnum? get typeNotification => _$this._typeNotification;
  set typeNotification(GPreferenceNotificationEnum? typeNotification) =>
      _$this._typeNotification = typeNotification;

  bool? _isActive;
  bool? get isActive => _$this._isActive;
  set isActive(bool? isActive) => _$this._isActive = isActive;

  GChangePreferenceNotificationInputBuilder();

  GChangePreferenceNotificationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _typeNotification = $v.typeNotification;
      _isActive = $v.isActive;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GChangePreferenceNotificationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GChangePreferenceNotificationInput;
  }

  @override
  void update(
      void Function(GChangePreferenceNotificationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GChangePreferenceNotificationInput build() => _build();

  _$GChangePreferenceNotificationInput _build() {
    final _$result = _$v ??
        new _$GChangePreferenceNotificationInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GChangePreferenceNotificationInput', 'patientId'),
            typeNotification: BuiltValueNullFieldError.checkNotNull(
                typeNotification,
                r'GChangePreferenceNotificationInput',
                'typeNotification'),
            isActive: BuiltValueNullFieldError.checkNotNull(
                isActive, r'GChangePreferenceNotificationInput', 'isActive'));
    replace(_$result);
    return _$result;
  }
}

class _$GInvitationSecondRLInput extends GInvitationSecondRLInput {
  @override
  final String loggedInUserId;
  @override
  final String selectedEnsProfileId;
  @override
  final GSecondRLInformationInput newRepresentativeLegal;

  factory _$GInvitationSecondRLInput(
          [void Function(GInvitationSecondRLInputBuilder)? updates]) =>
      (new GInvitationSecondRLInputBuilder()..update(updates))._build();

  _$GInvitationSecondRLInput._(
      {required this.loggedInUserId,
      required this.selectedEnsProfileId,
      required this.newRepresentativeLegal})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        loggedInUserId, r'GInvitationSecondRLInput', 'loggedInUserId');
    BuiltValueNullFieldError.checkNotNull(selectedEnsProfileId,
        r'GInvitationSecondRLInput', 'selectedEnsProfileId');
    BuiltValueNullFieldError.checkNotNull(newRepresentativeLegal,
        r'GInvitationSecondRLInput', 'newRepresentativeLegal');
  }

  @override
  GInvitationSecondRLInput rebuild(
          void Function(GInvitationSecondRLInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GInvitationSecondRLInputBuilder toBuilder() =>
      new GInvitationSecondRLInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GInvitationSecondRLInput &&
        loggedInUserId == other.loggedInUserId &&
        selectedEnsProfileId == other.selectedEnsProfileId &&
        newRepresentativeLegal == other.newRepresentativeLegal;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, loggedInUserId.hashCode);
    _$hash = $jc(_$hash, selectedEnsProfileId.hashCode);
    _$hash = $jc(_$hash, newRepresentativeLegal.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GInvitationSecondRLInput')
          ..add('loggedInUserId', loggedInUserId)
          ..add('selectedEnsProfileId', selectedEnsProfileId)
          ..add('newRepresentativeLegal', newRepresentativeLegal))
        .toString();
  }
}

class GInvitationSecondRLInputBuilder
    implements
        Builder<GInvitationSecondRLInput, GInvitationSecondRLInputBuilder> {
  _$GInvitationSecondRLInput? _$v;

  String? _loggedInUserId;
  String? get loggedInUserId => _$this._loggedInUserId;
  set loggedInUserId(String? loggedInUserId) =>
      _$this._loggedInUserId = loggedInUserId;

  String? _selectedEnsProfileId;
  String? get selectedEnsProfileId => _$this._selectedEnsProfileId;
  set selectedEnsProfileId(String? selectedEnsProfileId) =>
      _$this._selectedEnsProfileId = selectedEnsProfileId;

  GSecondRLInformationInputBuilder? _newRepresentativeLegal;
  GSecondRLInformationInputBuilder get newRepresentativeLegal =>
      _$this._newRepresentativeLegal ??= new GSecondRLInformationInputBuilder();
  set newRepresentativeLegal(
          GSecondRLInformationInputBuilder? newRepresentativeLegal) =>
      _$this._newRepresentativeLegal = newRepresentativeLegal;

  GInvitationSecondRLInputBuilder();

  GInvitationSecondRLInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _loggedInUserId = $v.loggedInUserId;
      _selectedEnsProfileId = $v.selectedEnsProfileId;
      _newRepresentativeLegal = $v.newRepresentativeLegal.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GInvitationSecondRLInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GInvitationSecondRLInput;
  }

  @override
  void update(void Function(GInvitationSecondRLInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GInvitationSecondRLInput build() => _build();

  _$GInvitationSecondRLInput _build() {
    _$GInvitationSecondRLInput _$result;
    try {
      _$result = _$v ??
          new _$GInvitationSecondRLInput._(
              loggedInUserId: BuiltValueNullFieldError.checkNotNull(
                  loggedInUserId,
                  r'GInvitationSecondRLInput',
                  'loggedInUserId'),
              selectedEnsProfileId: BuiltValueNullFieldError.checkNotNull(
                  selectedEnsProfileId,
                  r'GInvitationSecondRLInput',
                  'selectedEnsProfileId'),
              newRepresentativeLegal: newRepresentativeLegal.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'newRepresentativeLegal';
        newRepresentativeLegal.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GInvitationSecondRLInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSecondRLInformationInput extends GSecondRLInformationInput {
  @override
  final String nir;
  @override
  final String lastName;
  @override
  final String firstName;
  @override
  final String birthDate;

  factory _$GSecondRLInformationInput(
          [void Function(GSecondRLInformationInputBuilder)? updates]) =>
      (new GSecondRLInformationInputBuilder()..update(updates))._build();

  _$GSecondRLInformationInput._(
      {required this.nir,
      required this.lastName,
      required this.firstName,
      required this.birthDate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        nir, r'GSecondRLInformationInput', 'nir');
    BuiltValueNullFieldError.checkNotNull(
        lastName, r'GSecondRLInformationInput', 'lastName');
    BuiltValueNullFieldError.checkNotNull(
        firstName, r'GSecondRLInformationInput', 'firstName');
    BuiltValueNullFieldError.checkNotNull(
        birthDate, r'GSecondRLInformationInput', 'birthDate');
  }

  @override
  GSecondRLInformationInput rebuild(
          void Function(GSecondRLInformationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSecondRLInformationInputBuilder toBuilder() =>
      new GSecondRLInformationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSecondRLInformationInput &&
        nir == other.nir &&
        lastName == other.lastName &&
        firstName == other.firstName &&
        birthDate == other.birthDate;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, nir.hashCode);
    _$hash = $jc(_$hash, lastName.hashCode);
    _$hash = $jc(_$hash, firstName.hashCode);
    _$hash = $jc(_$hash, birthDate.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSecondRLInformationInput')
          ..add('nir', nir)
          ..add('lastName', lastName)
          ..add('firstName', firstName)
          ..add('birthDate', birthDate))
        .toString();
  }
}

class GSecondRLInformationInputBuilder
    implements
        Builder<GSecondRLInformationInput, GSecondRLInformationInputBuilder> {
  _$GSecondRLInformationInput? _$v;

  String? _nir;
  String? get nir => _$this._nir;
  set nir(String? nir) => _$this._nir = nir;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _birthDate;
  String? get birthDate => _$this._birthDate;
  set birthDate(String? birthDate) => _$this._birthDate = birthDate;

  GSecondRLInformationInputBuilder();

  GSecondRLInformationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _nir = $v.nir;
      _lastName = $v.lastName;
      _firstName = $v.firstName;
      _birthDate = $v.birthDate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSecondRLInformationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSecondRLInformationInput;
  }

  @override
  void update(void Function(GSecondRLInformationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSecondRLInformationInput build() => _build();

  _$GSecondRLInformationInput _build() {
    final _$result = _$v ??
        new _$GSecondRLInformationInput._(
            nir: BuiltValueNullFieldError.checkNotNull(
                nir, r'GSecondRLInformationInput', 'nir'),
            lastName: BuiltValueNullFieldError.checkNotNull(
                lastName, r'GSecondRLInformationInput', 'lastName'),
            firstName: BuiltValueNullFieldError.checkNotNull(
                firstName, r'GSecondRLInformationInput', 'firstName'),
            birthDate: BuiltValueNullFieldError.checkNotNull(
                birthDate, r'GSecondRLInformationInput', 'birthDate'));
    replace(_$result);
    return _$result;
  }
}

class _$GAccountActiveProfilsInput extends GAccountActiveProfilsInput {
  @override
  final BuiltList<int> profilsListIndex;

  factory _$GAccountActiveProfilsInput(
          [void Function(GAccountActiveProfilsInputBuilder)? updates]) =>
      (new GAccountActiveProfilsInputBuilder()..update(updates))._build();

  _$GAccountActiveProfilsInput._({required this.profilsListIndex}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        profilsListIndex, r'GAccountActiveProfilsInput', 'profilsListIndex');
  }

  @override
  GAccountActiveProfilsInput rebuild(
          void Function(GAccountActiveProfilsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccountActiveProfilsInputBuilder toBuilder() =>
      new GAccountActiveProfilsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccountActiveProfilsInput &&
        profilsListIndex == other.profilsListIndex;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, profilsListIndex.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAccountActiveProfilsInput')
          ..add('profilsListIndex', profilsListIndex))
        .toString();
  }
}

class GAccountActiveProfilsInputBuilder
    implements
        Builder<GAccountActiveProfilsInput, GAccountActiveProfilsInputBuilder> {
  _$GAccountActiveProfilsInput? _$v;

  ListBuilder<int>? _profilsListIndex;
  ListBuilder<int> get profilsListIndex =>
      _$this._profilsListIndex ??= new ListBuilder<int>();
  set profilsListIndex(ListBuilder<int>? profilsListIndex) =>
      _$this._profilsListIndex = profilsListIndex;

  GAccountActiveProfilsInputBuilder();

  GAccountActiveProfilsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _profilsListIndex = $v.profilsListIndex.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccountActiveProfilsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAccountActiveProfilsInput;
  }

  @override
  void update(void Function(GAccountActiveProfilsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAccountActiveProfilsInput build() => _build();

  _$GAccountActiveProfilsInput _build() {
    _$GAccountActiveProfilsInput _$result;
    try {
      _$result = _$v ??
          new _$GAccountActiveProfilsInput._(
              profilsListIndex: profilsListIndex.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'profilsListIndex';
        profilsListIndex.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAccountActiveProfilsInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAccessValidatedOrRejectedInput
    extends GAccessValidatedOrRejectedInput {
  @override
  final String idEnsOD;
  @override
  final String idEnsAD;
  @override
  final GDemandeAccesStatutEnum type;
  @override
  final String birthDate;
  @override
  final String firstNameAD;
  @override
  final String lastNameAD;

  factory _$GAccessValidatedOrRejectedInput(
          [void Function(GAccessValidatedOrRejectedInputBuilder)? updates]) =>
      (new GAccessValidatedOrRejectedInputBuilder()..update(updates))._build();

  _$GAccessValidatedOrRejectedInput._(
      {required this.idEnsOD,
      required this.idEnsAD,
      required this.type,
      required this.birthDate,
      required this.firstNameAD,
      required this.lastNameAD})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        idEnsOD, r'GAccessValidatedOrRejectedInput', 'idEnsOD');
    BuiltValueNullFieldError.checkNotNull(
        idEnsAD, r'GAccessValidatedOrRejectedInput', 'idEnsAD');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GAccessValidatedOrRejectedInput', 'type');
    BuiltValueNullFieldError.checkNotNull(
        birthDate, r'GAccessValidatedOrRejectedInput', 'birthDate');
    BuiltValueNullFieldError.checkNotNull(
        firstNameAD, r'GAccessValidatedOrRejectedInput', 'firstNameAD');
    BuiltValueNullFieldError.checkNotNull(
        lastNameAD, r'GAccessValidatedOrRejectedInput', 'lastNameAD');
  }

  @override
  GAccessValidatedOrRejectedInput rebuild(
          void Function(GAccessValidatedOrRejectedInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAccessValidatedOrRejectedInputBuilder toBuilder() =>
      new GAccessValidatedOrRejectedInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAccessValidatedOrRejectedInput &&
        idEnsOD == other.idEnsOD &&
        idEnsAD == other.idEnsAD &&
        type == other.type &&
        birthDate == other.birthDate &&
        firstNameAD == other.firstNameAD &&
        lastNameAD == other.lastNameAD;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, idEnsOD.hashCode);
    _$hash = $jc(_$hash, idEnsAD.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, birthDate.hashCode);
    _$hash = $jc(_$hash, firstNameAD.hashCode);
    _$hash = $jc(_$hash, lastNameAD.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAccessValidatedOrRejectedInput')
          ..add('idEnsOD', idEnsOD)
          ..add('idEnsAD', idEnsAD)
          ..add('type', type)
          ..add('birthDate', birthDate)
          ..add('firstNameAD', firstNameAD)
          ..add('lastNameAD', lastNameAD))
        .toString();
  }
}

class GAccessValidatedOrRejectedInputBuilder
    implements
        Builder<GAccessValidatedOrRejectedInput,
            GAccessValidatedOrRejectedInputBuilder> {
  _$GAccessValidatedOrRejectedInput? _$v;

  String? _idEnsOD;
  String? get idEnsOD => _$this._idEnsOD;
  set idEnsOD(String? idEnsOD) => _$this._idEnsOD = idEnsOD;

  String? _idEnsAD;
  String? get idEnsAD => _$this._idEnsAD;
  set idEnsAD(String? idEnsAD) => _$this._idEnsAD = idEnsAD;

  GDemandeAccesStatutEnum? _type;
  GDemandeAccesStatutEnum? get type => _$this._type;
  set type(GDemandeAccesStatutEnum? type) => _$this._type = type;

  String? _birthDate;
  String? get birthDate => _$this._birthDate;
  set birthDate(String? birthDate) => _$this._birthDate = birthDate;

  String? _firstNameAD;
  String? get firstNameAD => _$this._firstNameAD;
  set firstNameAD(String? firstNameAD) => _$this._firstNameAD = firstNameAD;

  String? _lastNameAD;
  String? get lastNameAD => _$this._lastNameAD;
  set lastNameAD(String? lastNameAD) => _$this._lastNameAD = lastNameAD;

  GAccessValidatedOrRejectedInputBuilder();

  GAccessValidatedOrRejectedInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _idEnsOD = $v.idEnsOD;
      _idEnsAD = $v.idEnsAD;
      _type = $v.type;
      _birthDate = $v.birthDate;
      _firstNameAD = $v.firstNameAD;
      _lastNameAD = $v.lastNameAD;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAccessValidatedOrRejectedInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAccessValidatedOrRejectedInput;
  }

  @override
  void update(void Function(GAccessValidatedOrRejectedInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAccessValidatedOrRejectedInput build() => _build();

  _$GAccessValidatedOrRejectedInput _build() {
    final _$result = _$v ??
        new _$GAccessValidatedOrRejectedInput._(
            idEnsOD: BuiltValueNullFieldError.checkNotNull(
                idEnsOD, r'GAccessValidatedOrRejectedInput', 'idEnsOD'),
            idEnsAD: BuiltValueNullFieldError.checkNotNull(
                idEnsAD, r'GAccessValidatedOrRejectedInput', 'idEnsAD'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GAccessValidatedOrRejectedInput', 'type'),
            birthDate: BuiltValueNullFieldError.checkNotNull(
                birthDate, r'GAccessValidatedOrRejectedInput', 'birthDate'),
            firstNameAD: BuiltValueNullFieldError.checkNotNull(
                firstNameAD, r'GAccessValidatedOrRejectedInput', 'firstNameAD'),
            lastNameAD: BuiltValueNullFieldError.checkNotNull(
                lastNameAD, r'GAccessValidatedOrRejectedInput', 'lastNameAD'));
    replace(_$result);
    return _$result;
  }
}

class _$GAskDeletePersonalDataInput extends GAskDeletePersonalDataInput {
  @override
  final String ensIdConcerne;

  factory _$GAskDeletePersonalDataInput(
          [void Function(GAskDeletePersonalDataInputBuilder)? updates]) =>
      (new GAskDeletePersonalDataInputBuilder()..update(updates))._build();

  _$GAskDeletePersonalDataInput._({required this.ensIdConcerne}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        ensIdConcerne, r'GAskDeletePersonalDataInput', 'ensIdConcerne');
  }

  @override
  GAskDeletePersonalDataInput rebuild(
          void Function(GAskDeletePersonalDataInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAskDeletePersonalDataInputBuilder toBuilder() =>
      new GAskDeletePersonalDataInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAskDeletePersonalDataInput &&
        ensIdConcerne == other.ensIdConcerne;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, ensIdConcerne.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAskDeletePersonalDataInput')
          ..add('ensIdConcerne', ensIdConcerne))
        .toString();
  }
}

class GAskDeletePersonalDataInputBuilder
    implements
        Builder<GAskDeletePersonalDataInput,
            GAskDeletePersonalDataInputBuilder> {
  _$GAskDeletePersonalDataInput? _$v;

  String? _ensIdConcerne;
  String? get ensIdConcerne => _$this._ensIdConcerne;
  set ensIdConcerne(String? ensIdConcerne) =>
      _$this._ensIdConcerne = ensIdConcerne;

  GAskDeletePersonalDataInputBuilder();

  GAskDeletePersonalDataInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _ensIdConcerne = $v.ensIdConcerne;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAskDeletePersonalDataInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAskDeletePersonalDataInput;
  }

  @override
  void update(void Function(GAskDeletePersonalDataInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAskDeletePersonalDataInput build() => _build();

  _$GAskDeletePersonalDataInput _build() {
    final _$result = _$v ??
        new _$GAskDeletePersonalDataInput._(
            ensIdConcerne: BuiltValueNullFieldError.checkNotNull(ensIdConcerne,
                r'GAskDeletePersonalDataInput', 'ensIdConcerne'));
    replace(_$result);
    return _$result;
  }
}

class _$GAppointmentToCreateInput extends GAppointmentToCreateInput {
  @override
  final String patientId;
  @override
  final String? name;
  @override
  final GAppointmentType type;
  @override
  final String professionalOrEstablishmentName;
  @override
  final String date;
  @override
  final String? comment;
  @override
  final String? speciality;
  @override
  final String? address;
  @override
  final String? status;
  @override
  final String? idProfessionnelSante;
  @override
  final String? idEtablissementSante;

  factory _$GAppointmentToCreateInput(
          [void Function(GAppointmentToCreateInputBuilder)? updates]) =>
      (new GAppointmentToCreateInputBuilder()..update(updates))._build();

  _$GAppointmentToCreateInput._(
      {required this.patientId,
      this.name,
      required this.type,
      required this.professionalOrEstablishmentName,
      required this.date,
      this.comment,
      this.speciality,
      this.address,
      this.status,
      this.idProfessionnelSante,
      this.idEtablissementSante})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GAppointmentToCreateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GAppointmentToCreateInput', 'type');
    BuiltValueNullFieldError.checkNotNull(professionalOrEstablishmentName,
        r'GAppointmentToCreateInput', 'professionalOrEstablishmentName');
    BuiltValueNullFieldError.checkNotNull(
        date, r'GAppointmentToCreateInput', 'date');
  }

  @override
  GAppointmentToCreateInput rebuild(
          void Function(GAppointmentToCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppointmentToCreateInputBuilder toBuilder() =>
      new GAppointmentToCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppointmentToCreateInput &&
        patientId == other.patientId &&
        name == other.name &&
        type == other.type &&
        professionalOrEstablishmentName ==
            other.professionalOrEstablishmentName &&
        date == other.date &&
        comment == other.comment &&
        speciality == other.speciality &&
        address == other.address &&
        status == other.status &&
        idProfessionnelSante == other.idProfessionnelSante &&
        idEtablissementSante == other.idEtablissementSante;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, professionalOrEstablishmentName.hashCode);
    _$hash = $jc(_$hash, date.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, speciality.hashCode);
    _$hash = $jc(_$hash, address.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, idProfessionnelSante.hashCode);
    _$hash = $jc(_$hash, idEtablissementSante.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppointmentToCreateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('type', type)
          ..add('professionalOrEstablishmentName',
              professionalOrEstablishmentName)
          ..add('date', date)
          ..add('comment', comment)
          ..add('speciality', speciality)
          ..add('address', address)
          ..add('status', status)
          ..add('idProfessionnelSante', idProfessionnelSante)
          ..add('idEtablissementSante', idEtablissementSante))
        .toString();
  }
}

class GAppointmentToCreateInputBuilder
    implements
        Builder<GAppointmentToCreateInput, GAppointmentToCreateInputBuilder> {
  _$GAppointmentToCreateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GAppointmentType? _type;
  GAppointmentType? get type => _$this._type;
  set type(GAppointmentType? type) => _$this._type = type;

  String? _professionalOrEstablishmentName;
  String? get professionalOrEstablishmentName =>
      _$this._professionalOrEstablishmentName;
  set professionalOrEstablishmentName(
          String? professionalOrEstablishmentName) =>
      _$this._professionalOrEstablishmentName = professionalOrEstablishmentName;

  String? _date;
  String? get date => _$this._date;
  set date(String? date) => _$this._date = date;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _speciality;
  String? get speciality => _$this._speciality;
  set speciality(String? speciality) => _$this._speciality = speciality;

  String? _address;
  String? get address => _$this._address;
  set address(String? address) => _$this._address = address;

  String? _status;
  String? get status => _$this._status;
  set status(String? status) => _$this._status = status;

  String? _idProfessionnelSante;
  String? get idProfessionnelSante => _$this._idProfessionnelSante;
  set idProfessionnelSante(String? idProfessionnelSante) =>
      _$this._idProfessionnelSante = idProfessionnelSante;

  String? _idEtablissementSante;
  String? get idEtablissementSante => _$this._idEtablissementSante;
  set idEtablissementSante(String? idEtablissementSante) =>
      _$this._idEtablissementSante = idEtablissementSante;

  GAppointmentToCreateInputBuilder();

  GAppointmentToCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _type = $v.type;
      _professionalOrEstablishmentName = $v.professionalOrEstablishmentName;
      _date = $v.date;
      _comment = $v.comment;
      _speciality = $v.speciality;
      _address = $v.address;
      _status = $v.status;
      _idProfessionnelSante = $v.idProfessionnelSante;
      _idEtablissementSante = $v.idEtablissementSante;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppointmentToCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppointmentToCreateInput;
  }

  @override
  void update(void Function(GAppointmentToCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppointmentToCreateInput build() => _build();

  _$GAppointmentToCreateInput _build() {
    final _$result = _$v ??
        new _$GAppointmentToCreateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GAppointmentToCreateInput', 'patientId'),
            name: name,
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GAppointmentToCreateInput', 'type'),
            professionalOrEstablishmentName:
                BuiltValueNullFieldError.checkNotNull(
                    professionalOrEstablishmentName,
                    r'GAppointmentToCreateInput',
                    'professionalOrEstablishmentName'),
            date: BuiltValueNullFieldError.checkNotNull(
                date, r'GAppointmentToCreateInput', 'date'),
            comment: comment,
            speciality: speciality,
            address: address,
            status: status,
            idProfessionnelSante: idProfessionnelSante,
            idEtablissementSante: idEtablissementSante);
    replace(_$result);
    return _$result;
  }
}

class _$GAppointmentToUpdateInput extends GAppointmentToUpdateInput {
  @override
  final String patientId;
  @override
  final String? name;
  @override
  final GAppointmentType type;
  @override
  final String professionalOrEstablishmentName;
  @override
  final String date;
  @override
  final String? comment;
  @override
  final String? speciality;
  @override
  final String? address;
  @override
  final String? status;
  @override
  final String? idProfessionnelSante;
  @override
  final String? idEtablissementSante;
  @override
  final String id;

  factory _$GAppointmentToUpdateInput(
          [void Function(GAppointmentToUpdateInputBuilder)? updates]) =>
      (new GAppointmentToUpdateInputBuilder()..update(updates))._build();

  _$GAppointmentToUpdateInput._(
      {required this.patientId,
      this.name,
      required this.type,
      required this.professionalOrEstablishmentName,
      required this.date,
      this.comment,
      this.speciality,
      this.address,
      this.status,
      this.idProfessionnelSante,
      this.idEtablissementSante,
      required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GAppointmentToUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        type, r'GAppointmentToUpdateInput', 'type');
    BuiltValueNullFieldError.checkNotNull(professionalOrEstablishmentName,
        r'GAppointmentToUpdateInput', 'professionalOrEstablishmentName');
    BuiltValueNullFieldError.checkNotNull(
        date, r'GAppointmentToUpdateInput', 'date');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GAppointmentToUpdateInput', 'id');
  }

  @override
  GAppointmentToUpdateInput rebuild(
          void Function(GAppointmentToUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAppointmentToUpdateInputBuilder toBuilder() =>
      new GAppointmentToUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAppointmentToUpdateInput &&
        patientId == other.patientId &&
        name == other.name &&
        type == other.type &&
        professionalOrEstablishmentName ==
            other.professionalOrEstablishmentName &&
        date == other.date &&
        comment == other.comment &&
        speciality == other.speciality &&
        address == other.address &&
        status == other.status &&
        idProfessionnelSante == other.idProfessionnelSante &&
        idEtablissementSante == other.idEtablissementSante &&
        id == other.id;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, professionalOrEstablishmentName.hashCode);
    _$hash = $jc(_$hash, date.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, speciality.hashCode);
    _$hash = $jc(_$hash, address.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, idProfessionnelSante.hashCode);
    _$hash = $jc(_$hash, idEtablissementSante.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAppointmentToUpdateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('type', type)
          ..add('professionalOrEstablishmentName',
              professionalOrEstablishmentName)
          ..add('date', date)
          ..add('comment', comment)
          ..add('speciality', speciality)
          ..add('address', address)
          ..add('status', status)
          ..add('idProfessionnelSante', idProfessionnelSante)
          ..add('idEtablissementSante', idEtablissementSante)
          ..add('id', id))
        .toString();
  }
}

class GAppointmentToUpdateInputBuilder
    implements
        Builder<GAppointmentToUpdateInput, GAppointmentToUpdateInputBuilder> {
  _$GAppointmentToUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GAppointmentType? _type;
  GAppointmentType? get type => _$this._type;
  set type(GAppointmentType? type) => _$this._type = type;

  String? _professionalOrEstablishmentName;
  String? get professionalOrEstablishmentName =>
      _$this._professionalOrEstablishmentName;
  set professionalOrEstablishmentName(
          String? professionalOrEstablishmentName) =>
      _$this._professionalOrEstablishmentName = professionalOrEstablishmentName;

  String? _date;
  String? get date => _$this._date;
  set date(String? date) => _$this._date = date;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _speciality;
  String? get speciality => _$this._speciality;
  set speciality(String? speciality) => _$this._speciality = speciality;

  String? _address;
  String? get address => _$this._address;
  set address(String? address) => _$this._address = address;

  String? _status;
  String? get status => _$this._status;
  set status(String? status) => _$this._status = status;

  String? _idProfessionnelSante;
  String? get idProfessionnelSante => _$this._idProfessionnelSante;
  set idProfessionnelSante(String? idProfessionnelSante) =>
      _$this._idProfessionnelSante = idProfessionnelSante;

  String? _idEtablissementSante;
  String? get idEtablissementSante => _$this._idEtablissementSante;
  set idEtablissementSante(String? idEtablissementSante) =>
      _$this._idEtablissementSante = idEtablissementSante;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GAppointmentToUpdateInputBuilder();

  GAppointmentToUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _type = $v.type;
      _professionalOrEstablishmentName = $v.professionalOrEstablishmentName;
      _date = $v.date;
      _comment = $v.comment;
      _speciality = $v.speciality;
      _address = $v.address;
      _status = $v.status;
      _idProfessionnelSante = $v.idProfessionnelSante;
      _idEtablissementSante = $v.idEtablissementSante;
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAppointmentToUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAppointmentToUpdateInput;
  }

  @override
  void update(void Function(GAppointmentToUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAppointmentToUpdateInput build() => _build();

  _$GAppointmentToUpdateInput _build() {
    final _$result = _$v ??
        new _$GAppointmentToUpdateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GAppointmentToUpdateInput', 'patientId'),
            name: name,
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GAppointmentToUpdateInput', 'type'),
            professionalOrEstablishmentName:
                BuiltValueNullFieldError.checkNotNull(
                    professionalOrEstablishmentName,
                    r'GAppointmentToUpdateInput',
                    'professionalOrEstablishmentName'),
            date: BuiltValueNullFieldError.checkNotNull(
                date, r'GAppointmentToUpdateInput', 'date'),
            comment: comment,
            speciality: speciality,
            address: address,
            status: status,
            idProfessionnelSante: idProfessionnelSante,
            idEtablissementSante: idEtablissementSante,
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GAppointmentToUpdateInput', 'id'));
    replace(_$result);
    return _$result;
  }
}

class _$GReminderToCreateInput extends GReminderToCreateInput {
  @override
  final String patientId;
  @override
  final String title;
  @override
  final String date;
  @override
  final String comment;

  factory _$GReminderToCreateInput(
          [void Function(GReminderToCreateInputBuilder)? updates]) =>
      (new GReminderToCreateInputBuilder()..update(updates))._build();

  _$GReminderToCreateInput._(
      {required this.patientId,
      required this.title,
      required this.date,
      required this.comment})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GReminderToCreateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GReminderToCreateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        date, r'GReminderToCreateInput', 'date');
    BuiltValueNullFieldError.checkNotNull(
        comment, r'GReminderToCreateInput', 'comment');
  }

  @override
  GReminderToCreateInput rebuild(
          void Function(GReminderToCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReminderToCreateInputBuilder toBuilder() =>
      new GReminderToCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReminderToCreateInput &&
        patientId == other.patientId &&
        title == other.title &&
        date == other.date &&
        comment == other.comment;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, date.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReminderToCreateInput')
          ..add('patientId', patientId)
          ..add('title', title)
          ..add('date', date)
          ..add('comment', comment))
        .toString();
  }
}

class GReminderToCreateInputBuilder
    implements Builder<GReminderToCreateInput, GReminderToCreateInputBuilder> {
  _$GReminderToCreateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _date;
  String? get date => _$this._date;
  set date(String? date) => _$this._date = date;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GReminderToCreateInputBuilder();

  GReminderToCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _title = $v.title;
      _date = $v.date;
      _comment = $v.comment;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReminderToCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReminderToCreateInput;
  }

  @override
  void update(void Function(GReminderToCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReminderToCreateInput build() => _build();

  _$GReminderToCreateInput _build() {
    final _$result = _$v ??
        new _$GReminderToCreateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GReminderToCreateInput', 'patientId'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GReminderToCreateInput', 'title'),
            date: BuiltValueNullFieldError.checkNotNull(
                date, r'GReminderToCreateInput', 'date'),
            comment: BuiltValueNullFieldError.checkNotNull(
                comment, r'GReminderToCreateInput', 'comment'));
    replace(_$result);
    return _$result;
  }
}

class _$GReminderToUpdateInput extends GReminderToUpdateInput {
  @override
  final String id;
  @override
  final String patientId;
  @override
  final String title;
  @override
  final String date;
  @override
  final String comment;

  factory _$GReminderToUpdateInput(
          [void Function(GReminderToUpdateInputBuilder)? updates]) =>
      (new GReminderToUpdateInputBuilder()..update(updates))._build();

  _$GReminderToUpdateInput._(
      {required this.id,
      required this.patientId,
      required this.title,
      required this.date,
      required this.comment})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GReminderToUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GReminderToUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GReminderToUpdateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        date, r'GReminderToUpdateInput', 'date');
    BuiltValueNullFieldError.checkNotNull(
        comment, r'GReminderToUpdateInput', 'comment');
  }

  @override
  GReminderToUpdateInput rebuild(
          void Function(GReminderToUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReminderToUpdateInputBuilder toBuilder() =>
      new GReminderToUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReminderToUpdateInput &&
        id == other.id &&
        patientId == other.patientId &&
        title == other.title &&
        date == other.date &&
        comment == other.comment;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, date.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReminderToUpdateInput')
          ..add('id', id)
          ..add('patientId', patientId)
          ..add('title', title)
          ..add('date', date)
          ..add('comment', comment))
        .toString();
  }
}

class GReminderToUpdateInputBuilder
    implements Builder<GReminderToUpdateInput, GReminderToUpdateInputBuilder> {
  _$GReminderToUpdateInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  String? _date;
  String? get date => _$this._date;
  set date(String? date) => _$this._date = date;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GReminderToUpdateInputBuilder();

  GReminderToUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _patientId = $v.patientId;
      _title = $v.title;
      _date = $v.date;
      _comment = $v.comment;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReminderToUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReminderToUpdateInput;
  }

  @override
  void update(void Function(GReminderToUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReminderToUpdateInput build() => _build();

  _$GReminderToUpdateInput _build() {
    final _$result = _$v ??
        new _$GReminderToUpdateInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GReminderToUpdateInput', 'id'),
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GReminderToUpdateInput', 'patientId'),
            title: BuiltValueNullFieldError.checkNotNull(
                title, r'GReminderToUpdateInput', 'title'),
            date: BuiltValueNullFieldError.checkNotNull(
                date, r'GReminderToUpdateInput', 'date'),
            comment: BuiltValueNullFieldError.checkNotNull(
                comment, r'GReminderToUpdateInput', 'comment'));
    replace(_$result);
    return _$result;
  }
}

class _$GUpdatePreventionStatusViewModel
    extends GUpdatePreventionStatusViewModel {
  @override
  final String code;
  @override
  final String patientId;
  @override
  final GPreventionTypeEnum statut;
  @override
  final String dateDebutPrevention;
  @override
  final String? executionDate;
  @override
  final GPreventionTypeEnum? previousStatus;

  factory _$GUpdatePreventionStatusViewModel(
          [void Function(GUpdatePreventionStatusViewModelBuilder)? updates]) =>
      (new GUpdatePreventionStatusViewModelBuilder()..update(updates))._build();

  _$GUpdatePreventionStatusViewModel._(
      {required this.code,
      required this.patientId,
      required this.statut,
      required this.dateDebutPrevention,
      this.executionDate,
      this.previousStatus})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        code, r'GUpdatePreventionStatusViewModel', 'code');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GUpdatePreventionStatusViewModel', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        statut, r'GUpdatePreventionStatusViewModel', 'statut');
    BuiltValueNullFieldError.checkNotNull(dateDebutPrevention,
        r'GUpdatePreventionStatusViewModel', 'dateDebutPrevention');
  }

  @override
  GUpdatePreventionStatusViewModel rebuild(
          void Function(GUpdatePreventionStatusViewModelBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUpdatePreventionStatusViewModelBuilder toBuilder() =>
      new GUpdatePreventionStatusViewModelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUpdatePreventionStatusViewModel &&
        code == other.code &&
        patientId == other.patientId &&
        statut == other.statut &&
        dateDebutPrevention == other.dateDebutPrevention &&
        executionDate == other.executionDate &&
        previousStatus == other.previousStatus;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, statut.hashCode);
    _$hash = $jc(_$hash, dateDebutPrevention.hashCode);
    _$hash = $jc(_$hash, executionDate.hashCode);
    _$hash = $jc(_$hash, previousStatus.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUpdatePreventionStatusViewModel')
          ..add('code', code)
          ..add('patientId', patientId)
          ..add('statut', statut)
          ..add('dateDebutPrevention', dateDebutPrevention)
          ..add('executionDate', executionDate)
          ..add('previousStatus', previousStatus))
        .toString();
  }
}

class GUpdatePreventionStatusViewModelBuilder
    implements
        Builder<GUpdatePreventionStatusViewModel,
            GUpdatePreventionStatusViewModelBuilder> {
  _$GUpdatePreventionStatusViewModel? _$v;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GPreventionTypeEnum? _statut;
  GPreventionTypeEnum? get statut => _$this._statut;
  set statut(GPreventionTypeEnum? statut) => _$this._statut = statut;

  String? _dateDebutPrevention;
  String? get dateDebutPrevention => _$this._dateDebutPrevention;
  set dateDebutPrevention(String? dateDebutPrevention) =>
      _$this._dateDebutPrevention = dateDebutPrevention;

  String? _executionDate;
  String? get executionDate => _$this._executionDate;
  set executionDate(String? executionDate) =>
      _$this._executionDate = executionDate;

  GPreventionTypeEnum? _previousStatus;
  GPreventionTypeEnum? get previousStatus => _$this._previousStatus;
  set previousStatus(GPreventionTypeEnum? previousStatus) =>
      _$this._previousStatus = previousStatus;

  GUpdatePreventionStatusViewModelBuilder();

  GUpdatePreventionStatusViewModelBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _code = $v.code;
      _patientId = $v.patientId;
      _statut = $v.statut;
      _dateDebutPrevention = $v.dateDebutPrevention;
      _executionDate = $v.executionDate;
      _previousStatus = $v.previousStatus;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUpdatePreventionStatusViewModel other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUpdatePreventionStatusViewModel;
  }

  @override
  void update(void Function(GUpdatePreventionStatusViewModelBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUpdatePreventionStatusViewModel build() => _build();

  _$GUpdatePreventionStatusViewModel _build() {
    final _$result = _$v ??
        new _$GUpdatePreventionStatusViewModel._(
            code: BuiltValueNullFieldError.checkNotNull(
                code, r'GUpdatePreventionStatusViewModel', 'code'),
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GUpdatePreventionStatusViewModel', 'patientId'),
            statut: BuiltValueNullFieldError.checkNotNull(
                statut, r'GUpdatePreventionStatusViewModel', 'statut'),
            dateDebutPrevention: BuiltValueNullFieldError.checkNotNull(
                dateDebutPrevention,
                r'GUpdatePreventionStatusViewModel',
                'dateDebutPrevention'),
            executionDate: executionDate,
            previousStatus: previousStatus);
    replace(_$result);
    return _$result;
  }
}

class _$GAllergyInput extends GAllergyInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final BuiltList<String>? linkedTreatmentsId;

  factory _$GAllergyInput([void Function(GAllergyInputBuilder)? updates]) =>
      (new GAllergyInputBuilder()..update(updates))._build();

  _$GAllergyInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      this.linkedTreatmentsId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GAllergyInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(name, r'GAllergyInput', 'name');
  }

  @override
  GAllergyInput rebuild(void Function(GAllergyInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAllergyInputBuilder toBuilder() => new GAllergyInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAllergyInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        linkedTreatmentsId == other.linkedTreatmentsId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, linkedTreatmentsId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAllergyInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('linkedTreatmentsId', linkedTreatmentsId))
        .toString();
  }
}

class GAllergyInputBuilder
    implements Builder<GAllergyInput, GAllergyInputBuilder> {
  _$GAllergyInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  ListBuilder<String>? _linkedTreatmentsId;
  ListBuilder<String> get linkedTreatmentsId =>
      _$this._linkedTreatmentsId ??= new ListBuilder<String>();
  set linkedTreatmentsId(ListBuilder<String>? linkedTreatmentsId) =>
      _$this._linkedTreatmentsId = linkedTreatmentsId;

  GAllergyInputBuilder();

  GAllergyInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _linkedTreatmentsId = $v.linkedTreatmentsId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAllergyInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAllergyInput;
  }

  @override
  void update(void Function(GAllergyInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAllergyInput build() => _build();

  _$GAllergyInput _build() {
    _$GAllergyInput _$result;
    try {
      _$result = _$v ??
          new _$GAllergyInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GAllergyInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GAllergyInput', 'name'),
              comment: comment,
              linkedTreatmentsId: _linkedTreatmentsId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'linkedTreatmentsId';
        _linkedTreatmentsId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAllergyInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GAllergyUpdateInput extends GAllergyUpdateInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final String id;
  @override
  final BuiltList<GLinkUpdateInput>? linkedTreatmentUpdate;

  factory _$GAllergyUpdateInput(
          [void Function(GAllergyUpdateInputBuilder)? updates]) =>
      (new GAllergyUpdateInputBuilder()..update(updates))._build();

  _$GAllergyUpdateInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      required this.id,
      this.linkedTreatmentUpdate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GAllergyUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(name, r'GAllergyUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(id, r'GAllergyUpdateInput', 'id');
  }

  @override
  GAllergyUpdateInput rebuild(
          void Function(GAllergyUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAllergyUpdateInputBuilder toBuilder() =>
      new GAllergyUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAllergyUpdateInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        id == other.id &&
        linkedTreatmentUpdate == other.linkedTreatmentUpdate;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, linkedTreatmentUpdate.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAllergyUpdateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('id', id)
          ..add('linkedTreatmentUpdate', linkedTreatmentUpdate))
        .toString();
  }
}

class GAllergyUpdateInputBuilder
    implements Builder<GAllergyUpdateInput, GAllergyUpdateInputBuilder> {
  _$GAllergyUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  ListBuilder<GLinkUpdateInput>? _linkedTreatmentUpdate;
  ListBuilder<GLinkUpdateInput> get linkedTreatmentUpdate =>
      _$this._linkedTreatmentUpdate ??= new ListBuilder<GLinkUpdateInput>();
  set linkedTreatmentUpdate(
          ListBuilder<GLinkUpdateInput>? linkedTreatmentUpdate) =>
      _$this._linkedTreatmentUpdate = linkedTreatmentUpdate;

  GAllergyUpdateInputBuilder();

  GAllergyUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _id = $v.id;
      _linkedTreatmentUpdate = $v.linkedTreatmentUpdate?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAllergyUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAllergyUpdateInput;
  }

  @override
  void update(void Function(GAllergyUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAllergyUpdateInput build() => _build();

  _$GAllergyUpdateInput _build() {
    _$GAllergyUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GAllergyUpdateInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GAllergyUpdateInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GAllergyUpdateInput', 'name'),
              comment: comment,
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GAllergyUpdateInput', 'id'),
              linkedTreatmentUpdate: _linkedTreatmentUpdate?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'linkedTreatmentUpdate';
        _linkedTreatmentUpdate?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAllergyUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GLinkIdInput extends GLinkIdInput {
  @override
  final String id;
  @override
  final GLinkType type;

  factory _$GLinkIdInput([void Function(GLinkIdInputBuilder)? updates]) =>
      (new GLinkIdInputBuilder()..update(updates))._build();

  _$GLinkIdInput._({required this.id, required this.type}) : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GLinkIdInput', 'id');
    BuiltValueNullFieldError.checkNotNull(type, r'GLinkIdInput', 'type');
  }

  @override
  GLinkIdInput rebuild(void Function(GLinkIdInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLinkIdInputBuilder toBuilder() => new GLinkIdInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLinkIdInput && id == other.id && type == other.type;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLinkIdInput')
          ..add('id', id)
          ..add('type', type))
        .toString();
  }
}

class GLinkIdInputBuilder
    implements Builder<GLinkIdInput, GLinkIdInputBuilder> {
  _$GLinkIdInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GLinkType? _type;
  GLinkType? get type => _$this._type;
  set type(GLinkType? type) => _$this._type = type;

  GLinkIdInputBuilder();

  GLinkIdInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _type = $v.type;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLinkIdInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLinkIdInput;
  }

  @override
  void update(void Function(GLinkIdInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLinkIdInput build() => _build();

  _$GLinkIdInput _build() {
    final _$result = _$v ??
        new _$GLinkIdInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GLinkIdInput', 'id'),
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GLinkIdInput', 'type'));
    replace(_$result);
    return _$result;
  }
}

class _$GDisabilityInput extends GDisabilityInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final BuiltList<GDisabilitiesTypesEnum> types;
  @override
  final GDisabilityRateEnum? disabilityRate;
  @override
  final String? technicalHelp;
  @override
  final GHumanHelpEnum humanHelp;

  factory _$GDisabilityInput(
          [void Function(GDisabilityInputBuilder)? updates]) =>
      (new GDisabilityInputBuilder()..update(updates))._build();

  _$GDisabilityInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      required this.types,
      this.disabilityRate,
      this.technicalHelp,
      required this.humanHelp})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDisabilityInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(name, r'GDisabilityInput', 'name');
    BuiltValueNullFieldError.checkNotNull(types, r'GDisabilityInput', 'types');
    BuiltValueNullFieldError.checkNotNull(
        humanHelp, r'GDisabilityInput', 'humanHelp');
  }

  @override
  GDisabilityInput rebuild(void Function(GDisabilityInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDisabilityInputBuilder toBuilder() =>
      new GDisabilityInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDisabilityInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        types == other.types &&
        disabilityRate == other.disabilityRate &&
        technicalHelp == other.technicalHelp &&
        humanHelp == other.humanHelp;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, types.hashCode);
    _$hash = $jc(_$hash, disabilityRate.hashCode);
    _$hash = $jc(_$hash, technicalHelp.hashCode);
    _$hash = $jc(_$hash, humanHelp.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDisabilityInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('types', types)
          ..add('disabilityRate', disabilityRate)
          ..add('technicalHelp', technicalHelp)
          ..add('humanHelp', humanHelp))
        .toString();
  }
}

class GDisabilityInputBuilder
    implements Builder<GDisabilityInput, GDisabilityInputBuilder> {
  _$GDisabilityInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  ListBuilder<GDisabilitiesTypesEnum>? _types;
  ListBuilder<GDisabilitiesTypesEnum> get types =>
      _$this._types ??= new ListBuilder<GDisabilitiesTypesEnum>();
  set types(ListBuilder<GDisabilitiesTypesEnum>? types) =>
      _$this._types = types;

  GDisabilityRateEnum? _disabilityRate;
  GDisabilityRateEnum? get disabilityRate => _$this._disabilityRate;
  set disabilityRate(GDisabilityRateEnum? disabilityRate) =>
      _$this._disabilityRate = disabilityRate;

  String? _technicalHelp;
  String? get technicalHelp => _$this._technicalHelp;
  set technicalHelp(String? technicalHelp) =>
      _$this._technicalHelp = technicalHelp;

  GHumanHelpEnum? _humanHelp;
  GHumanHelpEnum? get humanHelp => _$this._humanHelp;
  set humanHelp(GHumanHelpEnum? humanHelp) => _$this._humanHelp = humanHelp;

  GDisabilityInputBuilder();

  GDisabilityInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _types = $v.types.toBuilder();
      _disabilityRate = $v.disabilityRate;
      _technicalHelp = $v.technicalHelp;
      _humanHelp = $v.humanHelp;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDisabilityInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDisabilityInput;
  }

  @override
  void update(void Function(GDisabilityInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDisabilityInput build() => _build();

  _$GDisabilityInput _build() {
    _$GDisabilityInput _$result;
    try {
      _$result = _$v ??
          new _$GDisabilityInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDisabilityInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GDisabilityInput', 'name'),
              comment: comment,
              types: types.build(),
              disabilityRate: disabilityRate,
              technicalHelp: technicalHelp,
              humanHelp: BuiltValueNullFieldError.checkNotNull(
                  humanHelp, r'GDisabilityInput', 'humanHelp'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'types';
        types.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDisabilityInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDisabilityUpdateInput extends GDisabilityUpdateInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final BuiltList<GDisabilitiesTypesEnum> types;
  @override
  final GDisabilityRateEnum? disabilityRate;
  @override
  final String? technicalHelp;
  @override
  final GHumanHelpEnum humanHelp;
  @override
  final String id;

  factory _$GDisabilityUpdateInput(
          [void Function(GDisabilityUpdateInputBuilder)? updates]) =>
      (new GDisabilityUpdateInputBuilder()..update(updates))._build();

  _$GDisabilityUpdateInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      required this.types,
      this.disabilityRate,
      this.technicalHelp,
      required this.humanHelp,
      required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDisabilityUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GDisabilityUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        types, r'GDisabilityUpdateInput', 'types');
    BuiltValueNullFieldError.checkNotNull(
        humanHelp, r'GDisabilityUpdateInput', 'humanHelp');
    BuiltValueNullFieldError.checkNotNull(id, r'GDisabilityUpdateInput', 'id');
  }

  @override
  GDisabilityUpdateInput rebuild(
          void Function(GDisabilityUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDisabilityUpdateInputBuilder toBuilder() =>
      new GDisabilityUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDisabilityUpdateInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        types == other.types &&
        disabilityRate == other.disabilityRate &&
        technicalHelp == other.technicalHelp &&
        humanHelp == other.humanHelp &&
        id == other.id;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, types.hashCode);
    _$hash = $jc(_$hash, disabilityRate.hashCode);
    _$hash = $jc(_$hash, technicalHelp.hashCode);
    _$hash = $jc(_$hash, humanHelp.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDisabilityUpdateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('types', types)
          ..add('disabilityRate', disabilityRate)
          ..add('technicalHelp', technicalHelp)
          ..add('humanHelp', humanHelp)
          ..add('id', id))
        .toString();
  }
}

class GDisabilityUpdateInputBuilder
    implements Builder<GDisabilityUpdateInput, GDisabilityUpdateInputBuilder> {
  _$GDisabilityUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  ListBuilder<GDisabilitiesTypesEnum>? _types;
  ListBuilder<GDisabilitiesTypesEnum> get types =>
      _$this._types ??= new ListBuilder<GDisabilitiesTypesEnum>();
  set types(ListBuilder<GDisabilitiesTypesEnum>? types) =>
      _$this._types = types;

  GDisabilityRateEnum? _disabilityRate;
  GDisabilityRateEnum? get disabilityRate => _$this._disabilityRate;
  set disabilityRate(GDisabilityRateEnum? disabilityRate) =>
      _$this._disabilityRate = disabilityRate;

  String? _technicalHelp;
  String? get technicalHelp => _$this._technicalHelp;
  set technicalHelp(String? technicalHelp) =>
      _$this._technicalHelp = technicalHelp;

  GHumanHelpEnum? _humanHelp;
  GHumanHelpEnum? get humanHelp => _$this._humanHelp;
  set humanHelp(GHumanHelpEnum? humanHelp) => _$this._humanHelp = humanHelp;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GDisabilityUpdateInputBuilder();

  GDisabilityUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _types = $v.types.toBuilder();
      _disabilityRate = $v.disabilityRate;
      _technicalHelp = $v.technicalHelp;
      _humanHelp = $v.humanHelp;
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDisabilityUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDisabilityUpdateInput;
  }

  @override
  void update(void Function(GDisabilityUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDisabilityUpdateInput build() => _build();

  _$GDisabilityUpdateInput _build() {
    _$GDisabilityUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GDisabilityUpdateInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDisabilityUpdateInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GDisabilityUpdateInput', 'name'),
              comment: comment,
              types: types.build(),
              disabilityRate: disabilityRate,
              technicalHelp: technicalHelp,
              humanHelp: BuiltValueNullFieldError.checkNotNull(
                  humanHelp, r'GDisabilityUpdateInput', 'humanHelp'),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GDisabilityUpdateInput', 'id'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'types';
        types.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDisabilityUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDiseaseInput extends GDiseaseInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final String? startDay;
  @override
  final String? startMonth;
  @override
  final String startYear;
  @override
  final String? endDay;
  @override
  final String? endMonth;
  @override
  final String? endYear;
  @override
  final BuiltList<String>? linkedDocumentsId;
  @override
  final BuiltList<String>? linkedTreatmentsId;

  factory _$GDiseaseInput([void Function(GDiseaseInputBuilder)? updates]) =>
      (new GDiseaseInputBuilder()..update(updates))._build();

  _$GDiseaseInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      this.startDay,
      this.startMonth,
      required this.startYear,
      this.endDay,
      this.endMonth,
      this.endYear,
      this.linkedDocumentsId,
      this.linkedTreatmentsId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDiseaseInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(name, r'GDiseaseInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        startYear, r'GDiseaseInput', 'startYear');
  }

  @override
  GDiseaseInput rebuild(void Function(GDiseaseInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiseaseInputBuilder toBuilder() => new GDiseaseInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiseaseInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        startDay == other.startDay &&
        startMonth == other.startMonth &&
        startYear == other.startYear &&
        endDay == other.endDay &&
        endMonth == other.endMonth &&
        endYear == other.endYear &&
        linkedDocumentsId == other.linkedDocumentsId &&
        linkedTreatmentsId == other.linkedTreatmentsId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, startDay.hashCode);
    _$hash = $jc(_$hash, startMonth.hashCode);
    _$hash = $jc(_$hash, startYear.hashCode);
    _$hash = $jc(_$hash, endDay.hashCode);
    _$hash = $jc(_$hash, endMonth.hashCode);
    _$hash = $jc(_$hash, endYear.hashCode);
    _$hash = $jc(_$hash, linkedDocumentsId.hashCode);
    _$hash = $jc(_$hash, linkedTreatmentsId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiseaseInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('startDay', startDay)
          ..add('startMonth', startMonth)
          ..add('startYear', startYear)
          ..add('endDay', endDay)
          ..add('endMonth', endMonth)
          ..add('endYear', endYear)
          ..add('linkedDocumentsId', linkedDocumentsId)
          ..add('linkedTreatmentsId', linkedTreatmentsId))
        .toString();
  }
}

class GDiseaseInputBuilder
    implements Builder<GDiseaseInput, GDiseaseInputBuilder> {
  _$GDiseaseInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _startDay;
  String? get startDay => _$this._startDay;
  set startDay(String? startDay) => _$this._startDay = startDay;

  String? _startMonth;
  String? get startMonth => _$this._startMonth;
  set startMonth(String? startMonth) => _$this._startMonth = startMonth;

  String? _startYear;
  String? get startYear => _$this._startYear;
  set startYear(String? startYear) => _$this._startYear = startYear;

  String? _endDay;
  String? get endDay => _$this._endDay;
  set endDay(String? endDay) => _$this._endDay = endDay;

  String? _endMonth;
  String? get endMonth => _$this._endMonth;
  set endMonth(String? endMonth) => _$this._endMonth = endMonth;

  String? _endYear;
  String? get endYear => _$this._endYear;
  set endYear(String? endYear) => _$this._endYear = endYear;

  ListBuilder<String>? _linkedDocumentsId;
  ListBuilder<String> get linkedDocumentsId =>
      _$this._linkedDocumentsId ??= new ListBuilder<String>();
  set linkedDocumentsId(ListBuilder<String>? linkedDocumentsId) =>
      _$this._linkedDocumentsId = linkedDocumentsId;

  ListBuilder<String>? _linkedTreatmentsId;
  ListBuilder<String> get linkedTreatmentsId =>
      _$this._linkedTreatmentsId ??= new ListBuilder<String>();
  set linkedTreatmentsId(ListBuilder<String>? linkedTreatmentsId) =>
      _$this._linkedTreatmentsId = linkedTreatmentsId;

  GDiseaseInputBuilder();

  GDiseaseInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _startDay = $v.startDay;
      _startMonth = $v.startMonth;
      _startYear = $v.startYear;
      _endDay = $v.endDay;
      _endMonth = $v.endMonth;
      _endYear = $v.endYear;
      _linkedDocumentsId = $v.linkedDocumentsId?.toBuilder();
      _linkedTreatmentsId = $v.linkedTreatmentsId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiseaseInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiseaseInput;
  }

  @override
  void update(void Function(GDiseaseInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiseaseInput build() => _build();

  _$GDiseaseInput _build() {
    _$GDiseaseInput _$result;
    try {
      _$result = _$v ??
          new _$GDiseaseInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDiseaseInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GDiseaseInput', 'name'),
              comment: comment,
              startDay: startDay,
              startMonth: startMonth,
              startYear: BuiltValueNullFieldError.checkNotNull(
                  startYear, r'GDiseaseInput', 'startYear'),
              endDay: endDay,
              endMonth: endMonth,
              endYear: endYear,
              linkedDocumentsId: _linkedDocumentsId?.build(),
              linkedTreatmentsId: _linkedTreatmentsId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'linkedDocumentsId';
        _linkedDocumentsId?.build();
        _$failedField = 'linkedTreatmentsId';
        _linkedTreatmentsId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDiseaseInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDiseaseUpdateInput extends GDiseaseUpdateInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final String id;
  @override
  final String? startDay;
  @override
  final String? startMonth;
  @override
  final String startYear;
  @override
  final String? endDay;
  @override
  final String? endMonth;
  @override
  final String? endYear;
  @override
  final BuiltList<GLinkUpdateInput>? linkedTreatmentUpdate;
  @override
  final BuiltList<GLinkUpdateInput>? linkedDocumentUpdate;
  @override
  final BuiltList<String>? linkedDocumentsId;
  @override
  final BuiltList<String>? linkedTreatmentsId;

  factory _$GDiseaseUpdateInput(
          [void Function(GDiseaseUpdateInputBuilder)? updates]) =>
      (new GDiseaseUpdateInputBuilder()..update(updates))._build();

  _$GDiseaseUpdateInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      required this.id,
      this.startDay,
      this.startMonth,
      required this.startYear,
      this.endDay,
      this.endMonth,
      this.endYear,
      this.linkedTreatmentUpdate,
      this.linkedDocumentUpdate,
      this.linkedDocumentsId,
      this.linkedTreatmentsId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDiseaseUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(name, r'GDiseaseUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(id, r'GDiseaseUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        startYear, r'GDiseaseUpdateInput', 'startYear');
  }

  @override
  GDiseaseUpdateInput rebuild(
          void Function(GDiseaseUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDiseaseUpdateInputBuilder toBuilder() =>
      new GDiseaseUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDiseaseUpdateInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        id == other.id &&
        startDay == other.startDay &&
        startMonth == other.startMonth &&
        startYear == other.startYear &&
        endDay == other.endDay &&
        endMonth == other.endMonth &&
        endYear == other.endYear &&
        linkedTreatmentUpdate == other.linkedTreatmentUpdate &&
        linkedDocumentUpdate == other.linkedDocumentUpdate &&
        linkedDocumentsId == other.linkedDocumentsId &&
        linkedTreatmentsId == other.linkedTreatmentsId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, startDay.hashCode);
    _$hash = $jc(_$hash, startMonth.hashCode);
    _$hash = $jc(_$hash, startYear.hashCode);
    _$hash = $jc(_$hash, endDay.hashCode);
    _$hash = $jc(_$hash, endMonth.hashCode);
    _$hash = $jc(_$hash, endYear.hashCode);
    _$hash = $jc(_$hash, linkedTreatmentUpdate.hashCode);
    _$hash = $jc(_$hash, linkedDocumentUpdate.hashCode);
    _$hash = $jc(_$hash, linkedDocumentsId.hashCode);
    _$hash = $jc(_$hash, linkedTreatmentsId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDiseaseUpdateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('id', id)
          ..add('startDay', startDay)
          ..add('startMonth', startMonth)
          ..add('startYear', startYear)
          ..add('endDay', endDay)
          ..add('endMonth', endMonth)
          ..add('endYear', endYear)
          ..add('linkedTreatmentUpdate', linkedTreatmentUpdate)
          ..add('linkedDocumentUpdate', linkedDocumentUpdate)
          ..add('linkedDocumentsId', linkedDocumentsId)
          ..add('linkedTreatmentsId', linkedTreatmentsId))
        .toString();
  }
}

class GDiseaseUpdateInputBuilder
    implements Builder<GDiseaseUpdateInput, GDiseaseUpdateInputBuilder> {
  _$GDiseaseUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _startDay;
  String? get startDay => _$this._startDay;
  set startDay(String? startDay) => _$this._startDay = startDay;

  String? _startMonth;
  String? get startMonth => _$this._startMonth;
  set startMonth(String? startMonth) => _$this._startMonth = startMonth;

  String? _startYear;
  String? get startYear => _$this._startYear;
  set startYear(String? startYear) => _$this._startYear = startYear;

  String? _endDay;
  String? get endDay => _$this._endDay;
  set endDay(String? endDay) => _$this._endDay = endDay;

  String? _endMonth;
  String? get endMonth => _$this._endMonth;
  set endMonth(String? endMonth) => _$this._endMonth = endMonth;

  String? _endYear;
  String? get endYear => _$this._endYear;
  set endYear(String? endYear) => _$this._endYear = endYear;

  ListBuilder<GLinkUpdateInput>? _linkedTreatmentUpdate;
  ListBuilder<GLinkUpdateInput> get linkedTreatmentUpdate =>
      _$this._linkedTreatmentUpdate ??= new ListBuilder<GLinkUpdateInput>();
  set linkedTreatmentUpdate(
          ListBuilder<GLinkUpdateInput>? linkedTreatmentUpdate) =>
      _$this._linkedTreatmentUpdate = linkedTreatmentUpdate;

  ListBuilder<GLinkUpdateInput>? _linkedDocumentUpdate;
  ListBuilder<GLinkUpdateInput> get linkedDocumentUpdate =>
      _$this._linkedDocumentUpdate ??= new ListBuilder<GLinkUpdateInput>();
  set linkedDocumentUpdate(
          ListBuilder<GLinkUpdateInput>? linkedDocumentUpdate) =>
      _$this._linkedDocumentUpdate = linkedDocumentUpdate;

  ListBuilder<String>? _linkedDocumentsId;
  ListBuilder<String> get linkedDocumentsId =>
      _$this._linkedDocumentsId ??= new ListBuilder<String>();
  set linkedDocumentsId(ListBuilder<String>? linkedDocumentsId) =>
      _$this._linkedDocumentsId = linkedDocumentsId;

  ListBuilder<String>? _linkedTreatmentsId;
  ListBuilder<String> get linkedTreatmentsId =>
      _$this._linkedTreatmentsId ??= new ListBuilder<String>();
  set linkedTreatmentsId(ListBuilder<String>? linkedTreatmentsId) =>
      _$this._linkedTreatmentsId = linkedTreatmentsId;

  GDiseaseUpdateInputBuilder();

  GDiseaseUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _id = $v.id;
      _startDay = $v.startDay;
      _startMonth = $v.startMonth;
      _startYear = $v.startYear;
      _endDay = $v.endDay;
      _endMonth = $v.endMonth;
      _endYear = $v.endYear;
      _linkedTreatmentUpdate = $v.linkedTreatmentUpdate?.toBuilder();
      _linkedDocumentUpdate = $v.linkedDocumentUpdate?.toBuilder();
      _linkedDocumentsId = $v.linkedDocumentsId?.toBuilder();
      _linkedTreatmentsId = $v.linkedTreatmentsId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDiseaseUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDiseaseUpdateInput;
  }

  @override
  void update(void Function(GDiseaseUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDiseaseUpdateInput build() => _build();

  _$GDiseaseUpdateInput _build() {
    _$GDiseaseUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GDiseaseUpdateInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDiseaseUpdateInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GDiseaseUpdateInput', 'name'),
              comment: comment,
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GDiseaseUpdateInput', 'id'),
              startDay: startDay,
              startMonth: startMonth,
              startYear: BuiltValueNullFieldError.checkNotNull(
                  startYear, r'GDiseaseUpdateInput', 'startYear'),
              endDay: endDay,
              endMonth: endMonth,
              endYear: endYear,
              linkedTreatmentUpdate: _linkedTreatmentUpdate?.build(),
              linkedDocumentUpdate: _linkedDocumentUpdate?.build(),
              linkedDocumentsId: _linkedDocumentsId?.build(),
              linkedTreatmentsId: _linkedTreatmentsId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'linkedTreatmentUpdate';
        _linkedTreatmentUpdate?.build();
        _$failedField = 'linkedDocumentUpdate';
        _linkedDocumentUpdate?.build();
        _$failedField = 'linkedDocumentsId';
        _linkedDocumentsId?.build();
        _$failedField = 'linkedTreatmentsId';
        _linkedTreatmentsId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDiseaseUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GLinkUpdateInput extends GLinkUpdateInput {
  @override
  final String linkId;
  @override
  final GLinkIdInput source;
  @override
  final GLinkIdInput target;

  factory _$GLinkUpdateInput(
          [void Function(GLinkUpdateInputBuilder)? updates]) =>
      (new GLinkUpdateInputBuilder()..update(updates))._build();

  _$GLinkUpdateInput._(
      {required this.linkId, required this.source, required this.target})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        linkId, r'GLinkUpdateInput', 'linkId');
    BuiltValueNullFieldError.checkNotNull(
        source, r'GLinkUpdateInput', 'source');
    BuiltValueNullFieldError.checkNotNull(
        target, r'GLinkUpdateInput', 'target');
  }

  @override
  GLinkUpdateInput rebuild(void Function(GLinkUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLinkUpdateInputBuilder toBuilder() =>
      new GLinkUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLinkUpdateInput &&
        linkId == other.linkId &&
        source == other.source &&
        target == other.target;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, linkId.hashCode);
    _$hash = $jc(_$hash, source.hashCode);
    _$hash = $jc(_$hash, target.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLinkUpdateInput')
          ..add('linkId', linkId)
          ..add('source', source)
          ..add('target', target))
        .toString();
  }
}

class GLinkUpdateInputBuilder
    implements Builder<GLinkUpdateInput, GLinkUpdateInputBuilder> {
  _$GLinkUpdateInput? _$v;

  String? _linkId;
  String? get linkId => _$this._linkId;
  set linkId(String? linkId) => _$this._linkId = linkId;

  GLinkIdInputBuilder? _source;
  GLinkIdInputBuilder get source =>
      _$this._source ??= new GLinkIdInputBuilder();
  set source(GLinkIdInputBuilder? source) => _$this._source = source;

  GLinkIdInputBuilder? _target;
  GLinkIdInputBuilder get target =>
      _$this._target ??= new GLinkIdInputBuilder();
  set target(GLinkIdInputBuilder? target) => _$this._target = target;

  GLinkUpdateInputBuilder();

  GLinkUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _linkId = $v.linkId;
      _source = $v.source.toBuilder();
      _target = $v.target.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLinkUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLinkUpdateInput;
  }

  @override
  void update(void Function(GLinkUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLinkUpdateInput build() => _build();

  _$GLinkUpdateInput _build() {
    _$GLinkUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GLinkUpdateInput._(
              linkId: BuiltValueNullFieldError.checkNotNull(
                  linkId, r'GLinkUpdateInput', 'linkId'),
              source: source.build(),
              target: target.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'source';
        source.build();
        _$failedField = 'target';
        target.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GLinkUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentInput extends GDocumentInput {
  @override
  final String patientId;
  @override
  final String title;
  @override
  final BuiltList<GConfidentiality>? confidentialities;
  @override
  final GCategory category;
  @override
  final String? createdAt;
  @override
  final String? uploadedAt;
  @override
  final String attachment;
  @override
  final String mimeType;
  @override
  final String uploadedBy;
  @override
  final String author;
  @override
  final String? folderId;

  factory _$GDocumentInput([void Function(GDocumentInputBuilder)? updates]) =>
      (new GDocumentInputBuilder()..update(updates))._build();

  _$GDocumentInput._(
      {required this.patientId,
      required this.title,
      this.confidentialities,
      required this.category,
      this.createdAt,
      this.uploadedAt,
      required this.attachment,
      required this.mimeType,
      required this.uploadedBy,
      required this.author,
      this.folderId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDocumentInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(title, r'GDocumentInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GDocumentInput', 'category');
    BuiltValueNullFieldError.checkNotNull(
        attachment, r'GDocumentInput', 'attachment');
    BuiltValueNullFieldError.checkNotNull(
        mimeType, r'GDocumentInput', 'mimeType');
    BuiltValueNullFieldError.checkNotNull(
        uploadedBy, r'GDocumentInput', 'uploadedBy');
    BuiltValueNullFieldError.checkNotNull(author, r'GDocumentInput', 'author');
  }

  @override
  GDocumentInput rebuild(void Function(GDocumentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentInputBuilder toBuilder() =>
      new GDocumentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentInput &&
        patientId == other.patientId &&
        title == other.title &&
        confidentialities == other.confidentialities &&
        category == other.category &&
        createdAt == other.createdAt &&
        uploadedAt == other.uploadedAt &&
        attachment == other.attachment &&
        mimeType == other.mimeType &&
        uploadedBy == other.uploadedBy &&
        author == other.author &&
        folderId == other.folderId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, confidentialities.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, uploadedAt.hashCode);
    _$hash = $jc(_$hash, attachment.hashCode);
    _$hash = $jc(_$hash, mimeType.hashCode);
    _$hash = $jc(_$hash, uploadedBy.hashCode);
    _$hash = $jc(_$hash, author.hashCode);
    _$hash = $jc(_$hash, folderId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentInput')
          ..add('patientId', patientId)
          ..add('title', title)
          ..add('confidentialities', confidentialities)
          ..add('category', category)
          ..add('createdAt', createdAt)
          ..add('uploadedAt', uploadedAt)
          ..add('attachment', attachment)
          ..add('mimeType', mimeType)
          ..add('uploadedBy', uploadedBy)
          ..add('author', author)
          ..add('folderId', folderId))
        .toString();
  }
}

class GDocumentInputBuilder
    implements Builder<GDocumentInput, GDocumentInputBuilder> {
  _$GDocumentInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  ListBuilder<GConfidentiality>? _confidentialities;
  ListBuilder<GConfidentiality> get confidentialities =>
      _$this._confidentialities ??= new ListBuilder<GConfidentiality>();
  set confidentialities(ListBuilder<GConfidentiality>? confidentialities) =>
      _$this._confidentialities = confidentialities;

  GCategory? _category;
  GCategory? get category => _$this._category;
  set category(GCategory? category) => _$this._category = category;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _uploadedAt;
  String? get uploadedAt => _$this._uploadedAt;
  set uploadedAt(String? uploadedAt) => _$this._uploadedAt = uploadedAt;

  String? _attachment;
  String? get attachment => _$this._attachment;
  set attachment(String? attachment) => _$this._attachment = attachment;

  String? _mimeType;
  String? get mimeType => _$this._mimeType;
  set mimeType(String? mimeType) => _$this._mimeType = mimeType;

  String? _uploadedBy;
  String? get uploadedBy => _$this._uploadedBy;
  set uploadedBy(String? uploadedBy) => _$this._uploadedBy = uploadedBy;

  String? _author;
  String? get author => _$this._author;
  set author(String? author) => _$this._author = author;

  String? _folderId;
  String? get folderId => _$this._folderId;
  set folderId(String? folderId) => _$this._folderId = folderId;

  GDocumentInputBuilder();

  GDocumentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _title = $v.title;
      _confidentialities = $v.confidentialities?.toBuilder();
      _category = $v.category;
      _createdAt = $v.createdAt;
      _uploadedAt = $v.uploadedAt;
      _attachment = $v.attachment;
      _mimeType = $v.mimeType;
      _uploadedBy = $v.uploadedBy;
      _author = $v.author;
      _folderId = $v.folderId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentInput;
  }

  @override
  void update(void Function(GDocumentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentInput build() => _build();

  _$GDocumentInput _build() {
    _$GDocumentInput _$result;
    try {
      _$result = _$v ??
          new _$GDocumentInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDocumentInput', 'patientId'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GDocumentInput', 'title'),
              confidentialities: _confidentialities?.build(),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GDocumentInput', 'category'),
              createdAt: createdAt,
              uploadedAt: uploadedAt,
              attachment: BuiltValueNullFieldError.checkNotNull(
                  attachment, r'GDocumentInput', 'attachment'),
              mimeType: BuiltValueNullFieldError.checkNotNull(
                  mimeType, r'GDocumentInput', 'mimeType'),
              uploadedBy: BuiltValueNullFieldError.checkNotNull(
                  uploadedBy, r'GDocumentInput', 'uploadedBy'),
              author: BuiltValueNullFieldError.checkNotNull(
                  author, r'GDocumentInput', 'author'),
              folderId: folderId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confidentialities';
        _confidentialities?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDocumentInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentUpdateInput extends GDocumentUpdateInput {
  @override
  final String id;
  @override
  final String patientId;
  @override
  final String title;
  @override
  final BuiltList<GConfidentiality>? confidentialities;
  @override
  final GCategory category;
  @override
  final String createdAt;
  @override
  final String? uploadedAt;
  @override
  final String attachment;
  @override
  final String mimeType;
  @override
  final String uploadedBy;
  @override
  final String author;

  factory _$GDocumentUpdateInput(
          [void Function(GDocumentUpdateInputBuilder)? updates]) =>
      (new GDocumentUpdateInputBuilder()..update(updates))._build();

  _$GDocumentUpdateInput._(
      {required this.id,
      required this.patientId,
      required this.title,
      this.confidentialities,
      required this.category,
      required this.createdAt,
      this.uploadedAt,
      required this.attachment,
      required this.mimeType,
      required this.uploadedBy,
      required this.author})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDocumentUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDocumentUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GDocumentUpdateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GDocumentUpdateInput', 'category');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GDocumentUpdateInput', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(
        attachment, r'GDocumentUpdateInput', 'attachment');
    BuiltValueNullFieldError.checkNotNull(
        mimeType, r'GDocumentUpdateInput', 'mimeType');
    BuiltValueNullFieldError.checkNotNull(
        uploadedBy, r'GDocumentUpdateInput', 'uploadedBy');
    BuiltValueNullFieldError.checkNotNull(
        author, r'GDocumentUpdateInput', 'author');
  }

  @override
  GDocumentUpdateInput rebuild(
          void Function(GDocumentUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentUpdateInputBuilder toBuilder() =>
      new GDocumentUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentUpdateInput &&
        id == other.id &&
        patientId == other.patientId &&
        title == other.title &&
        confidentialities == other.confidentialities &&
        category == other.category &&
        createdAt == other.createdAt &&
        uploadedAt == other.uploadedAt &&
        attachment == other.attachment &&
        mimeType == other.mimeType &&
        uploadedBy == other.uploadedBy &&
        author == other.author;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, confidentialities.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, uploadedAt.hashCode);
    _$hash = $jc(_$hash, attachment.hashCode);
    _$hash = $jc(_$hash, mimeType.hashCode);
    _$hash = $jc(_$hash, uploadedBy.hashCode);
    _$hash = $jc(_$hash, author.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentUpdateInput')
          ..add('id', id)
          ..add('patientId', patientId)
          ..add('title', title)
          ..add('confidentialities', confidentialities)
          ..add('category', category)
          ..add('createdAt', createdAt)
          ..add('uploadedAt', uploadedAt)
          ..add('attachment', attachment)
          ..add('mimeType', mimeType)
          ..add('uploadedBy', uploadedBy)
          ..add('author', author))
        .toString();
  }
}

class GDocumentUpdateInputBuilder
    implements Builder<GDocumentUpdateInput, GDocumentUpdateInputBuilder> {
  _$GDocumentUpdateInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  ListBuilder<GConfidentiality>? _confidentialities;
  ListBuilder<GConfidentiality> get confidentialities =>
      _$this._confidentialities ??= new ListBuilder<GConfidentiality>();
  set confidentialities(ListBuilder<GConfidentiality>? confidentialities) =>
      _$this._confidentialities = confidentialities;

  GCategory? _category;
  GCategory? get category => _$this._category;
  set category(GCategory? category) => _$this._category = category;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _uploadedAt;
  String? get uploadedAt => _$this._uploadedAt;
  set uploadedAt(String? uploadedAt) => _$this._uploadedAt = uploadedAt;

  String? _attachment;
  String? get attachment => _$this._attachment;
  set attachment(String? attachment) => _$this._attachment = attachment;

  String? _mimeType;
  String? get mimeType => _$this._mimeType;
  set mimeType(String? mimeType) => _$this._mimeType = mimeType;

  String? _uploadedBy;
  String? get uploadedBy => _$this._uploadedBy;
  set uploadedBy(String? uploadedBy) => _$this._uploadedBy = uploadedBy;

  String? _author;
  String? get author => _$this._author;
  set author(String? author) => _$this._author = author;

  GDocumentUpdateInputBuilder();

  GDocumentUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _patientId = $v.patientId;
      _title = $v.title;
      _confidentialities = $v.confidentialities?.toBuilder();
      _category = $v.category;
      _createdAt = $v.createdAt;
      _uploadedAt = $v.uploadedAt;
      _attachment = $v.attachment;
      _mimeType = $v.mimeType;
      _uploadedBy = $v.uploadedBy;
      _author = $v.author;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentUpdateInput;
  }

  @override
  void update(void Function(GDocumentUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentUpdateInput build() => _build();

  _$GDocumentUpdateInput _build() {
    _$GDocumentUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GDocumentUpdateInput._(
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GDocumentUpdateInput', 'id'),
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDocumentUpdateInput', 'patientId'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GDocumentUpdateInput', 'title'),
              confidentialities: _confidentialities?.build(),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GDocumentUpdateInput', 'category'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GDocumentUpdateInput', 'createdAt'),
              uploadedAt: uploadedAt,
              attachment: BuiltValueNullFieldError.checkNotNull(
                  attachment, r'GDocumentUpdateInput', 'attachment'),
              mimeType: BuiltValueNullFieldError.checkNotNull(
                  mimeType, r'GDocumentUpdateInput', 'mimeType'),
              uploadedBy: BuiltValueNullFieldError.checkNotNull(
                  uploadedBy, r'GDocumentUpdateInput', 'uploadedBy'),
              author:
                  BuiltValueNullFieldError.checkNotNull(author, r'GDocumentUpdateInput', 'author'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confidentialities';
        _confidentialities?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDocumentUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentPropertiesUpdateInput extends GDocumentPropertiesUpdateInput {
  @override
  final String id;
  @override
  final String patientId;
  @override
  final String title;
  @override
  final GCategory category;
  @override
  final String createdAt;
  @override
  final String? uploadedAt;
  @override
  final BuiltList<GConfidentiality> confidentialities;
  @override
  final String? folderId;

  factory _$GDocumentPropertiesUpdateInput(
          [void Function(GDocumentPropertiesUpdateInputBuilder)? updates]) =>
      (new GDocumentPropertiesUpdateInputBuilder()..update(updates))._build();

  _$GDocumentPropertiesUpdateInput._(
      {required this.id,
      required this.patientId,
      required this.title,
      required this.category,
      required this.createdAt,
      this.uploadedAt,
      required this.confidentialities,
      this.folderId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDocumentPropertiesUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDocumentPropertiesUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        title, r'GDocumentPropertiesUpdateInput', 'title');
    BuiltValueNullFieldError.checkNotNull(
        category, r'GDocumentPropertiesUpdateInput', 'category');
    BuiltValueNullFieldError.checkNotNull(
        createdAt, r'GDocumentPropertiesUpdateInput', 'createdAt');
    BuiltValueNullFieldError.checkNotNull(confidentialities,
        r'GDocumentPropertiesUpdateInput', 'confidentialities');
  }

  @override
  GDocumentPropertiesUpdateInput rebuild(
          void Function(GDocumentPropertiesUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentPropertiesUpdateInputBuilder toBuilder() =>
      new GDocumentPropertiesUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentPropertiesUpdateInput &&
        id == other.id &&
        patientId == other.patientId &&
        title == other.title &&
        category == other.category &&
        createdAt == other.createdAt &&
        uploadedAt == other.uploadedAt &&
        confidentialities == other.confidentialities &&
        folderId == other.folderId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, title.hashCode);
    _$hash = $jc(_$hash, category.hashCode);
    _$hash = $jc(_$hash, createdAt.hashCode);
    _$hash = $jc(_$hash, uploadedAt.hashCode);
    _$hash = $jc(_$hash, confidentialities.hashCode);
    _$hash = $jc(_$hash, folderId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentPropertiesUpdateInput')
          ..add('id', id)
          ..add('patientId', patientId)
          ..add('title', title)
          ..add('category', category)
          ..add('createdAt', createdAt)
          ..add('uploadedAt', uploadedAt)
          ..add('confidentialities', confidentialities)
          ..add('folderId', folderId))
        .toString();
  }
}

class GDocumentPropertiesUpdateInputBuilder
    implements
        Builder<GDocumentPropertiesUpdateInput,
            GDocumentPropertiesUpdateInputBuilder> {
  _$GDocumentPropertiesUpdateInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _title;
  String? get title => _$this._title;
  set title(String? title) => _$this._title = title;

  GCategory? _category;
  GCategory? get category => _$this._category;
  set category(GCategory? category) => _$this._category = category;

  String? _createdAt;
  String? get createdAt => _$this._createdAt;
  set createdAt(String? createdAt) => _$this._createdAt = createdAt;

  String? _uploadedAt;
  String? get uploadedAt => _$this._uploadedAt;
  set uploadedAt(String? uploadedAt) => _$this._uploadedAt = uploadedAt;

  ListBuilder<GConfidentiality>? _confidentialities;
  ListBuilder<GConfidentiality> get confidentialities =>
      _$this._confidentialities ??= new ListBuilder<GConfidentiality>();
  set confidentialities(ListBuilder<GConfidentiality>? confidentialities) =>
      _$this._confidentialities = confidentialities;

  String? _folderId;
  String? get folderId => _$this._folderId;
  set folderId(String? folderId) => _$this._folderId = folderId;

  GDocumentPropertiesUpdateInputBuilder();

  GDocumentPropertiesUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _patientId = $v.patientId;
      _title = $v.title;
      _category = $v.category;
      _createdAt = $v.createdAt;
      _uploadedAt = $v.uploadedAt;
      _confidentialities = $v.confidentialities.toBuilder();
      _folderId = $v.folderId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentPropertiesUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentPropertiesUpdateInput;
  }

  @override
  void update(void Function(GDocumentPropertiesUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentPropertiesUpdateInput build() => _build();

  _$GDocumentPropertiesUpdateInput _build() {
    _$GDocumentPropertiesUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GDocumentPropertiesUpdateInput._(
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GDocumentPropertiesUpdateInput', 'id'),
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDocumentPropertiesUpdateInput', 'patientId'),
              title: BuiltValueNullFieldError.checkNotNull(
                  title, r'GDocumentPropertiesUpdateInput', 'title'),
              category: BuiltValueNullFieldError.checkNotNull(
                  category, r'GDocumentPropertiesUpdateInput', 'category'),
              createdAt: BuiltValueNullFieldError.checkNotNull(
                  createdAt, r'GDocumentPropertiesUpdateInput', 'createdAt'),
              uploadedAt: uploadedAt,
              confidentialities: confidentialities.build(),
              folderId: folderId);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confidentialities';
        confidentialities.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDocumentPropertiesUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentDeleteInput extends GDocumentDeleteInput {
  @override
  final String documentId;
  @override
  final String ensUserId;

  factory _$GDocumentDeleteInput(
          [void Function(GDocumentDeleteInputBuilder)? updates]) =>
      (new GDocumentDeleteInputBuilder()..update(updates))._build();

  _$GDocumentDeleteInput._({required this.documentId, required this.ensUserId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        documentId, r'GDocumentDeleteInput', 'documentId');
    BuiltValueNullFieldError.checkNotNull(
        ensUserId, r'GDocumentDeleteInput', 'ensUserId');
  }

  @override
  GDocumentDeleteInput rebuild(
          void Function(GDocumentDeleteInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentDeleteInputBuilder toBuilder() =>
      new GDocumentDeleteInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentDeleteInput &&
        documentId == other.documentId &&
        ensUserId == other.ensUserId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, documentId.hashCode);
    _$hash = $jc(_$hash, ensUserId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentDeleteInput')
          ..add('documentId', documentId)
          ..add('ensUserId', ensUserId))
        .toString();
  }
}

class GDocumentDeleteInputBuilder
    implements Builder<GDocumentDeleteInput, GDocumentDeleteInputBuilder> {
  _$GDocumentDeleteInput? _$v;

  String? _documentId;
  String? get documentId => _$this._documentId;
  set documentId(String? documentId) => _$this._documentId = documentId;

  String? _ensUserId;
  String? get ensUserId => _$this._ensUserId;
  set ensUserId(String? ensUserId) => _$this._ensUserId = ensUserId;

  GDocumentDeleteInputBuilder();

  GDocumentDeleteInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _documentId = $v.documentId;
      _ensUserId = $v.ensUserId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentDeleteInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentDeleteInput;
  }

  @override
  void update(void Function(GDocumentDeleteInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentDeleteInput build() => _build();

  _$GDocumentDeleteInput _build() {
    final _$result = _$v ??
        new _$GDocumentDeleteInput._(
            documentId: BuiltValueNullFieldError.checkNotNull(
                documentId, r'GDocumentDeleteInput', 'documentId'),
            ensUserId: BuiltValueNullFieldError.checkNotNull(
                ensUserId, r'GDocumentDeleteInput', 'ensUserId'));
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentUpdateConfidentialityInput
    extends GDocumentUpdateConfidentialityInput {
  @override
  final String id;
  @override
  final String patientId;
  @override
  final BuiltList<GConfidentiality>? confidentialities;

  factory _$GDocumentUpdateConfidentialityInput(
          [void Function(GDocumentUpdateConfidentialityInputBuilder)?
              updates]) =>
      (new GDocumentUpdateConfidentialityInputBuilder()..update(updates))
          ._build();

  _$GDocumentUpdateConfidentialityInput._(
      {required this.id, required this.patientId, this.confidentialities})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GDocumentUpdateConfidentialityInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDocumentUpdateConfidentialityInput', 'patientId');
  }

  @override
  GDocumentUpdateConfidentialityInput rebuild(
          void Function(GDocumentUpdateConfidentialityInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentUpdateConfidentialityInputBuilder toBuilder() =>
      new GDocumentUpdateConfidentialityInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentUpdateConfidentialityInput &&
        id == other.id &&
        patientId == other.patientId &&
        confidentialities == other.confidentialities;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, confidentialities.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentUpdateConfidentialityInput')
          ..add('id', id)
          ..add('patientId', patientId)
          ..add('confidentialities', confidentialities))
        .toString();
  }
}

class GDocumentUpdateConfidentialityInputBuilder
    implements
        Builder<GDocumentUpdateConfidentialityInput,
            GDocumentUpdateConfidentialityInputBuilder> {
  _$GDocumentUpdateConfidentialityInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  ListBuilder<GConfidentiality>? _confidentialities;
  ListBuilder<GConfidentiality> get confidentialities =>
      _$this._confidentialities ??= new ListBuilder<GConfidentiality>();
  set confidentialities(ListBuilder<GConfidentiality>? confidentialities) =>
      _$this._confidentialities = confidentialities;

  GDocumentUpdateConfidentialityInputBuilder();

  GDocumentUpdateConfidentialityInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _patientId = $v.patientId;
      _confidentialities = $v.confidentialities?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentUpdateConfidentialityInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentUpdateConfidentialityInput;
  }

  @override
  void update(
      void Function(GDocumentUpdateConfidentialityInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentUpdateConfidentialityInput build() => _build();

  _$GDocumentUpdateConfidentialityInput _build() {
    _$GDocumentUpdateConfidentialityInput _$result;
    try {
      _$result = _$v ??
          new _$GDocumentUpdateConfidentialityInput._(
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GDocumentUpdateConfidentialityInput', 'id'),
              patientId: BuiltValueNullFieldError.checkNotNull(patientId,
                  r'GDocumentUpdateConfidentialityInput', 'patientId'),
              confidentialities: _confidentialities?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confidentialities';
        _confidentialities?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDocumentUpdateConfidentialityInput',
            _$failedField,
            e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentsDeletionInput extends GDocumentsDeletionInput {
  @override
  final String? patientId;
  @override
  final BuiltList<String> documentsIds;

  factory _$GDocumentsDeletionInput(
          [void Function(GDocumentsDeletionInputBuilder)? updates]) =>
      (new GDocumentsDeletionInputBuilder()..update(updates))._build();

  _$GDocumentsDeletionInput._({this.patientId, required this.documentsIds})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        documentsIds, r'GDocumentsDeletionInput', 'documentsIds');
  }

  @override
  GDocumentsDeletionInput rebuild(
          void Function(GDocumentsDeletionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentsDeletionInputBuilder toBuilder() =>
      new GDocumentsDeletionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentsDeletionInput &&
        patientId == other.patientId &&
        documentsIds == other.documentsIds;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, documentsIds.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentsDeletionInput')
          ..add('patientId', patientId)
          ..add('documentsIds', documentsIds))
        .toString();
  }
}

class GDocumentsDeletionInputBuilder
    implements
        Builder<GDocumentsDeletionInput, GDocumentsDeletionInputBuilder> {
  _$GDocumentsDeletionInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  ListBuilder<String>? _documentsIds;
  ListBuilder<String> get documentsIds =>
      _$this._documentsIds ??= new ListBuilder<String>();
  set documentsIds(ListBuilder<String>? documentsIds) =>
      _$this._documentsIds = documentsIds;

  GDocumentsDeletionInputBuilder();

  GDocumentsDeletionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _documentsIds = $v.documentsIds.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentsDeletionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentsDeletionInput;
  }

  @override
  void update(void Function(GDocumentsDeletionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentsDeletionInput build() => _build();

  _$GDocumentsDeletionInput _build() {
    _$GDocumentsDeletionInput _$result;
    try {
      _$result = _$v ??
          new _$GDocumentsDeletionInput._(
              patientId: patientId, documentsIds: documentsIds.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'documentsIds';
        documentsIds.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDocumentsDeletionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSingleDocumentMarkInput extends GSingleDocumentMarkInput {
  @override
  final String? patientId;
  @override
  final GDocumentMarkInput document;

  factory _$GSingleDocumentMarkInput(
          [void Function(GSingleDocumentMarkInputBuilder)? updates]) =>
      (new GSingleDocumentMarkInputBuilder()..update(updates))._build();

  _$GSingleDocumentMarkInput._({this.patientId, required this.document})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        document, r'GSingleDocumentMarkInput', 'document');
  }

  @override
  GSingleDocumentMarkInput rebuild(
          void Function(GSingleDocumentMarkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSingleDocumentMarkInputBuilder toBuilder() =>
      new GSingleDocumentMarkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSingleDocumentMarkInput &&
        patientId == other.patientId &&
        document == other.document;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, document.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSingleDocumentMarkInput')
          ..add('patientId', patientId)
          ..add('document', document))
        .toString();
  }
}

class GSingleDocumentMarkInputBuilder
    implements
        Builder<GSingleDocumentMarkInput, GSingleDocumentMarkInputBuilder> {
  _$GSingleDocumentMarkInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GDocumentMarkInputBuilder? _document;
  GDocumentMarkInputBuilder get document =>
      _$this._document ??= new GDocumentMarkInputBuilder();
  set document(GDocumentMarkInputBuilder? document) =>
      _$this._document = document;

  GSingleDocumentMarkInputBuilder();

  GSingleDocumentMarkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _document = $v.document.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSingleDocumentMarkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSingleDocumentMarkInput;
  }

  @override
  void update(void Function(GSingleDocumentMarkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSingleDocumentMarkInput build() => _build();

  _$GSingleDocumentMarkInput _build() {
    _$GSingleDocumentMarkInput _$result;
    try {
      _$result = _$v ??
          new _$GSingleDocumentMarkInput._(
              patientId: patientId, document: document.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'document';
        document.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSingleDocumentMarkInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentMarkInput extends GDocumentMarkInput {
  @override
  final String id;
  @override
  final bool? reported;
  @override
  final bool? pinned;

  factory _$GDocumentMarkInput(
          [void Function(GDocumentMarkInputBuilder)? updates]) =>
      (new GDocumentMarkInputBuilder()..update(updates))._build();

  _$GDocumentMarkInput._({required this.id, this.reported, this.pinned})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDocumentMarkInput', 'id');
  }

  @override
  GDocumentMarkInput rebuild(
          void Function(GDocumentMarkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentMarkInputBuilder toBuilder() =>
      new GDocumentMarkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentMarkInput &&
        id == other.id &&
        reported == other.reported &&
        pinned == other.pinned;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, reported.hashCode);
    _$hash = $jc(_$hash, pinned.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentMarkInput')
          ..add('id', id)
          ..add('reported', reported)
          ..add('pinned', pinned))
        .toString();
  }
}

class GDocumentMarkInputBuilder
    implements Builder<GDocumentMarkInput, GDocumentMarkInputBuilder> {
  _$GDocumentMarkInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _reported;
  bool? get reported => _$this._reported;
  set reported(bool? reported) => _$this._reported = reported;

  bool? _pinned;
  bool? get pinned => _$this._pinned;
  set pinned(bool? pinned) => _$this._pinned = pinned;

  GDocumentMarkInputBuilder();

  GDocumentMarkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _reported = $v.reported;
      _pinned = $v.pinned;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentMarkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentMarkInput;
  }

  @override
  void update(void Function(GDocumentMarkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentMarkInput build() => _build();

  _$GDocumentMarkInput _build() {
    final _$result = _$v ??
        new _$GDocumentMarkInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GDocumentMarkInput', 'id'),
            reported: reported,
            pinned: pinned);
    replace(_$result);
    return _$result;
  }
}

class _$GMultipleDocumentsMarkInput extends GMultipleDocumentsMarkInput {
  @override
  final String? patientId;
  @override
  final BuiltList<GDocumentMarkInput> documents;

  factory _$GMultipleDocumentsMarkInput(
          [void Function(GMultipleDocumentsMarkInputBuilder)? updates]) =>
      (new GMultipleDocumentsMarkInputBuilder()..update(updates))._build();

  _$GMultipleDocumentsMarkInput._({this.patientId, required this.documents})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        documents, r'GMultipleDocumentsMarkInput', 'documents');
  }

  @override
  GMultipleDocumentsMarkInput rebuild(
          void Function(GMultipleDocumentsMarkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMultipleDocumentsMarkInputBuilder toBuilder() =>
      new GMultipleDocumentsMarkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMultipleDocumentsMarkInput &&
        patientId == other.patientId &&
        documents == other.documents;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, documents.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMultipleDocumentsMarkInput')
          ..add('patientId', patientId)
          ..add('documents', documents))
        .toString();
  }
}

class GMultipleDocumentsMarkInputBuilder
    implements
        Builder<GMultipleDocumentsMarkInput,
            GMultipleDocumentsMarkInputBuilder> {
  _$GMultipleDocumentsMarkInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  ListBuilder<GDocumentMarkInput>? _documents;
  ListBuilder<GDocumentMarkInput> get documents =>
      _$this._documents ??= new ListBuilder<GDocumentMarkInput>();
  set documents(ListBuilder<GDocumentMarkInput>? documents) =>
      _$this._documents = documents;

  GMultipleDocumentsMarkInputBuilder();

  GMultipleDocumentsMarkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _documents = $v.documents.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMultipleDocumentsMarkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMultipleDocumentsMarkInput;
  }

  @override
  void update(void Function(GMultipleDocumentsMarkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMultipleDocumentsMarkInput build() => _build();

  _$GMultipleDocumentsMarkInput _build() {
    _$GMultipleDocumentsMarkInput _$result;
    try {
      _$result = _$v ??
          new _$GMultipleDocumentsMarkInput._(
              patientId: patientId, documents: documents.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'documents';
        documents.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMultipleDocumentsMarkInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSingleDocumentPatchInput extends GSingleDocumentPatchInput {
  @override
  final String? patientId;
  @override
  final GDocumentPatchInput document;

  factory _$GSingleDocumentPatchInput(
          [void Function(GSingleDocumentPatchInputBuilder)? updates]) =>
      (new GSingleDocumentPatchInputBuilder()..update(updates))._build();

  _$GSingleDocumentPatchInput._({this.patientId, required this.document})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        document, r'GSingleDocumentPatchInput', 'document');
  }

  @override
  GSingleDocumentPatchInput rebuild(
          void Function(GSingleDocumentPatchInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSingleDocumentPatchInputBuilder toBuilder() =>
      new GSingleDocumentPatchInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSingleDocumentPatchInput &&
        patientId == other.patientId &&
        document == other.document;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, document.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSingleDocumentPatchInput')
          ..add('patientId', patientId)
          ..add('document', document))
        .toString();
  }
}

class GSingleDocumentPatchInputBuilder
    implements
        Builder<GSingleDocumentPatchInput, GSingleDocumentPatchInputBuilder> {
  _$GSingleDocumentPatchInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GDocumentPatchInputBuilder? _document;
  GDocumentPatchInputBuilder get document =>
      _$this._document ??= new GDocumentPatchInputBuilder();
  set document(GDocumentPatchInputBuilder? document) =>
      _$this._document = document;

  GSingleDocumentPatchInputBuilder();

  GSingleDocumentPatchInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _document = $v.document.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSingleDocumentPatchInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSingleDocumentPatchInput;
  }

  @override
  void update(void Function(GSingleDocumentPatchInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSingleDocumentPatchInput build() => _build();

  _$GSingleDocumentPatchInput _build() {
    _$GSingleDocumentPatchInput _$result;
    try {
      _$result = _$v ??
          new _$GSingleDocumentPatchInput._(
              patientId: patientId, document: document.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'document';
        document.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSingleDocumentPatchInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GDocumentPatchInput extends GDocumentPatchInput {
  @override
  final String id;
  @override
  final bool? reported;
  @override
  final bool? pinned;
  @override
  final String? folderId;

  factory _$GDocumentPatchInput(
          [void Function(GDocumentPatchInputBuilder)? updates]) =>
      (new GDocumentPatchInputBuilder()..update(updates))._build();

  _$GDocumentPatchInput._(
      {required this.id, this.reported, this.pinned, this.folderId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDocumentPatchInput', 'id');
  }

  @override
  GDocumentPatchInput rebuild(
          void Function(GDocumentPatchInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDocumentPatchInputBuilder toBuilder() =>
      new GDocumentPatchInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDocumentPatchInput &&
        id == other.id &&
        reported == other.reported &&
        pinned == other.pinned &&
        folderId == other.folderId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, reported.hashCode);
    _$hash = $jc(_$hash, pinned.hashCode);
    _$hash = $jc(_$hash, folderId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDocumentPatchInput')
          ..add('id', id)
          ..add('reported', reported)
          ..add('pinned', pinned)
          ..add('folderId', folderId))
        .toString();
  }
}

class GDocumentPatchInputBuilder
    implements Builder<GDocumentPatchInput, GDocumentPatchInputBuilder> {
  _$GDocumentPatchInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  bool? _reported;
  bool? get reported => _$this._reported;
  set reported(bool? reported) => _$this._reported = reported;

  bool? _pinned;
  bool? get pinned => _$this._pinned;
  set pinned(bool? pinned) => _$this._pinned = pinned;

  String? _folderId;
  String? get folderId => _$this._folderId;
  set folderId(String? folderId) => _$this._folderId = folderId;

  GDocumentPatchInputBuilder();

  GDocumentPatchInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _reported = $v.reported;
      _pinned = $v.pinned;
      _folderId = $v.folderId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDocumentPatchInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDocumentPatchInput;
  }

  @override
  void update(void Function(GDocumentPatchInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDocumentPatchInput build() => _build();

  _$GDocumentPatchInput _build() {
    final _$result = _$v ??
        new _$GDocumentPatchInput._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GDocumentPatchInput', 'id'),
            reported: reported,
            pinned: pinned,
            folderId: folderId);
    replace(_$result);
    return _$result;
  }
}

class _$GMultipleDocumentsPatchInput extends GMultipleDocumentsPatchInput {
  @override
  final String? patientId;
  @override
  final BuiltList<GDocumentPatchInput> documents;

  factory _$GMultipleDocumentsPatchInput(
          [void Function(GMultipleDocumentsPatchInputBuilder)? updates]) =>
      (new GMultipleDocumentsPatchInputBuilder()..update(updates))._build();

  _$GMultipleDocumentsPatchInput._({this.patientId, required this.documents})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        documents, r'GMultipleDocumentsPatchInput', 'documents');
  }

  @override
  GMultipleDocumentsPatchInput rebuild(
          void Function(GMultipleDocumentsPatchInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMultipleDocumentsPatchInputBuilder toBuilder() =>
      new GMultipleDocumentsPatchInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMultipleDocumentsPatchInput &&
        patientId == other.patientId &&
        documents == other.documents;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, documents.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMultipleDocumentsPatchInput')
          ..add('patientId', patientId)
          ..add('documents', documents))
        .toString();
  }
}

class GMultipleDocumentsPatchInputBuilder
    implements
        Builder<GMultipleDocumentsPatchInput,
            GMultipleDocumentsPatchInputBuilder> {
  _$GMultipleDocumentsPatchInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  ListBuilder<GDocumentPatchInput>? _documents;
  ListBuilder<GDocumentPatchInput> get documents =>
      _$this._documents ??= new ListBuilder<GDocumentPatchInput>();
  set documents(ListBuilder<GDocumentPatchInput>? documents) =>
      _$this._documents = documents;

  GMultipleDocumentsPatchInputBuilder();

  GMultipleDocumentsPatchInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _documents = $v.documents.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMultipleDocumentsPatchInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMultipleDocumentsPatchInput;
  }

  @override
  void update(void Function(GMultipleDocumentsPatchInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMultipleDocumentsPatchInput build() => _build();

  _$GMultipleDocumentsPatchInput _build() {
    _$GMultipleDocumentsPatchInput _$result;
    try {
      _$result = _$v ??
          new _$GMultipleDocumentsPatchInput._(
              patientId: patientId, documents: documents.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'documents';
        documents.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMultipleDocumentsPatchInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GCreateFolderInputs extends GCreateFolderInputs {
  @override
  final String? patientId;
  @override
  final String folderName;

  factory _$GCreateFolderInputs(
          [void Function(GCreateFolderInputsBuilder)? updates]) =>
      (new GCreateFolderInputsBuilder()..update(updates))._build();

  _$GCreateFolderInputs._({this.patientId, required this.folderName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        folderName, r'GCreateFolderInputs', 'folderName');
  }

  @override
  GCreateFolderInputs rebuild(
          void Function(GCreateFolderInputsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateFolderInputsBuilder toBuilder() =>
      new GCreateFolderInputsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateFolderInputs &&
        patientId == other.patientId &&
        folderName == other.folderName;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, folderName.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateFolderInputs')
          ..add('patientId', patientId)
          ..add('folderName', folderName))
        .toString();
  }
}

class GCreateFolderInputsBuilder
    implements Builder<GCreateFolderInputs, GCreateFolderInputsBuilder> {
  _$GCreateFolderInputs? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _folderName;
  String? get folderName => _$this._folderName;
  set folderName(String? folderName) => _$this._folderName = folderName;

  GCreateFolderInputsBuilder();

  GCreateFolderInputsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _folderName = $v.folderName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateFolderInputs other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateFolderInputs;
  }

  @override
  void update(void Function(GCreateFolderInputsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateFolderInputs build() => _build();

  _$GCreateFolderInputs _build() {
    final _$result = _$v ??
        new _$GCreateFolderInputs._(
            patientId: patientId,
            folderName: BuiltValueNullFieldError.checkNotNull(
                folderName, r'GCreateFolderInputs', 'folderName'));
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteFolderInputs extends GDeleteFolderInputs {
  @override
  final String? patientId;
  @override
  final String folderId;

  factory _$GDeleteFolderInputs(
          [void Function(GDeleteFolderInputsBuilder)? updates]) =>
      (new GDeleteFolderInputsBuilder()..update(updates))._build();

  _$GDeleteFolderInputs._({this.patientId, required this.folderId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        folderId, r'GDeleteFolderInputs', 'folderId');
  }

  @override
  GDeleteFolderInputs rebuild(
          void Function(GDeleteFolderInputsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDeleteFolderInputsBuilder toBuilder() =>
      new GDeleteFolderInputsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteFolderInputs &&
        patientId == other.patientId &&
        folderId == other.folderId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, folderId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDeleteFolderInputs')
          ..add('patientId', patientId)
          ..add('folderId', folderId))
        .toString();
  }
}

class GDeleteFolderInputsBuilder
    implements Builder<GDeleteFolderInputs, GDeleteFolderInputsBuilder> {
  _$GDeleteFolderInputs? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _folderId;
  String? get folderId => _$this._folderId;
  set folderId(String? folderId) => _$this._folderId = folderId;

  GDeleteFolderInputsBuilder();

  GDeleteFolderInputsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _folderId = $v.folderId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteFolderInputs other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDeleteFolderInputs;
  }

  @override
  void update(void Function(GDeleteFolderInputsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteFolderInputs build() => _build();

  _$GDeleteFolderInputs _build() {
    final _$result = _$v ??
        new _$GDeleteFolderInputs._(
            patientId: patientId,
            folderId: BuiltValueNullFieldError.checkNotNull(
                folderId, r'GDeleteFolderInputs', 'folderId'));
    replace(_$result);
    return _$result;
  }
}

class _$GRenameFolderInputs extends GRenameFolderInputs {
  @override
  final String? patientId;
  @override
  final String folderId;
  @override
  final String folderName;

  factory _$GRenameFolderInputs(
          [void Function(GRenameFolderInputsBuilder)? updates]) =>
      (new GRenameFolderInputsBuilder()..update(updates))._build();

  _$GRenameFolderInputs._(
      {this.patientId, required this.folderId, required this.folderName})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        folderId, r'GRenameFolderInputs', 'folderId');
    BuiltValueNullFieldError.checkNotNull(
        folderName, r'GRenameFolderInputs', 'folderName');
  }

  @override
  GRenameFolderInputs rebuild(
          void Function(GRenameFolderInputsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GRenameFolderInputsBuilder toBuilder() =>
      new GRenameFolderInputsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GRenameFolderInputs &&
        patientId == other.patientId &&
        folderId == other.folderId &&
        folderName == other.folderName;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, folderId.hashCode);
    _$hash = $jc(_$hash, folderName.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GRenameFolderInputs')
          ..add('patientId', patientId)
          ..add('folderId', folderId)
          ..add('folderName', folderName))
        .toString();
  }
}

class GRenameFolderInputsBuilder
    implements Builder<GRenameFolderInputs, GRenameFolderInputsBuilder> {
  _$GRenameFolderInputs? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _folderId;
  String? get folderId => _$this._folderId;
  set folderId(String? folderId) => _$this._folderId = folderId;

  String? _folderName;
  String? get folderName => _$this._folderName;
  set folderName(String? folderName) => _$this._folderName = folderName;

  GRenameFolderInputsBuilder();

  GRenameFolderInputsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _folderId = $v.folderId;
      _folderName = $v.folderName;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GRenameFolderInputs other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GRenameFolderInputs;
  }

  @override
  void update(void Function(GRenameFolderInputsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GRenameFolderInputs build() => _build();

  _$GRenameFolderInputs _build() {
    final _$result = _$v ??
        new _$GRenameFolderInputs._(
            patientId: patientId,
            folderId: BuiltValueNullFieldError.checkNotNull(
                folderId, r'GRenameFolderInputs', 'folderId'),
            folderName: BuiltValueNullFieldError.checkNotNull(
                folderName, r'GRenameFolderInputs', 'folderName'));
    replace(_$result);
    return _$result;
  }
}

class _$GFamilyHistoryInput extends GFamilyHistoryInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final GFamilyRelationshipEnum familyRelationship;

  factory _$GFamilyHistoryInput(
          [void Function(GFamilyHistoryInputBuilder)? updates]) =>
      (new GFamilyHistoryInputBuilder()..update(updates))._build();

  _$GFamilyHistoryInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      required this.familyRelationship})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GFamilyHistoryInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(name, r'GFamilyHistoryInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        familyRelationship, r'GFamilyHistoryInput', 'familyRelationship');
  }

  @override
  GFamilyHistoryInput rebuild(
          void Function(GFamilyHistoryInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFamilyHistoryInputBuilder toBuilder() =>
      new GFamilyHistoryInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFamilyHistoryInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        familyRelationship == other.familyRelationship;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, familyRelationship.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFamilyHistoryInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('familyRelationship', familyRelationship))
        .toString();
  }
}

class GFamilyHistoryInputBuilder
    implements Builder<GFamilyHistoryInput, GFamilyHistoryInputBuilder> {
  _$GFamilyHistoryInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GFamilyRelationshipEnum? _familyRelationship;
  GFamilyRelationshipEnum? get familyRelationship => _$this._familyRelationship;
  set familyRelationship(GFamilyRelationshipEnum? familyRelationship) =>
      _$this._familyRelationship = familyRelationship;

  GFamilyHistoryInputBuilder();

  GFamilyHistoryInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _familyRelationship = $v.familyRelationship;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFamilyHistoryInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFamilyHistoryInput;
  }

  @override
  void update(void Function(GFamilyHistoryInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFamilyHistoryInput build() => _build();

  _$GFamilyHistoryInput _build() {
    final _$result = _$v ??
        new _$GFamilyHistoryInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GFamilyHistoryInput', 'patientId'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GFamilyHistoryInput', 'name'),
            comment: comment,
            familyRelationship: BuiltValueNullFieldError.checkNotNull(
                familyRelationship,
                r'GFamilyHistoryInput',
                'familyRelationship'));
    replace(_$result);
    return _$result;
  }
}

class _$GFamilyHistoryUpdateInput extends GFamilyHistoryUpdateInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final GFamilyRelationshipEnum familyRelationship;
  @override
  final String id;

  factory _$GFamilyHistoryUpdateInput(
          [void Function(GFamilyHistoryUpdateInputBuilder)? updates]) =>
      (new GFamilyHistoryUpdateInputBuilder()..update(updates))._build();

  _$GFamilyHistoryUpdateInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      required this.familyRelationship,
      required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GFamilyHistoryUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GFamilyHistoryUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        familyRelationship, r'GFamilyHistoryUpdateInput', 'familyRelationship');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GFamilyHistoryUpdateInput', 'id');
  }

  @override
  GFamilyHistoryUpdateInput rebuild(
          void Function(GFamilyHistoryUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFamilyHistoryUpdateInputBuilder toBuilder() =>
      new GFamilyHistoryUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFamilyHistoryUpdateInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        familyRelationship == other.familyRelationship &&
        id == other.id;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, familyRelationship.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFamilyHistoryUpdateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('familyRelationship', familyRelationship)
          ..add('id', id))
        .toString();
  }
}

class GFamilyHistoryUpdateInputBuilder
    implements
        Builder<GFamilyHistoryUpdateInput, GFamilyHistoryUpdateInputBuilder> {
  _$GFamilyHistoryUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GFamilyRelationshipEnum? _familyRelationship;
  GFamilyRelationshipEnum? get familyRelationship => _$this._familyRelationship;
  set familyRelationship(GFamilyRelationshipEnum? familyRelationship) =>
      _$this._familyRelationship = familyRelationship;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GFamilyHistoryUpdateInputBuilder();

  GFamilyHistoryUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _familyRelationship = $v.familyRelationship;
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFamilyHistoryUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFamilyHistoryUpdateInput;
  }

  @override
  void update(void Function(GFamilyHistoryUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFamilyHistoryUpdateInput build() => _build();

  _$GFamilyHistoryUpdateInput _build() {
    final _$result = _$v ??
        new _$GFamilyHistoryUpdateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GFamilyHistoryUpdateInput', 'patientId'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GFamilyHistoryUpdateInput', 'name'),
            comment: comment,
            familyRelationship: BuiltValueNullFieldError.checkNotNull(
                familyRelationship,
                r'GFamilyHistoryUpdateInput',
                'familyRelationship'),
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GFamilyHistoryUpdateInput', 'id'));
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteLinkInput extends GDeleteLinkInput {
  @override
  final String linkId;

  factory _$GDeleteLinkInput(
          [void Function(GDeleteLinkInputBuilder)? updates]) =>
      (new GDeleteLinkInputBuilder()..update(updates))._build();

  _$GDeleteLinkInput._({required this.linkId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        linkId, r'GDeleteLinkInput', 'linkId');
  }

  @override
  GDeleteLinkInput rebuild(void Function(GDeleteLinkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDeleteLinkInputBuilder toBuilder() =>
      new GDeleteLinkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteLinkInput && linkId == other.linkId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, linkId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDeleteLinkInput')
          ..add('linkId', linkId))
        .toString();
  }
}

class GDeleteLinkInputBuilder
    implements Builder<GDeleteLinkInput, GDeleteLinkInputBuilder> {
  _$GDeleteLinkInput? _$v;

  String? _linkId;
  String? get linkId => _$this._linkId;
  set linkId(String? linkId) => _$this._linkId = linkId;

  GDeleteLinkInputBuilder();

  GDeleteLinkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _linkId = $v.linkId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteLinkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDeleteLinkInput;
  }

  @override
  void update(void Function(GDeleteLinkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteLinkInput build() => _build();

  _$GDeleteLinkInput _build() {
    final _$result = _$v ??
        new _$GDeleteLinkInput._(
            linkId: BuiltValueNullFieldError.checkNotNull(
                linkId, r'GDeleteLinkInput', 'linkId'));
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteDraftFromConversationInput
    extends GDeleteDraftFromConversationInput {
  @override
  final String patientId;
  @override
  final String conversationId;
  @override
  final GFiltersInput? filters;

  factory _$GDeleteDraftFromConversationInput(
          [void Function(GDeleteDraftFromConversationInputBuilder)? updates]) =>
      (new GDeleteDraftFromConversationInputBuilder()..update(updates))
          ._build();

  _$GDeleteDraftFromConversationInput._(
      {required this.patientId, required this.conversationId, this.filters})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDeleteDraftFromConversationInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        conversationId, r'GDeleteDraftFromConversationInput', 'conversationId');
  }

  @override
  GDeleteDraftFromConversationInput rebuild(
          void Function(GDeleteDraftFromConversationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDeleteDraftFromConversationInputBuilder toBuilder() =>
      new GDeleteDraftFromConversationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteDraftFromConversationInput &&
        patientId == other.patientId &&
        conversationId == other.conversationId &&
        filters == other.filters;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, conversationId.hashCode);
    _$hash = $jc(_$hash, filters.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDeleteDraftFromConversationInput')
          ..add('patientId', patientId)
          ..add('conversationId', conversationId)
          ..add('filters', filters))
        .toString();
  }
}

class GDeleteDraftFromConversationInputBuilder
    implements
        Builder<GDeleteDraftFromConversationInput,
            GDeleteDraftFromConversationInputBuilder> {
  _$GDeleteDraftFromConversationInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _conversationId;
  String? get conversationId => _$this._conversationId;
  set conversationId(String? conversationId) =>
      _$this._conversationId = conversationId;

  GFiltersInputBuilder? _filters;
  GFiltersInputBuilder get filters =>
      _$this._filters ??= new GFiltersInputBuilder();
  set filters(GFiltersInputBuilder? filters) => _$this._filters = filters;

  GDeleteDraftFromConversationInputBuilder();

  GDeleteDraftFromConversationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _conversationId = $v.conversationId;
      _filters = $v.filters?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteDraftFromConversationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDeleteDraftFromConversationInput;
  }

  @override
  void update(
      void Function(GDeleteDraftFromConversationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteDraftFromConversationInput build() => _build();

  _$GDeleteDraftFromConversationInput _build() {
    _$GDeleteDraftFromConversationInput _$result;
    try {
      _$result = _$v ??
          new _$GDeleteDraftFromConversationInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GDeleteDraftFromConversationInput', 'patientId'),
              conversationId: BuiltValueNullFieldError.checkNotNull(
                  conversationId,
                  r'GDeleteDraftFromConversationInput',
                  'conversationId'),
              filters: _filters?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'filters';
        _filters?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GDeleteDraftFromConversationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GConversationTrashInput extends GConversationTrashInput {
  @override
  final String patientId;
  @override
  final String conversationId;

  factory _$GConversationTrashInput(
          [void Function(GConversationTrashInputBuilder)? updates]) =>
      (new GConversationTrashInputBuilder()..update(updates))._build();

  _$GConversationTrashInput._(
      {required this.patientId, required this.conversationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GConversationTrashInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        conversationId, r'GConversationTrashInput', 'conversationId');
  }

  @override
  GConversationTrashInput rebuild(
          void Function(GConversationTrashInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GConversationTrashInputBuilder toBuilder() =>
      new GConversationTrashInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GConversationTrashInput &&
        patientId == other.patientId &&
        conversationId == other.conversationId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, conversationId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GConversationTrashInput')
          ..add('patientId', patientId)
          ..add('conversationId', conversationId))
        .toString();
  }
}

class GConversationTrashInputBuilder
    implements
        Builder<GConversationTrashInput, GConversationTrashInputBuilder> {
  _$GConversationTrashInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _conversationId;
  String? get conversationId => _$this._conversationId;
  set conversationId(String? conversationId) =>
      _$this._conversationId = conversationId;

  GConversationTrashInputBuilder();

  GConversationTrashInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _conversationId = $v.conversationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GConversationTrashInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GConversationTrashInput;
  }

  @override
  void update(void Function(GConversationTrashInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GConversationTrashInput build() => _build();

  _$GConversationTrashInput _build() {
    final _$result = _$v ??
        new _$GConversationTrashInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GConversationTrashInput', 'patientId'),
            conversationId: BuiltValueNullFieldError.checkNotNull(
                conversationId, r'GConversationTrashInput', 'conversationId'));
    replace(_$result);
    return _$result;
  }
}

class _$GAcknowledgeInput extends GAcknowledgeInput {
  @override
  final String patientId;
  @override
  final String conversationId;

  factory _$GAcknowledgeInput(
          [void Function(GAcknowledgeInputBuilder)? updates]) =>
      (new GAcknowledgeInputBuilder()..update(updates))._build();

  _$GAcknowledgeInput._({required this.patientId, required this.conversationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GAcknowledgeInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        conversationId, r'GAcknowledgeInput', 'conversationId');
  }

  @override
  GAcknowledgeInput rebuild(void Function(GAcknowledgeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAcknowledgeInputBuilder toBuilder() =>
      new GAcknowledgeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAcknowledgeInput &&
        patientId == other.patientId &&
        conversationId == other.conversationId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, conversationId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAcknowledgeInput')
          ..add('patientId', patientId)
          ..add('conversationId', conversationId))
        .toString();
  }
}

class GAcknowledgeInputBuilder
    implements Builder<GAcknowledgeInput, GAcknowledgeInputBuilder> {
  _$GAcknowledgeInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _conversationId;
  String? get conversationId => _$this._conversationId;
  set conversationId(String? conversationId) =>
      _$this._conversationId = conversationId;

  GAcknowledgeInputBuilder();

  GAcknowledgeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _conversationId = $v.conversationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAcknowledgeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAcknowledgeInput;
  }

  @override
  void update(void Function(GAcknowledgeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAcknowledgeInput build() => _build();

  _$GAcknowledgeInput _build() {
    final _$result = _$v ??
        new _$GAcknowledgeInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GAcknowledgeInput', 'patientId'),
            conversationId: BuiltValueNullFieldError.checkNotNull(
                conversationId, r'GAcknowledgeInput', 'conversationId'));
    replace(_$result);
    return _$result;
  }
}

class _$GCreateContactWithControlInput extends GCreateContactWithControlInput {
  @override
  final String patientId;
  @override
  final String email;
  @override
  final String fullName;
  @override
  final String idFineg;

  factory _$GCreateContactWithControlInput(
          [void Function(GCreateContactWithControlInputBuilder)? updates]) =>
      (new GCreateContactWithControlInputBuilder()..update(updates))._build();

  _$GCreateContactWithControlInput._(
      {required this.patientId,
      required this.email,
      required this.fullName,
      required this.idFineg})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GCreateContactWithControlInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        email, r'GCreateContactWithControlInput', 'email');
    BuiltValueNullFieldError.checkNotNull(
        fullName, r'GCreateContactWithControlInput', 'fullName');
    BuiltValueNullFieldError.checkNotNull(
        idFineg, r'GCreateContactWithControlInput', 'idFineg');
  }

  @override
  GCreateContactWithControlInput rebuild(
          void Function(GCreateContactWithControlInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCreateContactWithControlInputBuilder toBuilder() =>
      new GCreateContactWithControlInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCreateContactWithControlInput &&
        patientId == other.patientId &&
        email == other.email &&
        fullName == other.fullName &&
        idFineg == other.idFineg;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, email.hashCode);
    _$hash = $jc(_$hash, fullName.hashCode);
    _$hash = $jc(_$hash, idFineg.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCreateContactWithControlInput')
          ..add('patientId', patientId)
          ..add('email', email)
          ..add('fullName', fullName)
          ..add('idFineg', idFineg))
        .toString();
  }
}

class GCreateContactWithControlInputBuilder
    implements
        Builder<GCreateContactWithControlInput,
            GCreateContactWithControlInputBuilder> {
  _$GCreateContactWithControlInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _email;
  String? get email => _$this._email;
  set email(String? email) => _$this._email = email;

  String? _fullName;
  String? get fullName => _$this._fullName;
  set fullName(String? fullName) => _$this._fullName = fullName;

  String? _idFineg;
  String? get idFineg => _$this._idFineg;
  set idFineg(String? idFineg) => _$this._idFineg = idFineg;

  GCreateContactWithControlInputBuilder();

  GCreateContactWithControlInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _email = $v.email;
      _fullName = $v.fullName;
      _idFineg = $v.idFineg;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCreateContactWithControlInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCreateContactWithControlInput;
  }

  @override
  void update(void Function(GCreateContactWithControlInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCreateContactWithControlInput build() => _build();

  _$GCreateContactWithControlInput _build() {
    final _$result = _$v ??
        new _$GCreateContactWithControlInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GCreateContactWithControlInput', 'patientId'),
            email: BuiltValueNullFieldError.checkNotNull(
                email, r'GCreateContactWithControlInput', 'email'),
            fullName: BuiltValueNullFieldError.checkNotNull(
                fullName, r'GCreateContactWithControlInput', 'fullName'),
            idFineg: BuiltValueNullFieldError.checkNotNull(
                idFineg, r'GCreateContactWithControlInput', 'idFineg'));
    replace(_$result);
    return _$result;
  }
}

class _$GTicketToCreateInput extends GTicketToCreateInput {
  @override
  final String patientId;
  @override
  final String reason;
  @override
  final String message;
  @override
  final bool hasConsent;
  @override
  final String? idDocument;
  @override
  final BuiltList<GTicketDocumentInput>? documents;

  factory _$GTicketToCreateInput(
          [void Function(GTicketToCreateInputBuilder)? updates]) =>
      (new GTicketToCreateInputBuilder()..update(updates))._build();

  _$GTicketToCreateInput._(
      {required this.patientId,
      required this.reason,
      required this.message,
      required this.hasConsent,
      this.idDocument,
      this.documents})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GTicketToCreateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        reason, r'GTicketToCreateInput', 'reason');
    BuiltValueNullFieldError.checkNotNull(
        message, r'GTicketToCreateInput', 'message');
    BuiltValueNullFieldError.checkNotNull(
        hasConsent, r'GTicketToCreateInput', 'hasConsent');
  }

  @override
  GTicketToCreateInput rebuild(
          void Function(GTicketToCreateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTicketToCreateInputBuilder toBuilder() =>
      new GTicketToCreateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTicketToCreateInput &&
        patientId == other.patientId &&
        reason == other.reason &&
        message == other.message &&
        hasConsent == other.hasConsent &&
        idDocument == other.idDocument &&
        documents == other.documents;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, reason.hashCode);
    _$hash = $jc(_$hash, message.hashCode);
    _$hash = $jc(_$hash, hasConsent.hashCode);
    _$hash = $jc(_$hash, idDocument.hashCode);
    _$hash = $jc(_$hash, documents.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTicketToCreateInput')
          ..add('patientId', patientId)
          ..add('reason', reason)
          ..add('message', message)
          ..add('hasConsent', hasConsent)
          ..add('idDocument', idDocument)
          ..add('documents', documents))
        .toString();
  }
}

class GTicketToCreateInputBuilder
    implements Builder<GTicketToCreateInput, GTicketToCreateInputBuilder> {
  _$GTicketToCreateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _reason;
  String? get reason => _$this._reason;
  set reason(String? reason) => _$this._reason = reason;

  String? _message;
  String? get message => _$this._message;
  set message(String? message) => _$this._message = message;

  bool? _hasConsent;
  bool? get hasConsent => _$this._hasConsent;
  set hasConsent(bool? hasConsent) => _$this._hasConsent = hasConsent;

  String? _idDocument;
  String? get idDocument => _$this._idDocument;
  set idDocument(String? idDocument) => _$this._idDocument = idDocument;

  ListBuilder<GTicketDocumentInput>? _documents;
  ListBuilder<GTicketDocumentInput> get documents =>
      _$this._documents ??= new ListBuilder<GTicketDocumentInput>();
  set documents(ListBuilder<GTicketDocumentInput>? documents) =>
      _$this._documents = documents;

  GTicketToCreateInputBuilder();

  GTicketToCreateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _reason = $v.reason;
      _message = $v.message;
      _hasConsent = $v.hasConsent;
      _idDocument = $v.idDocument;
      _documents = $v.documents?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTicketToCreateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTicketToCreateInput;
  }

  @override
  void update(void Function(GTicketToCreateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTicketToCreateInput build() => _build();

  _$GTicketToCreateInput _build() {
    _$GTicketToCreateInput _$result;
    try {
      _$result = _$v ??
          new _$GTicketToCreateInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GTicketToCreateInput', 'patientId'),
              reason: BuiltValueNullFieldError.checkNotNull(
                  reason, r'GTicketToCreateInput', 'reason'),
              message: BuiltValueNullFieldError.checkNotNull(
                  message, r'GTicketToCreateInput', 'message'),
              hasConsent: BuiltValueNullFieldError.checkNotNull(
                  hasConsent, r'GTicketToCreateInput', 'hasConsent'),
              idDocument: idDocument,
              documents: _documents?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'documents';
        _documents?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GTicketToCreateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GTicketDocumentInput extends GTicketDocumentInput {
  @override
  final String name;
  @override
  final String data;
  @override
  final String typeMime;

  factory _$GTicketDocumentInput(
          [void Function(GTicketDocumentInputBuilder)? updates]) =>
      (new GTicketDocumentInputBuilder()..update(updates))._build();

  _$GTicketDocumentInput._(
      {required this.name, required this.data, required this.typeMime})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GTicketDocumentInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        data, r'GTicketDocumentInput', 'data');
    BuiltValueNullFieldError.checkNotNull(
        typeMime, r'GTicketDocumentInput', 'typeMime');
  }

  @override
  GTicketDocumentInput rebuild(
          void Function(GTicketDocumentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTicketDocumentInputBuilder toBuilder() =>
      new GTicketDocumentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTicketDocumentInput &&
        name == other.name &&
        data == other.data &&
        typeMime == other.typeMime;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, data.hashCode);
    _$hash = $jc(_$hash, typeMime.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTicketDocumentInput')
          ..add('name', name)
          ..add('data', data)
          ..add('typeMime', typeMime))
        .toString();
  }
}

class GTicketDocumentInputBuilder
    implements Builder<GTicketDocumentInput, GTicketDocumentInputBuilder> {
  _$GTicketDocumentInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _data;
  String? get data => _$this._data;
  set data(String? data) => _$this._data = data;

  String? _typeMime;
  String? get typeMime => _$this._typeMime;
  set typeMime(String? typeMime) => _$this._typeMime = typeMime;

  GTicketDocumentInputBuilder();

  GTicketDocumentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _data = $v.data;
      _typeMime = $v.typeMime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTicketDocumentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTicketDocumentInput;
  }

  @override
  void update(void Function(GTicketDocumentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTicketDocumentInput build() => _build();

  _$GTicketDocumentInput _build() {
    final _$result = _$v ??
        new _$GTicketDocumentInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GTicketDocumentInput', 'name'),
            data: BuiltValueNullFieldError.checkNotNull(
                data, r'GTicketDocumentInput', 'data'),
            typeMime: BuiltValueNullFieldError.checkNotNull(
                typeMime, r'GTicketDocumentInput', 'typeMime'));
    replace(_$result);
    return _$result;
  }
}

class _$GReportRequestForm extends GReportRequestForm {
  @override
  final String idEns;
  @override
  final GTypeDemande typeDemande;
  @override
  final String idSignale;
  @override
  final String description;
  @override
  final String nom;
  @override
  final bool? hasConsent;
  @override
  final BuiltList<GReportDocumentModel> documents;

  factory _$GReportRequestForm(
          [void Function(GReportRequestFormBuilder)? updates]) =>
      (new GReportRequestFormBuilder()..update(updates))._build();

  _$GReportRequestForm._(
      {required this.idEns,
      required this.typeDemande,
      required this.idSignale,
      required this.description,
      required this.nom,
      this.hasConsent,
      required this.documents})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        idEns, r'GReportRequestForm', 'idEns');
    BuiltValueNullFieldError.checkNotNull(
        typeDemande, r'GReportRequestForm', 'typeDemande');
    BuiltValueNullFieldError.checkNotNull(
        idSignale, r'GReportRequestForm', 'idSignale');
    BuiltValueNullFieldError.checkNotNull(
        description, r'GReportRequestForm', 'description');
    BuiltValueNullFieldError.checkNotNull(nom, r'GReportRequestForm', 'nom');
    BuiltValueNullFieldError.checkNotNull(
        documents, r'GReportRequestForm', 'documents');
  }

  @override
  GReportRequestForm rebuild(
          void Function(GReportRequestFormBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReportRequestFormBuilder toBuilder() =>
      new GReportRequestFormBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReportRequestForm &&
        idEns == other.idEns &&
        typeDemande == other.typeDemande &&
        idSignale == other.idSignale &&
        description == other.description &&
        nom == other.nom &&
        hasConsent == other.hasConsent &&
        documents == other.documents;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, idEns.hashCode);
    _$hash = $jc(_$hash, typeDemande.hashCode);
    _$hash = $jc(_$hash, idSignale.hashCode);
    _$hash = $jc(_$hash, description.hashCode);
    _$hash = $jc(_$hash, nom.hashCode);
    _$hash = $jc(_$hash, hasConsent.hashCode);
    _$hash = $jc(_$hash, documents.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReportRequestForm')
          ..add('idEns', idEns)
          ..add('typeDemande', typeDemande)
          ..add('idSignale', idSignale)
          ..add('description', description)
          ..add('nom', nom)
          ..add('hasConsent', hasConsent)
          ..add('documents', documents))
        .toString();
  }
}

class GReportRequestFormBuilder
    implements Builder<GReportRequestForm, GReportRequestFormBuilder> {
  _$GReportRequestForm? _$v;

  String? _idEns;
  String? get idEns => _$this._idEns;
  set idEns(String? idEns) => _$this._idEns = idEns;

  GTypeDemande? _typeDemande;
  GTypeDemande? get typeDemande => _$this._typeDemande;
  set typeDemande(GTypeDemande? typeDemande) =>
      _$this._typeDemande = typeDemande;

  String? _idSignale;
  String? get idSignale => _$this._idSignale;
  set idSignale(String? idSignale) => _$this._idSignale = idSignale;

  String? _description;
  String? get description => _$this._description;
  set description(String? description) => _$this._description = description;

  String? _nom;
  String? get nom => _$this._nom;
  set nom(String? nom) => _$this._nom = nom;

  bool? _hasConsent;
  bool? get hasConsent => _$this._hasConsent;
  set hasConsent(bool? hasConsent) => _$this._hasConsent = hasConsent;

  ListBuilder<GReportDocumentModel>? _documents;
  ListBuilder<GReportDocumentModel> get documents =>
      _$this._documents ??= new ListBuilder<GReportDocumentModel>();
  set documents(ListBuilder<GReportDocumentModel>? documents) =>
      _$this._documents = documents;

  GReportRequestFormBuilder();

  GReportRequestFormBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _idEns = $v.idEns;
      _typeDemande = $v.typeDemande;
      _idSignale = $v.idSignale;
      _description = $v.description;
      _nom = $v.nom;
      _hasConsent = $v.hasConsent;
      _documents = $v.documents.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReportRequestForm other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReportRequestForm;
  }

  @override
  void update(void Function(GReportRequestFormBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReportRequestForm build() => _build();

  _$GReportRequestForm _build() {
    _$GReportRequestForm _$result;
    try {
      _$result = _$v ??
          new _$GReportRequestForm._(
              idEns: BuiltValueNullFieldError.checkNotNull(
                  idEns, r'GReportRequestForm', 'idEns'),
              typeDemande: BuiltValueNullFieldError.checkNotNull(
                  typeDemande, r'GReportRequestForm', 'typeDemande'),
              idSignale: BuiltValueNullFieldError.checkNotNull(
                  idSignale, r'GReportRequestForm', 'idSignale'),
              description: BuiltValueNullFieldError.checkNotNull(
                  description, r'GReportRequestForm', 'description'),
              nom: BuiltValueNullFieldError.checkNotNull(
                  nom, r'GReportRequestForm', 'nom'),
              hasConsent: hasConsent,
              documents: documents.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'documents';
        documents.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GReportRequestForm', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GReportDocumentModel extends GReportDocumentModel {
  @override
  final String name;
  @override
  final String data;
  @override
  final GDocumentMimeTypeEnum typeMime;

  factory _$GReportDocumentModel(
          [void Function(GReportDocumentModelBuilder)? updates]) =>
      (new GReportDocumentModelBuilder()..update(updates))._build();

  _$GReportDocumentModel._(
      {required this.name, required this.data, required this.typeMime})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GReportDocumentModel', 'name');
    BuiltValueNullFieldError.checkNotNull(
        data, r'GReportDocumentModel', 'data');
    BuiltValueNullFieldError.checkNotNull(
        typeMime, r'GReportDocumentModel', 'typeMime');
  }

  @override
  GReportDocumentModel rebuild(
          void Function(GReportDocumentModelBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GReportDocumentModelBuilder toBuilder() =>
      new GReportDocumentModelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GReportDocumentModel &&
        name == other.name &&
        data == other.data &&
        typeMime == other.typeMime;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, data.hashCode);
    _$hash = $jc(_$hash, typeMime.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GReportDocumentModel')
          ..add('name', name)
          ..add('data', data)
          ..add('typeMime', typeMime))
        .toString();
  }
}

class GReportDocumentModelBuilder
    implements Builder<GReportDocumentModel, GReportDocumentModelBuilder> {
  _$GReportDocumentModel? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _data;
  String? get data => _$this._data;
  set data(String? data) => _$this._data = data;

  GDocumentMimeTypeEnum? _typeMime;
  GDocumentMimeTypeEnum? get typeMime => _$this._typeMime;
  set typeMime(GDocumentMimeTypeEnum? typeMime) => _$this._typeMime = typeMime;

  GReportDocumentModelBuilder();

  GReportDocumentModelBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _data = $v.data;
      _typeMime = $v.typeMime;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GReportDocumentModel other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GReportDocumentModel;
  }

  @override
  void update(void Function(GReportDocumentModelBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GReportDocumentModel build() => _build();

  _$GReportDocumentModel _build() {
    final _$result = _$v ??
        new _$GReportDocumentModel._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GReportDocumentModel', 'name'),
            data: BuiltValueNullFieldError.checkNotNull(
                data, r'GReportDocumentModel', 'data'),
            typeMime: BuiltValueNullFieldError.checkNotNull(
                typeMime, r'GReportDocumentModel', 'typeMime'));
    replace(_$result);
    return _$result;
  }
}

class _$GLifestyleItemInput extends GLifestyleItemInput {
  @override
  final String name;
  @override
  final GLifestyleItemDetailInput details;

  factory _$GLifestyleItemInput(
          [void Function(GLifestyleItemInputBuilder)? updates]) =>
      (new GLifestyleItemInputBuilder()..update(updates))._build();

  _$GLifestyleItemInput._({required this.name, required this.details})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(name, r'GLifestyleItemInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        details, r'GLifestyleItemInput', 'details');
  }

  @override
  GLifestyleItemInput rebuild(
          void Function(GLifestyleItemInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLifestyleItemInputBuilder toBuilder() =>
      new GLifestyleItemInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLifestyleItemInput &&
        name == other.name &&
        details == other.details;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, details.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLifestyleItemInput')
          ..add('name', name)
          ..add('details', details))
        .toString();
  }
}

class GLifestyleItemInputBuilder
    implements Builder<GLifestyleItemInput, GLifestyleItemInputBuilder> {
  _$GLifestyleItemInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GLifestyleItemDetailInputBuilder? _details;
  GLifestyleItemDetailInputBuilder get details =>
      _$this._details ??= new GLifestyleItemDetailInputBuilder();
  set details(GLifestyleItemDetailInputBuilder? details) =>
      _$this._details = details;

  GLifestyleItemInputBuilder();

  GLifestyleItemInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _details = $v.details.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLifestyleItemInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLifestyleItemInput;
  }

  @override
  void update(void Function(GLifestyleItemInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLifestyleItemInput build() => _build();

  _$GLifestyleItemInput _build() {
    _$GLifestyleItemInput _$result;
    try {
      _$result = _$v ??
          new _$GLifestyleItemInput._(
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GLifestyleItemInput', 'name'),
              details: details.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'details';
        details.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GLifestyleItemInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GLifestyleItemDetailInput extends GLifestyleItemDetailInput {
  @override
  final String lastModificationDate;
  @override
  final BuiltList<GLifestyleAnswerInput> answers;

  factory _$GLifestyleItemDetailInput(
          [void Function(GLifestyleItemDetailInputBuilder)? updates]) =>
      (new GLifestyleItemDetailInputBuilder()..update(updates))._build();

  _$GLifestyleItemDetailInput._(
      {required this.lastModificationDate, required this.answers})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(lastModificationDate,
        r'GLifestyleItemDetailInput', 'lastModificationDate');
    BuiltValueNullFieldError.checkNotNull(
        answers, r'GLifestyleItemDetailInput', 'answers');
  }

  @override
  GLifestyleItemDetailInput rebuild(
          void Function(GLifestyleItemDetailInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLifestyleItemDetailInputBuilder toBuilder() =>
      new GLifestyleItemDetailInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLifestyleItemDetailInput &&
        lastModificationDate == other.lastModificationDate &&
        answers == other.answers;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, lastModificationDate.hashCode);
    _$hash = $jc(_$hash, answers.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLifestyleItemDetailInput')
          ..add('lastModificationDate', lastModificationDate)
          ..add('answers', answers))
        .toString();
  }
}

class GLifestyleItemDetailInputBuilder
    implements
        Builder<GLifestyleItemDetailInput, GLifestyleItemDetailInputBuilder> {
  _$GLifestyleItemDetailInput? _$v;

  String? _lastModificationDate;
  String? get lastModificationDate => _$this._lastModificationDate;
  set lastModificationDate(String? lastModificationDate) =>
      _$this._lastModificationDate = lastModificationDate;

  ListBuilder<GLifestyleAnswerInput>? _answers;
  ListBuilder<GLifestyleAnswerInput> get answers =>
      _$this._answers ??= new ListBuilder<GLifestyleAnswerInput>();
  set answers(ListBuilder<GLifestyleAnswerInput>? answers) =>
      _$this._answers = answers;

  GLifestyleItemDetailInputBuilder();

  GLifestyleItemDetailInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _lastModificationDate = $v.lastModificationDate;
      _answers = $v.answers.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLifestyleItemDetailInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLifestyleItemDetailInput;
  }

  @override
  void update(void Function(GLifestyleItemDetailInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLifestyleItemDetailInput build() => _build();

  _$GLifestyleItemDetailInput _build() {
    _$GLifestyleItemDetailInput _$result;
    try {
      _$result = _$v ??
          new _$GLifestyleItemDetailInput._(
              lastModificationDate: BuiltValueNullFieldError.checkNotNull(
                  lastModificationDate,
                  r'GLifestyleItemDetailInput',
                  'lastModificationDate'),
              answers: answers.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'answers';
        answers.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GLifestyleItemDetailInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GLifestyleAnswerInput extends GLifestyleAnswerInput {
  @override
  final String name;
  @override
  final String? value;
  @override
  final String? countValue;

  factory _$GLifestyleAnswerInput(
          [void Function(GLifestyleAnswerInputBuilder)? updates]) =>
      (new GLifestyleAnswerInputBuilder()..update(updates))._build();

  _$GLifestyleAnswerInput._({required this.name, this.value, this.countValue})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        name, r'GLifestyleAnswerInput', 'name');
  }

  @override
  GLifestyleAnswerInput rebuild(
          void Function(GLifestyleAnswerInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLifestyleAnswerInputBuilder toBuilder() =>
      new GLifestyleAnswerInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLifestyleAnswerInput &&
        name == other.name &&
        value == other.value &&
        countValue == other.countValue;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jc(_$hash, countValue.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLifestyleAnswerInput')
          ..add('name', name)
          ..add('value', value)
          ..add('countValue', countValue))
        .toString();
  }
}

class GLifestyleAnswerInputBuilder
    implements Builder<GLifestyleAnswerInput, GLifestyleAnswerInputBuilder> {
  _$GLifestyleAnswerInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  String? _countValue;
  String? get countValue => _$this._countValue;
  set countValue(String? countValue) => _$this._countValue = countValue;

  GLifestyleAnswerInputBuilder();

  GLifestyleAnswerInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _value = $v.value;
      _countValue = $v.countValue;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLifestyleAnswerInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLifestyleAnswerInput;
  }

  @override
  void update(void Function(GLifestyleAnswerInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLifestyleAnswerInput build() => _build();

  _$GLifestyleAnswerInput _build() {
    final _$result = _$v ??
        new _$GLifestyleAnswerInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GLifestyleAnswerInput', 'name'),
            value: value,
            countValue: countValue);
    replace(_$result);
    return _$result;
  }
}

class _$GLifestyleItemUpdateInput extends GLifestyleItemUpdateInput {
  @override
  final String id;
  @override
  final String name;
  @override
  final GLifestyleItemDetailInput details;

  factory _$GLifestyleItemUpdateInput(
          [void Function(GLifestyleItemUpdateInputBuilder)? updates]) =>
      (new GLifestyleItemUpdateInputBuilder()..update(updates))._build();

  _$GLifestyleItemUpdateInput._(
      {required this.id, required this.name, required this.details})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        id, r'GLifestyleItemUpdateInput', 'id');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GLifestyleItemUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        details, r'GLifestyleItemUpdateInput', 'details');
  }

  @override
  GLifestyleItemUpdateInput rebuild(
          void Function(GLifestyleItemUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLifestyleItemUpdateInputBuilder toBuilder() =>
      new GLifestyleItemUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLifestyleItemUpdateInput &&
        id == other.id &&
        name == other.name &&
        details == other.details;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, details.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLifestyleItemUpdateInput')
          ..add('id', id)
          ..add('name', name)
          ..add('details', details))
        .toString();
  }
}

class GLifestyleItemUpdateInputBuilder
    implements
        Builder<GLifestyleItemUpdateInput, GLifestyleItemUpdateInputBuilder> {
  _$GLifestyleItemUpdateInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  GLifestyleItemDetailInputBuilder? _details;
  GLifestyleItemDetailInputBuilder get details =>
      _$this._details ??= new GLifestyleItemDetailInputBuilder();
  set details(GLifestyleItemDetailInputBuilder? details) =>
      _$this._details = details;

  GLifestyleItemUpdateInputBuilder();

  GLifestyleItemUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _name = $v.name;
      _details = $v.details.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLifestyleItemUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLifestyleItemUpdateInput;
  }

  @override
  void update(void Function(GLifestyleItemUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLifestyleItemUpdateInput build() => _build();

  _$GLifestyleItemUpdateInput _build() {
    _$GLifestyleItemUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GLifestyleItemUpdateInput._(
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GLifestyleItemUpdateInput', 'id'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GLifestyleItemUpdateInput', 'name'),
              details: details.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'details';
        details.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GLifestyleItemUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GHospitalizationUpdateInput extends GHospitalizationUpdateInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final String? startDay;
  @override
  final String? startMonth;
  @override
  final String startYear;
  @override
  final double duration;
  @override
  final GDurationUnitEnum durationUnit;
  @override
  final BuiltList<String>? linkedDocumentsId;
  @override
  final String id;

  factory _$GHospitalizationUpdateInput(
          [void Function(GHospitalizationUpdateInputBuilder)? updates]) =>
      (new GHospitalizationUpdateInputBuilder()..update(updates))._build();

  _$GHospitalizationUpdateInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      this.startDay,
      this.startMonth,
      required this.startYear,
      required this.duration,
      required this.durationUnit,
      this.linkedDocumentsId,
      required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GHospitalizationUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GHospitalizationUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        startYear, r'GHospitalizationUpdateInput', 'startYear');
    BuiltValueNullFieldError.checkNotNull(
        duration, r'GHospitalizationUpdateInput', 'duration');
    BuiltValueNullFieldError.checkNotNull(
        durationUnit, r'GHospitalizationUpdateInput', 'durationUnit');
    BuiltValueNullFieldError.checkNotNull(
        id, r'GHospitalizationUpdateInput', 'id');
  }

  @override
  GHospitalizationUpdateInput rebuild(
          void Function(GHospitalizationUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHospitalizationUpdateInputBuilder toBuilder() =>
      new GHospitalizationUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHospitalizationUpdateInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        startDay == other.startDay &&
        startMonth == other.startMonth &&
        startYear == other.startYear &&
        duration == other.duration &&
        durationUnit == other.durationUnit &&
        linkedDocumentsId == other.linkedDocumentsId &&
        id == other.id;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, startDay.hashCode);
    _$hash = $jc(_$hash, startMonth.hashCode);
    _$hash = $jc(_$hash, startYear.hashCode);
    _$hash = $jc(_$hash, duration.hashCode);
    _$hash = $jc(_$hash, durationUnit.hashCode);
    _$hash = $jc(_$hash, linkedDocumentsId.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHospitalizationUpdateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('startDay', startDay)
          ..add('startMonth', startMonth)
          ..add('startYear', startYear)
          ..add('duration', duration)
          ..add('durationUnit', durationUnit)
          ..add('linkedDocumentsId', linkedDocumentsId)
          ..add('id', id))
        .toString();
  }
}

class GHospitalizationUpdateInputBuilder
    implements
        Builder<GHospitalizationUpdateInput,
            GHospitalizationUpdateInputBuilder> {
  _$GHospitalizationUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _startDay;
  String? get startDay => _$this._startDay;
  set startDay(String? startDay) => _$this._startDay = startDay;

  String? _startMonth;
  String? get startMonth => _$this._startMonth;
  set startMonth(String? startMonth) => _$this._startMonth = startMonth;

  String? _startYear;
  String? get startYear => _$this._startYear;
  set startYear(String? startYear) => _$this._startYear = startYear;

  double? _duration;
  double? get duration => _$this._duration;
  set duration(double? duration) => _$this._duration = duration;

  GDurationUnitEnum? _durationUnit;
  GDurationUnitEnum? get durationUnit => _$this._durationUnit;
  set durationUnit(GDurationUnitEnum? durationUnit) =>
      _$this._durationUnit = durationUnit;

  ListBuilder<String>? _linkedDocumentsId;
  ListBuilder<String> get linkedDocumentsId =>
      _$this._linkedDocumentsId ??= new ListBuilder<String>();
  set linkedDocumentsId(ListBuilder<String>? linkedDocumentsId) =>
      _$this._linkedDocumentsId = linkedDocumentsId;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GHospitalizationUpdateInputBuilder();

  GHospitalizationUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _startDay = $v.startDay;
      _startMonth = $v.startMonth;
      _startYear = $v.startYear;
      _duration = $v.duration;
      _durationUnit = $v.durationUnit;
      _linkedDocumentsId = $v.linkedDocumentsId?.toBuilder();
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHospitalizationUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHospitalizationUpdateInput;
  }

  @override
  void update(void Function(GHospitalizationUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHospitalizationUpdateInput build() => _build();

  _$GHospitalizationUpdateInput _build() {
    _$GHospitalizationUpdateInput _$result;
    try {
      _$result = _$v ??
          new _$GHospitalizationUpdateInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GHospitalizationUpdateInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GHospitalizationUpdateInput', 'name'),
              comment: comment,
              startDay: startDay,
              startMonth: startMonth,
              startYear: BuiltValueNullFieldError.checkNotNull(
                  startYear, r'GHospitalizationUpdateInput', 'startYear'),
              duration: BuiltValueNullFieldError.checkNotNull(
                  duration, r'GHospitalizationUpdateInput', 'duration'),
              durationUnit: BuiltValueNullFieldError.checkNotNull(
                  durationUnit, r'GHospitalizationUpdateInput', 'durationUnit'),
              linkedDocumentsId: _linkedDocumentsId?.build(),
              id: BuiltValueNullFieldError.checkNotNull(
                  id, r'GHospitalizationUpdateInput', 'id'));
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'linkedDocumentsId';
        _linkedDocumentsId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHospitalizationUpdateInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GHospitalizationInput extends GHospitalizationInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final String? startDay;
  @override
  final String? startMonth;
  @override
  final String startYear;
  @override
  final double duration;
  @override
  final GDurationUnitEnum durationUnit;
  @override
  final BuiltList<String>? linkedDocumentsId;

  factory _$GHospitalizationInput(
          [void Function(GHospitalizationInputBuilder)? updates]) =>
      (new GHospitalizationInputBuilder()..update(updates))._build();

  _$GHospitalizationInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      this.startDay,
      this.startMonth,
      required this.startYear,
      required this.duration,
      required this.durationUnit,
      this.linkedDocumentsId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GHospitalizationInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GHospitalizationInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        startYear, r'GHospitalizationInput', 'startYear');
    BuiltValueNullFieldError.checkNotNull(
        duration, r'GHospitalizationInput', 'duration');
    BuiltValueNullFieldError.checkNotNull(
        durationUnit, r'GHospitalizationInput', 'durationUnit');
  }

  @override
  GHospitalizationInput rebuild(
          void Function(GHospitalizationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHospitalizationInputBuilder toBuilder() =>
      new GHospitalizationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHospitalizationInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        startDay == other.startDay &&
        startMonth == other.startMonth &&
        startYear == other.startYear &&
        duration == other.duration &&
        durationUnit == other.durationUnit &&
        linkedDocumentsId == other.linkedDocumentsId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, startDay.hashCode);
    _$hash = $jc(_$hash, startMonth.hashCode);
    _$hash = $jc(_$hash, startYear.hashCode);
    _$hash = $jc(_$hash, duration.hashCode);
    _$hash = $jc(_$hash, durationUnit.hashCode);
    _$hash = $jc(_$hash, linkedDocumentsId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHospitalizationInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('startDay', startDay)
          ..add('startMonth', startMonth)
          ..add('startYear', startYear)
          ..add('duration', duration)
          ..add('durationUnit', durationUnit)
          ..add('linkedDocumentsId', linkedDocumentsId))
        .toString();
  }
}

class GHospitalizationInputBuilder
    implements Builder<GHospitalizationInput, GHospitalizationInputBuilder> {
  _$GHospitalizationInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _startDay;
  String? get startDay => _$this._startDay;
  set startDay(String? startDay) => _$this._startDay = startDay;

  String? _startMonth;
  String? get startMonth => _$this._startMonth;
  set startMonth(String? startMonth) => _$this._startMonth = startMonth;

  String? _startYear;
  String? get startYear => _$this._startYear;
  set startYear(String? startYear) => _$this._startYear = startYear;

  double? _duration;
  double? get duration => _$this._duration;
  set duration(double? duration) => _$this._duration = duration;

  GDurationUnitEnum? _durationUnit;
  GDurationUnitEnum? get durationUnit => _$this._durationUnit;
  set durationUnit(GDurationUnitEnum? durationUnit) =>
      _$this._durationUnit = durationUnit;

  ListBuilder<String>? _linkedDocumentsId;
  ListBuilder<String> get linkedDocumentsId =>
      _$this._linkedDocumentsId ??= new ListBuilder<String>();
  set linkedDocumentsId(ListBuilder<String>? linkedDocumentsId) =>
      _$this._linkedDocumentsId = linkedDocumentsId;

  GHospitalizationInputBuilder();

  GHospitalizationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _startDay = $v.startDay;
      _startMonth = $v.startMonth;
      _startYear = $v.startYear;
      _duration = $v.duration;
      _durationUnit = $v.durationUnit;
      _linkedDocumentsId = $v.linkedDocumentsId?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHospitalizationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHospitalizationInput;
  }

  @override
  void update(void Function(GHospitalizationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHospitalizationInput build() => _build();

  _$GHospitalizationInput _build() {
    _$GHospitalizationInput _$result;
    try {
      _$result = _$v ??
          new _$GHospitalizationInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GHospitalizationInput', 'patientId'),
              name: BuiltValueNullFieldError.checkNotNull(
                  name, r'GHospitalizationInput', 'name'),
              comment: comment,
              startDay: startDay,
              startMonth: startMonth,
              startYear: BuiltValueNullFieldError.checkNotNull(
                  startYear, r'GHospitalizationInput', 'startYear'),
              duration: BuiltValueNullFieldError.checkNotNull(
                  duration, r'GHospitalizationInput', 'duration'),
              durationUnit: BuiltValueNullFieldError.checkNotNull(
                  durationUnit, r'GHospitalizationInput', 'durationUnit'),
              linkedDocumentsId: _linkedDocumentsId?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'linkedDocumentsId';
        _linkedDocumentsId?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHospitalizationInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GLinkedDocumentInput extends GLinkedDocumentInput {
  @override
  final String linkId;
  @override
  final String documentId;

  factory _$GLinkedDocumentInput(
          [void Function(GLinkedDocumentInputBuilder)? updates]) =>
      (new GLinkedDocumentInputBuilder()..update(updates))._build();

  _$GLinkedDocumentInput._({required this.linkId, required this.documentId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        linkId, r'GLinkedDocumentInput', 'linkId');
    BuiltValueNullFieldError.checkNotNull(
        documentId, r'GLinkedDocumentInput', 'documentId');
  }

  @override
  GLinkedDocumentInput rebuild(
          void Function(GLinkedDocumentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLinkedDocumentInputBuilder toBuilder() =>
      new GLinkedDocumentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLinkedDocumentInput &&
        linkId == other.linkId &&
        documentId == other.documentId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, linkId.hashCode);
    _$hash = $jc(_$hash, documentId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLinkedDocumentInput')
          ..add('linkId', linkId)
          ..add('documentId', documentId))
        .toString();
  }
}

class GLinkedDocumentInputBuilder
    implements Builder<GLinkedDocumentInput, GLinkedDocumentInputBuilder> {
  _$GLinkedDocumentInput? _$v;

  String? _linkId;
  String? get linkId => _$this._linkId;
  set linkId(String? linkId) => _$this._linkId = linkId;

  String? _documentId;
  String? get documentId => _$this._documentId;
  set documentId(String? documentId) => _$this._documentId = documentId;

  GLinkedDocumentInputBuilder();

  GLinkedDocumentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _linkId = $v.linkId;
      _documentId = $v.documentId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLinkedDocumentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLinkedDocumentInput;
  }

  @override
  void update(void Function(GLinkedDocumentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLinkedDocumentInput build() => _build();

  _$GLinkedDocumentInput _build() {
    final _$result = _$v ??
        new _$GLinkedDocumentInput._(
            linkId: BuiltValueNullFieldError.checkNotNull(
                linkId, r'GLinkedDocumentInput', 'linkId'),
            documentId: BuiltValueNullFieldError.checkNotNull(
                documentId, r'GLinkedDocumentInput', 'documentId'));
    replace(_$result);
    return _$result;
  }
}

class _$GLinkedTreatmentInput extends GLinkedTreatmentInput {
  @override
  final String linkId;
  @override
  final String treatmentId;

  factory _$GLinkedTreatmentInput(
          [void Function(GLinkedTreatmentInputBuilder)? updates]) =>
      (new GLinkedTreatmentInputBuilder()..update(updates))._build();

  _$GLinkedTreatmentInput._({required this.linkId, required this.treatmentId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        linkId, r'GLinkedTreatmentInput', 'linkId');
    BuiltValueNullFieldError.checkNotNull(
        treatmentId, r'GLinkedTreatmentInput', 'treatmentId');
  }

  @override
  GLinkedTreatmentInput rebuild(
          void Function(GLinkedTreatmentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLinkedTreatmentInputBuilder toBuilder() =>
      new GLinkedTreatmentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLinkedTreatmentInput &&
        linkId == other.linkId &&
        treatmentId == other.treatmentId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, linkId.hashCode);
    _$hash = $jc(_$hash, treatmentId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLinkedTreatmentInput')
          ..add('linkId', linkId)
          ..add('treatmentId', treatmentId))
        .toString();
  }
}

class GLinkedTreatmentInputBuilder
    implements Builder<GLinkedTreatmentInput, GLinkedTreatmentInputBuilder> {
  _$GLinkedTreatmentInput? _$v;

  String? _linkId;
  String? get linkId => _$this._linkId;
  set linkId(String? linkId) => _$this._linkId = linkId;

  String? _treatmentId;
  String? get treatmentId => _$this._treatmentId;
  set treatmentId(String? treatmentId) => _$this._treatmentId = treatmentId;

  GLinkedTreatmentInputBuilder();

  GLinkedTreatmentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _linkId = $v.linkId;
      _treatmentId = $v.treatmentId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLinkedTreatmentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLinkedTreatmentInput;
  }

  @override
  void update(void Function(GLinkedTreatmentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLinkedTreatmentInput build() => _build();

  _$GLinkedTreatmentInput _build() {
    final _$result = _$v ??
        new _$GLinkedTreatmentInput._(
            linkId: BuiltValueNullFieldError.checkNotNull(
                linkId, r'GLinkedTreatmentInput', 'linkId'),
            treatmentId: BuiltValueNullFieldError.checkNotNull(
                treatmentId, r'GLinkedTreatmentInput', 'treatmentId'));
    replace(_$result);
    return _$result;
  }
}

class _$GMeasureInput extends GMeasureInput {
  @override
  final String? id;
  @override
  final String patientId;
  @override
  final GMeasureCode code;
  @override
  final String? effectiveDate;
  @override
  final BuiltList<GMetricInput> metrics;
  @override
  final BuiltList<GCommentInput>? comments;

  factory _$GMeasureInput([void Function(GMeasureInputBuilder)? updates]) =>
      (new GMeasureInputBuilder()..update(updates))._build();

  _$GMeasureInput._(
      {this.id,
      required this.patientId,
      required this.code,
      this.effectiveDate,
      required this.metrics,
      this.comments})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GMeasureInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(code, r'GMeasureInput', 'code');
    BuiltValueNullFieldError.checkNotNull(metrics, r'GMeasureInput', 'metrics');
  }

  @override
  GMeasureInput rebuild(void Function(GMeasureInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMeasureInputBuilder toBuilder() => new GMeasureInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMeasureInput &&
        id == other.id &&
        patientId == other.patientId &&
        code == other.code &&
        effectiveDate == other.effectiveDate &&
        metrics == other.metrics &&
        comments == other.comments;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, effectiveDate.hashCode);
    _$hash = $jc(_$hash, metrics.hashCode);
    _$hash = $jc(_$hash, comments.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMeasureInput')
          ..add('id', id)
          ..add('patientId', patientId)
          ..add('code', code)
          ..add('effectiveDate', effectiveDate)
          ..add('metrics', metrics)
          ..add('comments', comments))
        .toString();
  }
}

class GMeasureInputBuilder
    implements Builder<GMeasureInput, GMeasureInputBuilder> {
  _$GMeasureInput? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GMeasureCode? _code;
  GMeasureCode? get code => _$this._code;
  set code(GMeasureCode? code) => _$this._code = code;

  String? _effectiveDate;
  String? get effectiveDate => _$this._effectiveDate;
  set effectiveDate(String? effectiveDate) =>
      _$this._effectiveDate = effectiveDate;

  ListBuilder<GMetricInput>? _metrics;
  ListBuilder<GMetricInput> get metrics =>
      _$this._metrics ??= new ListBuilder<GMetricInput>();
  set metrics(ListBuilder<GMetricInput>? metrics) => _$this._metrics = metrics;

  ListBuilder<GCommentInput>? _comments;
  ListBuilder<GCommentInput> get comments =>
      _$this._comments ??= new ListBuilder<GCommentInput>();
  set comments(ListBuilder<GCommentInput>? comments) =>
      _$this._comments = comments;

  GMeasureInputBuilder();

  GMeasureInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _patientId = $v.patientId;
      _code = $v.code;
      _effectiveDate = $v.effectiveDate;
      _metrics = $v.metrics.toBuilder();
      _comments = $v.comments?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMeasureInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMeasureInput;
  }

  @override
  void update(void Function(GMeasureInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMeasureInput build() => _build();

  _$GMeasureInput _build() {
    _$GMeasureInput _$result;
    try {
      _$result = _$v ??
          new _$GMeasureInput._(
              id: id,
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GMeasureInput', 'patientId'),
              code: BuiltValueNullFieldError.checkNotNull(
                  code, r'GMeasureInput', 'code'),
              effectiveDate: effectiveDate,
              metrics: metrics.build(),
              comments: _comments?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'metrics';
        metrics.build();
        _$failedField = 'comments';
        _comments?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GMeasureInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GMetricInput extends GMetricInput {
  @override
  final GMeasureCode code;
  @override
  final String value;
  @override
  final String unit;

  factory _$GMetricInput([void Function(GMetricInputBuilder)? updates]) =>
      (new GMetricInputBuilder()..update(updates))._build();

  _$GMetricInput._(
      {required this.code, required this.value, required this.unit})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(code, r'GMetricInput', 'code');
    BuiltValueNullFieldError.checkNotNull(value, r'GMetricInput', 'value');
    BuiltValueNullFieldError.checkNotNull(unit, r'GMetricInput', 'unit');
  }

  @override
  GMetricInput rebuild(void Function(GMetricInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMetricInputBuilder toBuilder() => new GMetricInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMetricInput &&
        code == other.code &&
        value == other.value &&
        unit == other.unit;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jc(_$hash, unit.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMetricInput')
          ..add('code', code)
          ..add('value', value)
          ..add('unit', unit))
        .toString();
  }
}

class GMetricInputBuilder
    implements Builder<GMetricInput, GMetricInputBuilder> {
  _$GMetricInput? _$v;

  GMeasureCode? _code;
  GMeasureCode? get code => _$this._code;
  set code(GMeasureCode? code) => _$this._code = code;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  String? _unit;
  String? get unit => _$this._unit;
  set unit(String? unit) => _$this._unit = unit;

  GMetricInputBuilder();

  GMetricInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _code = $v.code;
      _value = $v.value;
      _unit = $v.unit;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMetricInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMetricInput;
  }

  @override
  void update(void Function(GMetricInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMetricInput build() => _build();

  _$GMetricInput _build() {
    final _$result = _$v ??
        new _$GMetricInput._(
            code: BuiltValueNullFieldError.checkNotNull(
                code, r'GMetricInput', 'code'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GMetricInput', 'value'),
            unit: BuiltValueNullFieldError.checkNotNull(
                unit, r'GMetricInput', 'unit'));
    replace(_$result);
    return _$result;
  }
}

class _$GCommentInput extends GCommentInput {
  @override
  final String code;
  @override
  final String value;
  @override
  final String? extra;

  factory _$GCommentInput([void Function(GCommentInputBuilder)? updates]) =>
      (new GCommentInputBuilder()..update(updates))._build();

  _$GCommentInput._({required this.code, required this.value, this.extra})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(code, r'GCommentInput', 'code');
    BuiltValueNullFieldError.checkNotNull(value, r'GCommentInput', 'value');
  }

  @override
  GCommentInput rebuild(void Function(GCommentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCommentInputBuilder toBuilder() => new GCommentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCommentInput &&
        code == other.code &&
        value == other.value &&
        extra == other.extra;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, code.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jc(_$hash, extra.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCommentInput')
          ..add('code', code)
          ..add('value', value)
          ..add('extra', extra))
        .toString();
  }
}

class GCommentInputBuilder
    implements Builder<GCommentInput, GCommentInputBuilder> {
  _$GCommentInput? _$v;

  String? _code;
  String? get code => _$this._code;
  set code(String? code) => _$this._code = code;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  String? _extra;
  String? get extra => _$this._extra;
  set extra(String? extra) => _$this._extra = extra;

  GCommentInputBuilder();

  GCommentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _code = $v.code;
      _value = $v.value;
      _extra = $v.extra;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCommentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCommentInput;
  }

  @override
  void update(void Function(GCommentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCommentInput build() => _build();

  _$GCommentInput _build() {
    final _$result = _$v ??
        new _$GCommentInput._(
            code: BuiltValueNullFieldError.checkNotNull(
                code, r'GCommentInput', 'code'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GCommentInput', 'value'),
            extra: extra);
    replace(_$result);
    return _$result;
  }
}

class _$GDeleteMeasureModel extends GDeleteMeasureModel {
  @override
  final String id;
  @override
  final String patientId;

  factory _$GDeleteMeasureModel(
          [void Function(GDeleteMeasureModelBuilder)? updates]) =>
      (new GDeleteMeasureModelBuilder()..update(updates))._build();

  _$GDeleteMeasureModel._({required this.id, required this.patientId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(id, r'GDeleteMeasureModel', 'id');
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GDeleteMeasureModel', 'patientId');
  }

  @override
  GDeleteMeasureModel rebuild(
          void Function(GDeleteMeasureModelBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDeleteMeasureModelBuilder toBuilder() =>
      new GDeleteMeasureModelBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDeleteMeasureModel &&
        id == other.id &&
        patientId == other.patientId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDeleteMeasureModel')
          ..add('id', id)
          ..add('patientId', patientId))
        .toString();
  }
}

class GDeleteMeasureModelBuilder
    implements Builder<GDeleteMeasureModel, GDeleteMeasureModelBuilder> {
  _$GDeleteMeasureModel? _$v;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GDeleteMeasureModelBuilder();

  GDeleteMeasureModelBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _id = $v.id;
      _patientId = $v.patientId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDeleteMeasureModel other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDeleteMeasureModel;
  }

  @override
  void update(void Function(GDeleteMeasureModelBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDeleteMeasureModel build() => _build();

  _$GDeleteMeasureModel _build() {
    final _$result = _$v ??
        new _$GDeleteMeasureModel._(
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GDeleteMeasureModel', 'id'),
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GDeleteMeasureModel', 'patientId'));
    replace(_$result);
    return _$result;
  }
}

class _$GMeasureTargetInput extends GMeasureTargetInput {
  @override
  final GMeasureCode type;
  @override
  final double value;

  factory _$GMeasureTargetInput(
          [void Function(GMeasureTargetInputBuilder)? updates]) =>
      (new GMeasureTargetInputBuilder()..update(updates))._build();

  _$GMeasureTargetInput._({required this.type, required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(type, r'GMeasureTargetInput', 'type');
    BuiltValueNullFieldError.checkNotNull(
        value, r'GMeasureTargetInput', 'value');
  }

  @override
  GMeasureTargetInput rebuild(
          void Function(GMeasureTargetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMeasureTargetInputBuilder toBuilder() =>
      new GMeasureTargetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMeasureTargetInput &&
        type == other.type &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMeasureTargetInput')
          ..add('type', type)
          ..add('value', value))
        .toString();
  }
}

class GMeasureTargetInputBuilder
    implements Builder<GMeasureTargetInput, GMeasureTargetInputBuilder> {
  _$GMeasureTargetInput? _$v;

  GMeasureCode? _type;
  GMeasureCode? get type => _$this._type;
  set type(GMeasureCode? type) => _$this._type = type;

  double? _value;
  double? get value => _$this._value;
  set value(double? value) => _$this._value = value;

  GMeasureTargetInputBuilder();

  GMeasureTargetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _type = $v.type;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMeasureTargetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMeasureTargetInput;
  }

  @override
  void update(void Function(GMeasureTargetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMeasureTargetInput build() => _build();

  _$GMeasureTargetInput _build() {
    final _$result = _$v ??
        new _$GMeasureTargetInput._(
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GMeasureTargetInput', 'type'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GMeasureTargetInput', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GEditMeasureTargetInput extends GEditMeasureTargetInput {
  @override
  final String targetId;
  @override
  final double value;

  factory _$GEditMeasureTargetInput(
          [void Function(GEditMeasureTargetInputBuilder)? updates]) =>
      (new GEditMeasureTargetInputBuilder()..update(updates))._build();

  _$GEditMeasureTargetInput._({required this.targetId, required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        targetId, r'GEditMeasureTargetInput', 'targetId');
    BuiltValueNullFieldError.checkNotNull(
        value, r'GEditMeasureTargetInput', 'value');
  }

  @override
  GEditMeasureTargetInput rebuild(
          void Function(GEditMeasureTargetInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEditMeasureTargetInputBuilder toBuilder() =>
      new GEditMeasureTargetInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEditMeasureTargetInput &&
        targetId == other.targetId &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, targetId.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEditMeasureTargetInput')
          ..add('targetId', targetId)
          ..add('value', value))
        .toString();
  }
}

class GEditMeasureTargetInputBuilder
    implements
        Builder<GEditMeasureTargetInput, GEditMeasureTargetInputBuilder> {
  _$GEditMeasureTargetInput? _$v;

  String? _targetId;
  String? get targetId => _$this._targetId;
  set targetId(String? targetId) => _$this._targetId = targetId;

  double? _value;
  double? get value => _$this._value;
  set value(double? value) => _$this._value = value;

  GEditMeasureTargetInputBuilder();

  GEditMeasureTargetInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _targetId = $v.targetId;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEditMeasureTargetInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEditMeasureTargetInput;
  }

  @override
  void update(void Function(GEditMeasureTargetInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEditMeasureTargetInput build() => _build();

  _$GEditMeasureTargetInput _build() {
    final _$result = _$v ??
        new _$GEditMeasureTargetInput._(
            targetId: BuiltValueNullFieldError.checkNotNull(
                targetId, r'GEditMeasureTargetInput', 'targetId'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GEditMeasureTargetInput', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GMeasureTileInput extends GMeasureTileInput {
  @override
  final GMeasureCode type;
  @override
  final bool visible;

  factory _$GMeasureTileInput(
          [void Function(GMeasureTileInputBuilder)? updates]) =>
      (new GMeasureTileInputBuilder()..update(updates))._build();

  _$GMeasureTileInput._({required this.type, required this.visible})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(type, r'GMeasureTileInput', 'type');
    BuiltValueNullFieldError.checkNotNull(
        visible, r'GMeasureTileInput', 'visible');
  }

  @override
  GMeasureTileInput rebuild(void Function(GMeasureTileInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GMeasureTileInputBuilder toBuilder() =>
      new GMeasureTileInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GMeasureTileInput &&
        type == other.type &&
        visible == other.visible;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, type.hashCode);
    _$hash = $jc(_$hash, visible.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GMeasureTileInput')
          ..add('type', type)
          ..add('visible', visible))
        .toString();
  }
}

class GMeasureTileInputBuilder
    implements Builder<GMeasureTileInput, GMeasureTileInputBuilder> {
  _$GMeasureTileInput? _$v;

  GMeasureCode? _type;
  GMeasureCode? get type => _$this._type;
  set type(GMeasureCode? type) => _$this._type = type;

  bool? _visible;
  bool? get visible => _$this._visible;
  set visible(bool? visible) => _$this._visible = visible;

  GMeasureTileInputBuilder();

  GMeasureTileInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _type = $v.type;
      _visible = $v.visible;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GMeasureTileInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GMeasureTileInput;
  }

  @override
  void update(void Function(GMeasureTileInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GMeasureTileInput build() => _build();

  _$GMeasureTileInput _build() {
    final _$result = _$v ??
        new _$GMeasureTileInput._(
            type: BuiltValueNullFieldError.checkNotNull(
                type, r'GMeasureTileInput', 'type'),
            visible: BuiltValueNullFieldError.checkNotNull(
                visible, r'GMeasureTileInput', 'visible'));
    replace(_$result);
    return _$result;
  }
}

class _$GAdvanceDirectiveInput extends GAdvanceDirectiveInput {
  @override
  final String patientId;
  @override
  final String filename;
  @override
  final String attachment;
  @override
  final String mimeType;
  @override
  final BuiltList<GConfidentiality>? confidentialities;

  factory _$GAdvanceDirectiveInput(
          [void Function(GAdvanceDirectiveInputBuilder)? updates]) =>
      (new GAdvanceDirectiveInputBuilder()..update(updates))._build();

  _$GAdvanceDirectiveInput._(
      {required this.patientId,
      required this.filename,
      required this.attachment,
      required this.mimeType,
      this.confidentialities})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GAdvanceDirectiveInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        filename, r'GAdvanceDirectiveInput', 'filename');
    BuiltValueNullFieldError.checkNotNull(
        attachment, r'GAdvanceDirectiveInput', 'attachment');
    BuiltValueNullFieldError.checkNotNull(
        mimeType, r'GAdvanceDirectiveInput', 'mimeType');
  }

  @override
  GAdvanceDirectiveInput rebuild(
          void Function(GAdvanceDirectiveInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GAdvanceDirectiveInputBuilder toBuilder() =>
      new GAdvanceDirectiveInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GAdvanceDirectiveInput &&
        patientId == other.patientId &&
        filename == other.filename &&
        attachment == other.attachment &&
        mimeType == other.mimeType &&
        confidentialities == other.confidentialities;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, filename.hashCode);
    _$hash = $jc(_$hash, attachment.hashCode);
    _$hash = $jc(_$hash, mimeType.hashCode);
    _$hash = $jc(_$hash, confidentialities.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GAdvanceDirectiveInput')
          ..add('patientId', patientId)
          ..add('filename', filename)
          ..add('attachment', attachment)
          ..add('mimeType', mimeType)
          ..add('confidentialities', confidentialities))
        .toString();
  }
}

class GAdvanceDirectiveInputBuilder
    implements Builder<GAdvanceDirectiveInput, GAdvanceDirectiveInputBuilder> {
  _$GAdvanceDirectiveInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _filename;
  String? get filename => _$this._filename;
  set filename(String? filename) => _$this._filename = filename;

  String? _attachment;
  String? get attachment => _$this._attachment;
  set attachment(String? attachment) => _$this._attachment = attachment;

  String? _mimeType;
  String? get mimeType => _$this._mimeType;
  set mimeType(String? mimeType) => _$this._mimeType = mimeType;

  ListBuilder<GConfidentiality>? _confidentialities;
  ListBuilder<GConfidentiality> get confidentialities =>
      _$this._confidentialities ??= new ListBuilder<GConfidentiality>();
  set confidentialities(ListBuilder<GConfidentiality>? confidentialities) =>
      _$this._confidentialities = confidentialities;

  GAdvanceDirectiveInputBuilder();

  GAdvanceDirectiveInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _filename = $v.filename;
      _attachment = $v.attachment;
      _mimeType = $v.mimeType;
      _confidentialities = $v.confidentialities?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GAdvanceDirectiveInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GAdvanceDirectiveInput;
  }

  @override
  void update(void Function(GAdvanceDirectiveInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GAdvanceDirectiveInput build() => _build();

  _$GAdvanceDirectiveInput _build() {
    _$GAdvanceDirectiveInput _$result;
    try {
      _$result = _$v ??
          new _$GAdvanceDirectiveInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GAdvanceDirectiveInput', 'patientId'),
              filename: BuiltValueNullFieldError.checkNotNull(
                  filename, r'GAdvanceDirectiveInput', 'filename'),
              attachment: BuiltValueNullFieldError.checkNotNull(
                  attachment, r'GAdvanceDirectiveInput', 'attachment'),
              mimeType: BuiltValueNullFieldError.checkNotNull(
                  mimeType, r'GAdvanceDirectiveInput', 'mimeType'),
              confidentialities: _confidentialities?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'confidentialities';
        _confidentialities?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GAdvanceDirectiveInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GHealthProfessionalInput extends GHealthProfessionalInput {
  @override
  final String patientId;
  @override
  final String nationalId;
  @override
  final GHealthProfessionalRoleEnum? role;

  factory _$GHealthProfessionalInput(
          [void Function(GHealthProfessionalInputBuilder)? updates]) =>
      (new GHealthProfessionalInputBuilder()..update(updates))._build();

  _$GHealthProfessionalInput._(
      {required this.patientId, required this.nationalId, this.role})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GHealthProfessionalInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        nationalId, r'GHealthProfessionalInput', 'nationalId');
  }

  @override
  GHealthProfessionalInput rebuild(
          void Function(GHealthProfessionalInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHealthProfessionalInputBuilder toBuilder() =>
      new GHealthProfessionalInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHealthProfessionalInput &&
        patientId == other.patientId &&
        nationalId == other.nationalId &&
        role == other.role;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, nationalId.hashCode);
    _$hash = $jc(_$hash, role.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHealthProfessionalInput')
          ..add('patientId', patientId)
          ..add('nationalId', nationalId)
          ..add('role', role))
        .toString();
  }
}

class GHealthProfessionalInputBuilder
    implements
        Builder<GHealthProfessionalInput, GHealthProfessionalInputBuilder> {
  _$GHealthProfessionalInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _nationalId;
  String? get nationalId => _$this._nationalId;
  set nationalId(String? nationalId) => _$this._nationalId = nationalId;

  GHealthProfessionalRoleEnum? _role;
  GHealthProfessionalRoleEnum? get role => _$this._role;
  set role(GHealthProfessionalRoleEnum? role) => _$this._role = role;

  GHealthProfessionalInputBuilder();

  GHealthProfessionalInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _nationalId = $v.nationalId;
      _role = $v.role;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHealthProfessionalInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHealthProfessionalInput;
  }

  @override
  void update(void Function(GHealthProfessionalInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHealthProfessionalInput build() => _build();

  _$GHealthProfessionalInput _build() {
    final _$result = _$v ??
        new _$GHealthProfessionalInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GHealthProfessionalInput', 'patientId'),
            nationalId: BuiltValueNullFieldError.checkNotNull(
                nationalId, r'GHealthProfessionalInput', 'nationalId'),
            role: role);
    replace(_$result);
    return _$result;
  }
}

class _$GLinkInput extends GLinkInput {
  @override
  final String patientId;
  @override
  final String sourceId;
  @override
  final GLinkType sourceType;
  @override
  final String targetId;
  @override
  final GLinkType targetType;

  factory _$GLinkInput([void Function(GLinkInputBuilder)? updates]) =>
      (new GLinkInputBuilder()..update(updates))._build();

  _$GLinkInput._(
      {required this.patientId,
      required this.sourceId,
      required this.sourceType,
      required this.targetId,
      required this.targetType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GLinkInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(sourceId, r'GLinkInput', 'sourceId');
    BuiltValueNullFieldError.checkNotNull(
        sourceType, r'GLinkInput', 'sourceType');
    BuiltValueNullFieldError.checkNotNull(targetId, r'GLinkInput', 'targetId');
    BuiltValueNullFieldError.checkNotNull(
        targetType, r'GLinkInput', 'targetType');
  }

  @override
  GLinkInput rebuild(void Function(GLinkInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GLinkInputBuilder toBuilder() => new GLinkInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GLinkInput &&
        patientId == other.patientId &&
        sourceId == other.sourceId &&
        sourceType == other.sourceType &&
        targetId == other.targetId &&
        targetType == other.targetType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, sourceId.hashCode);
    _$hash = $jc(_$hash, sourceType.hashCode);
    _$hash = $jc(_$hash, targetId.hashCode);
    _$hash = $jc(_$hash, targetType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GLinkInput')
          ..add('patientId', patientId)
          ..add('sourceId', sourceId)
          ..add('sourceType', sourceType)
          ..add('targetId', targetId)
          ..add('targetType', targetType))
        .toString();
  }
}

class GLinkInputBuilder implements Builder<GLinkInput, GLinkInputBuilder> {
  _$GLinkInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _sourceId;
  String? get sourceId => _$this._sourceId;
  set sourceId(String? sourceId) => _$this._sourceId = sourceId;

  GLinkType? _sourceType;
  GLinkType? get sourceType => _$this._sourceType;
  set sourceType(GLinkType? sourceType) => _$this._sourceType = sourceType;

  String? _targetId;
  String? get targetId => _$this._targetId;
  set targetId(String? targetId) => _$this._targetId = targetId;

  GLinkType? _targetType;
  GLinkType? get targetType => _$this._targetType;
  set targetType(GLinkType? targetType) => _$this._targetType = targetType;

  GLinkInputBuilder();

  GLinkInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _sourceId = $v.sourceId;
      _sourceType = $v.sourceType;
      _targetId = $v.targetId;
      _targetType = $v.targetType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GLinkInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GLinkInput;
  }

  @override
  void update(void Function(GLinkInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GLinkInput build() => _build();

  _$GLinkInput _build() {
    final _$result = _$v ??
        new _$GLinkInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GLinkInput', 'patientId'),
            sourceId: BuiltValueNullFieldError.checkNotNull(
                sourceId, r'GLinkInput', 'sourceId'),
            sourceType: BuiltValueNullFieldError.checkNotNull(
                sourceType, r'GLinkInput', 'sourceType'),
            targetId: BuiltValueNullFieldError.checkNotNull(
                targetId, r'GLinkInput', 'targetId'),
            targetType: BuiltValueNullFieldError.checkNotNull(
                targetType, r'GLinkInput', 'targetType'));
    replace(_$result);
    return _$result;
  }
}

class _$GContactPostInput extends GContactPostInput {
  @override
  final String patientId;
  @override
  final String? prefix;
  @override
  final String? fullName;
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final GEntourageRelation relation;
  @override
  final String mobileNumber;
  @override
  final String? fixedLineNumber;
  @override
  final String? emailAddress;
  @override
  final String? streetAddressLine;
  @override
  final String postalCode;
  @override
  final String city;
  @override
  final String? country;
  @override
  final BuiltList<GContactType> contactsType;

  factory _$GContactPostInput(
          [void Function(GContactPostInputBuilder)? updates]) =>
      (new GContactPostInputBuilder()..update(updates))._build();

  _$GContactPostInput._(
      {required this.patientId,
      this.prefix,
      this.fullName,
      required this.firstName,
      required this.lastName,
      required this.relation,
      required this.mobileNumber,
      this.fixedLineNumber,
      this.emailAddress,
      this.streetAddressLine,
      required this.postalCode,
      required this.city,
      this.country,
      required this.contactsType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GContactPostInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        firstName, r'GContactPostInput', 'firstName');
    BuiltValueNullFieldError.checkNotNull(
        lastName, r'GContactPostInput', 'lastName');
    BuiltValueNullFieldError.checkNotNull(
        relation, r'GContactPostInput', 'relation');
    BuiltValueNullFieldError.checkNotNull(
        mobileNumber, r'GContactPostInput', 'mobileNumber');
    BuiltValueNullFieldError.checkNotNull(
        postalCode, r'GContactPostInput', 'postalCode');
    BuiltValueNullFieldError.checkNotNull(city, r'GContactPostInput', 'city');
    BuiltValueNullFieldError.checkNotNull(
        contactsType, r'GContactPostInput', 'contactsType');
  }

  @override
  GContactPostInput rebuild(void Function(GContactPostInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GContactPostInputBuilder toBuilder() =>
      new GContactPostInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GContactPostInput &&
        patientId == other.patientId &&
        prefix == other.prefix &&
        fullName == other.fullName &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        relation == other.relation &&
        mobileNumber == other.mobileNumber &&
        fixedLineNumber == other.fixedLineNumber &&
        emailAddress == other.emailAddress &&
        streetAddressLine == other.streetAddressLine &&
        postalCode == other.postalCode &&
        city == other.city &&
        country == other.country &&
        contactsType == other.contactsType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, prefix.hashCode);
    _$hash = $jc(_$hash, fullName.hashCode);
    _$hash = $jc(_$hash, firstName.hashCode);
    _$hash = $jc(_$hash, lastName.hashCode);
    _$hash = $jc(_$hash, relation.hashCode);
    _$hash = $jc(_$hash, mobileNumber.hashCode);
    _$hash = $jc(_$hash, fixedLineNumber.hashCode);
    _$hash = $jc(_$hash, emailAddress.hashCode);
    _$hash = $jc(_$hash, streetAddressLine.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, city.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, contactsType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GContactPostInput')
          ..add('patientId', patientId)
          ..add('prefix', prefix)
          ..add('fullName', fullName)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('relation', relation)
          ..add('mobileNumber', mobileNumber)
          ..add('fixedLineNumber', fixedLineNumber)
          ..add('emailAddress', emailAddress)
          ..add('streetAddressLine', streetAddressLine)
          ..add('postalCode', postalCode)
          ..add('city', city)
          ..add('country', country)
          ..add('contactsType', contactsType))
        .toString();
  }
}

class GContactPostInputBuilder
    implements Builder<GContactPostInput, GContactPostInputBuilder> {
  _$GContactPostInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _prefix;
  String? get prefix => _$this._prefix;
  set prefix(String? prefix) => _$this._prefix = prefix;

  String? _fullName;
  String? get fullName => _$this._fullName;
  set fullName(String? fullName) => _$this._fullName = fullName;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  GEntourageRelation? _relation;
  GEntourageRelation? get relation => _$this._relation;
  set relation(GEntourageRelation? relation) => _$this._relation = relation;

  String? _mobileNumber;
  String? get mobileNumber => _$this._mobileNumber;
  set mobileNumber(String? mobileNumber) => _$this._mobileNumber = mobileNumber;

  String? _fixedLineNumber;
  String? get fixedLineNumber => _$this._fixedLineNumber;
  set fixedLineNumber(String? fixedLineNumber) =>
      _$this._fixedLineNumber = fixedLineNumber;

  String? _emailAddress;
  String? get emailAddress => _$this._emailAddress;
  set emailAddress(String? emailAddress) => _$this._emailAddress = emailAddress;

  String? _streetAddressLine;
  String? get streetAddressLine => _$this._streetAddressLine;
  set streetAddressLine(String? streetAddressLine) =>
      _$this._streetAddressLine = streetAddressLine;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _city;
  String? get city => _$this._city;
  set city(String? city) => _$this._city = city;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  ListBuilder<GContactType>? _contactsType;
  ListBuilder<GContactType> get contactsType =>
      _$this._contactsType ??= new ListBuilder<GContactType>();
  set contactsType(ListBuilder<GContactType>? contactsType) =>
      _$this._contactsType = contactsType;

  GContactPostInputBuilder();

  GContactPostInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _prefix = $v.prefix;
      _fullName = $v.fullName;
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _relation = $v.relation;
      _mobileNumber = $v.mobileNumber;
      _fixedLineNumber = $v.fixedLineNumber;
      _emailAddress = $v.emailAddress;
      _streetAddressLine = $v.streetAddressLine;
      _postalCode = $v.postalCode;
      _city = $v.city;
      _country = $v.country;
      _contactsType = $v.contactsType.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GContactPostInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GContactPostInput;
  }

  @override
  void update(void Function(GContactPostInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GContactPostInput build() => _build();

  _$GContactPostInput _build() {
    _$GContactPostInput _$result;
    try {
      _$result = _$v ??
          new _$GContactPostInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GContactPostInput', 'patientId'),
              prefix: prefix,
              fullName: fullName,
              firstName: BuiltValueNullFieldError.checkNotNull(
                  firstName, r'GContactPostInput', 'firstName'),
              lastName: BuiltValueNullFieldError.checkNotNull(
                  lastName, r'GContactPostInput', 'lastName'),
              relation: BuiltValueNullFieldError.checkNotNull(
                  relation, r'GContactPostInput', 'relation'),
              mobileNumber: BuiltValueNullFieldError.checkNotNull(
                  mobileNumber, r'GContactPostInput', 'mobileNumber'),
              fixedLineNumber: fixedLineNumber,
              emailAddress: emailAddress,
              streetAddressLine: streetAddressLine,
              postalCode: BuiltValueNullFieldError.checkNotNull(
                  postalCode, r'GContactPostInput', 'postalCode'),
              city: BuiltValueNullFieldError.checkNotNull(
                  city, r'GContactPostInput', 'city'),
              country: country,
              contactsType: contactsType.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'contactsType';
        contactsType.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GContactPostInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GContactUpdateInput extends GContactUpdateInput {
  @override
  final String patientId;
  @override
  final String? prefix;
  @override
  final String? fullName;
  @override
  final String firstName;
  @override
  final String lastName;
  @override
  final GEntourageRelation relation;
  @override
  final String mobileNumber;
  @override
  final String? fixedLineNumber;
  @override
  final String? emailAddress;
  @override
  final String? streetAddressLine;
  @override
  final String postalCode;
  @override
  final String city;
  @override
  final String? country;
  @override
  final String idContact;
  @override
  final GContactType contactType;

  factory _$GContactUpdateInput(
          [void Function(GContactUpdateInputBuilder)? updates]) =>
      (new GContactUpdateInputBuilder()..update(updates))._build();

  _$GContactUpdateInput._(
      {required this.patientId,
      this.prefix,
      this.fullName,
      required this.firstName,
      required this.lastName,
      required this.relation,
      required this.mobileNumber,
      this.fixedLineNumber,
      this.emailAddress,
      this.streetAddressLine,
      required this.postalCode,
      required this.city,
      this.country,
      required this.idContact,
      required this.contactType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GContactUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        firstName, r'GContactUpdateInput', 'firstName');
    BuiltValueNullFieldError.checkNotNull(
        lastName, r'GContactUpdateInput', 'lastName');
    BuiltValueNullFieldError.checkNotNull(
        relation, r'GContactUpdateInput', 'relation');
    BuiltValueNullFieldError.checkNotNull(
        mobileNumber, r'GContactUpdateInput', 'mobileNumber');
    BuiltValueNullFieldError.checkNotNull(
        postalCode, r'GContactUpdateInput', 'postalCode');
    BuiltValueNullFieldError.checkNotNull(city, r'GContactUpdateInput', 'city');
    BuiltValueNullFieldError.checkNotNull(
        idContact, r'GContactUpdateInput', 'idContact');
    BuiltValueNullFieldError.checkNotNull(
        contactType, r'GContactUpdateInput', 'contactType');
  }

  @override
  GContactUpdateInput rebuild(
          void Function(GContactUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GContactUpdateInputBuilder toBuilder() =>
      new GContactUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GContactUpdateInput &&
        patientId == other.patientId &&
        prefix == other.prefix &&
        fullName == other.fullName &&
        firstName == other.firstName &&
        lastName == other.lastName &&
        relation == other.relation &&
        mobileNumber == other.mobileNumber &&
        fixedLineNumber == other.fixedLineNumber &&
        emailAddress == other.emailAddress &&
        streetAddressLine == other.streetAddressLine &&
        postalCode == other.postalCode &&
        city == other.city &&
        country == other.country &&
        idContact == other.idContact &&
        contactType == other.contactType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, prefix.hashCode);
    _$hash = $jc(_$hash, fullName.hashCode);
    _$hash = $jc(_$hash, firstName.hashCode);
    _$hash = $jc(_$hash, lastName.hashCode);
    _$hash = $jc(_$hash, relation.hashCode);
    _$hash = $jc(_$hash, mobileNumber.hashCode);
    _$hash = $jc(_$hash, fixedLineNumber.hashCode);
    _$hash = $jc(_$hash, emailAddress.hashCode);
    _$hash = $jc(_$hash, streetAddressLine.hashCode);
    _$hash = $jc(_$hash, postalCode.hashCode);
    _$hash = $jc(_$hash, city.hashCode);
    _$hash = $jc(_$hash, country.hashCode);
    _$hash = $jc(_$hash, idContact.hashCode);
    _$hash = $jc(_$hash, contactType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GContactUpdateInput')
          ..add('patientId', patientId)
          ..add('prefix', prefix)
          ..add('fullName', fullName)
          ..add('firstName', firstName)
          ..add('lastName', lastName)
          ..add('relation', relation)
          ..add('mobileNumber', mobileNumber)
          ..add('fixedLineNumber', fixedLineNumber)
          ..add('emailAddress', emailAddress)
          ..add('streetAddressLine', streetAddressLine)
          ..add('postalCode', postalCode)
          ..add('city', city)
          ..add('country', country)
          ..add('idContact', idContact)
          ..add('contactType', contactType))
        .toString();
  }
}

class GContactUpdateInputBuilder
    implements Builder<GContactUpdateInput, GContactUpdateInputBuilder> {
  _$GContactUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _prefix;
  String? get prefix => _$this._prefix;
  set prefix(String? prefix) => _$this._prefix = prefix;

  String? _fullName;
  String? get fullName => _$this._fullName;
  set fullName(String? fullName) => _$this._fullName = fullName;

  String? _firstName;
  String? get firstName => _$this._firstName;
  set firstName(String? firstName) => _$this._firstName = firstName;

  String? _lastName;
  String? get lastName => _$this._lastName;
  set lastName(String? lastName) => _$this._lastName = lastName;

  GEntourageRelation? _relation;
  GEntourageRelation? get relation => _$this._relation;
  set relation(GEntourageRelation? relation) => _$this._relation = relation;

  String? _mobileNumber;
  String? get mobileNumber => _$this._mobileNumber;
  set mobileNumber(String? mobileNumber) => _$this._mobileNumber = mobileNumber;

  String? _fixedLineNumber;
  String? get fixedLineNumber => _$this._fixedLineNumber;
  set fixedLineNumber(String? fixedLineNumber) =>
      _$this._fixedLineNumber = fixedLineNumber;

  String? _emailAddress;
  String? get emailAddress => _$this._emailAddress;
  set emailAddress(String? emailAddress) => _$this._emailAddress = emailAddress;

  String? _streetAddressLine;
  String? get streetAddressLine => _$this._streetAddressLine;
  set streetAddressLine(String? streetAddressLine) =>
      _$this._streetAddressLine = streetAddressLine;

  String? _postalCode;
  String? get postalCode => _$this._postalCode;
  set postalCode(String? postalCode) => _$this._postalCode = postalCode;

  String? _city;
  String? get city => _$this._city;
  set city(String? city) => _$this._city = city;

  String? _country;
  String? get country => _$this._country;
  set country(String? country) => _$this._country = country;

  String? _idContact;
  String? get idContact => _$this._idContact;
  set idContact(String? idContact) => _$this._idContact = idContact;

  GContactType? _contactType;
  GContactType? get contactType => _$this._contactType;
  set contactType(GContactType? contactType) =>
      _$this._contactType = contactType;

  GContactUpdateInputBuilder();

  GContactUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _prefix = $v.prefix;
      _fullName = $v.fullName;
      _firstName = $v.firstName;
      _lastName = $v.lastName;
      _relation = $v.relation;
      _mobileNumber = $v.mobileNumber;
      _fixedLineNumber = $v.fixedLineNumber;
      _emailAddress = $v.emailAddress;
      _streetAddressLine = $v.streetAddressLine;
      _postalCode = $v.postalCode;
      _city = $v.city;
      _country = $v.country;
      _idContact = $v.idContact;
      _contactType = $v.contactType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GContactUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GContactUpdateInput;
  }

  @override
  void update(void Function(GContactUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GContactUpdateInput build() => _build();

  _$GContactUpdateInput _build() {
    final _$result = _$v ??
        new _$GContactUpdateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GContactUpdateInput', 'patientId'),
            prefix: prefix,
            fullName: fullName,
            firstName: BuiltValueNullFieldError.checkNotNull(
                firstName, r'GContactUpdateInput', 'firstName'),
            lastName: BuiltValueNullFieldError.checkNotNull(
                lastName, r'GContactUpdateInput', 'lastName'),
            relation: BuiltValueNullFieldError.checkNotNull(
                relation, r'GContactUpdateInput', 'relation'),
            mobileNumber: BuiltValueNullFieldError.checkNotNull(
                mobileNumber, r'GContactUpdateInput', 'mobileNumber'),
            fixedLineNumber: fixedLineNumber,
            emailAddress: emailAddress,
            streetAddressLine: streetAddressLine,
            postalCode: BuiltValueNullFieldError.checkNotNull(
                postalCode, r'GContactUpdateInput', 'postalCode'),
            city: BuiltValueNullFieldError.checkNotNull(
                city, r'GContactUpdateInput', 'city'),
            country: country,
            idContact: BuiltValueNullFieldError.checkNotNull(
                idContact, r'GContactUpdateInput', 'idContact'),
            contactType: BuiltValueNullFieldError.checkNotNull(
                contactType, r'GContactUpdateInput', 'contactType'));
    replace(_$result);
    return _$result;
  }
}

class _$GHealthStructureInput extends GHealthStructureInput {
  @override
  final String patientId;
  @override
  final String nationalId;

  factory _$GHealthStructureInput(
          [void Function(GHealthStructureInputBuilder)? updates]) =>
      (new GHealthStructureInputBuilder()..update(updates))._build();

  _$GHealthStructureInput._({required this.patientId, required this.nationalId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GHealthStructureInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        nationalId, r'GHealthStructureInput', 'nationalId');
  }

  @override
  GHealthStructureInput rebuild(
          void Function(GHealthStructureInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHealthStructureInputBuilder toBuilder() =>
      new GHealthStructureInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHealthStructureInput &&
        patientId == other.patientId &&
        nationalId == other.nationalId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, nationalId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHealthStructureInput')
          ..add('patientId', patientId)
          ..add('nationalId', nationalId))
        .toString();
  }
}

class GHealthStructureInputBuilder
    implements Builder<GHealthStructureInput, GHealthStructureInputBuilder> {
  _$GHealthStructureInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _nationalId;
  String? get nationalId => _$this._nationalId;
  set nationalId(String? nationalId) => _$this._nationalId = nationalId;

  GHealthStructureInputBuilder();

  GHealthStructureInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _nationalId = $v.nationalId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHealthStructureInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHealthStructureInput;
  }

  @override
  void update(void Function(GHealthStructureInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHealthStructureInput build() => _build();

  _$GHealthStructureInput _build() {
    final _$result = _$v ??
        new _$GHealthStructureInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GHealthStructureInput', 'patientId'),
            nationalId: BuiltValueNullFieldError.checkNotNull(
                nationalId, r'GHealthStructureInput', 'nationalId'));
    replace(_$result);
    return _$result;
  }
}

class _$GSendResponseInput extends GSendResponseInput {
  @override
  final bool? draft;
  @override
  final String patientId;
  @override
  final GReplyTypeEnum? replyType;
  @override
  final String conversationId;
  @override
  final String? messageId;
  @override
  final String content;
  @override
  final String? subject;
  @override
  final String? medicalProfileFilename;
  @override
  final BuiltList<GFileInput>? attachments;
  @override
  final BuiltList<GEnsDocumentInput>? ensDocuments;
  @override
  final BuiltList<String>? filesId;
  @override
  final GRecipientsIdInput? recipientsId;
  @override
  final GFiltersInput? filters;

  factory _$GSendResponseInput(
          [void Function(GSendResponseInputBuilder)? updates]) =>
      (new GSendResponseInputBuilder()..update(updates))._build();

  _$GSendResponseInput._(
      {this.draft,
      required this.patientId,
      this.replyType,
      required this.conversationId,
      this.messageId,
      required this.content,
      this.subject,
      this.medicalProfileFilename,
      this.attachments,
      this.ensDocuments,
      this.filesId,
      this.recipientsId,
      this.filters})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GSendResponseInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        conversationId, r'GSendResponseInput', 'conversationId');
    BuiltValueNullFieldError.checkNotNull(
        content, r'GSendResponseInput', 'content');
  }

  @override
  GSendResponseInput rebuild(
          void Function(GSendResponseInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSendResponseInputBuilder toBuilder() =>
      new GSendResponseInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSendResponseInput &&
        draft == other.draft &&
        patientId == other.patientId &&
        replyType == other.replyType &&
        conversationId == other.conversationId &&
        messageId == other.messageId &&
        content == other.content &&
        subject == other.subject &&
        medicalProfileFilename == other.medicalProfileFilename &&
        attachments == other.attachments &&
        ensDocuments == other.ensDocuments &&
        filesId == other.filesId &&
        recipientsId == other.recipientsId &&
        filters == other.filters;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, draft.hashCode);
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, replyType.hashCode);
    _$hash = $jc(_$hash, conversationId.hashCode);
    _$hash = $jc(_$hash, messageId.hashCode);
    _$hash = $jc(_$hash, content.hashCode);
    _$hash = $jc(_$hash, subject.hashCode);
    _$hash = $jc(_$hash, medicalProfileFilename.hashCode);
    _$hash = $jc(_$hash, attachments.hashCode);
    _$hash = $jc(_$hash, ensDocuments.hashCode);
    _$hash = $jc(_$hash, filesId.hashCode);
    _$hash = $jc(_$hash, recipientsId.hashCode);
    _$hash = $jc(_$hash, filters.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSendResponseInput')
          ..add('draft', draft)
          ..add('patientId', patientId)
          ..add('replyType', replyType)
          ..add('conversationId', conversationId)
          ..add('messageId', messageId)
          ..add('content', content)
          ..add('subject', subject)
          ..add('medicalProfileFilename', medicalProfileFilename)
          ..add('attachments', attachments)
          ..add('ensDocuments', ensDocuments)
          ..add('filesId', filesId)
          ..add('recipientsId', recipientsId)
          ..add('filters', filters))
        .toString();
  }
}

class GSendResponseInputBuilder
    implements Builder<GSendResponseInput, GSendResponseInputBuilder> {
  _$GSendResponseInput? _$v;

  bool? _draft;
  bool? get draft => _$this._draft;
  set draft(bool? draft) => _$this._draft = draft;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GReplyTypeEnum? _replyType;
  GReplyTypeEnum? get replyType => _$this._replyType;
  set replyType(GReplyTypeEnum? replyType) => _$this._replyType = replyType;

  String? _conversationId;
  String? get conversationId => _$this._conversationId;
  set conversationId(String? conversationId) =>
      _$this._conversationId = conversationId;

  String? _messageId;
  String? get messageId => _$this._messageId;
  set messageId(String? messageId) => _$this._messageId = messageId;

  String? _content;
  String? get content => _$this._content;
  set content(String? content) => _$this._content = content;

  String? _subject;
  String? get subject => _$this._subject;
  set subject(String? subject) => _$this._subject = subject;

  String? _medicalProfileFilename;
  String? get medicalProfileFilename => _$this._medicalProfileFilename;
  set medicalProfileFilename(String? medicalProfileFilename) =>
      _$this._medicalProfileFilename = medicalProfileFilename;

  ListBuilder<GFileInput>? _attachments;
  ListBuilder<GFileInput> get attachments =>
      _$this._attachments ??= new ListBuilder<GFileInput>();
  set attachments(ListBuilder<GFileInput>? attachments) =>
      _$this._attachments = attachments;

  ListBuilder<GEnsDocumentInput>? _ensDocuments;
  ListBuilder<GEnsDocumentInput> get ensDocuments =>
      _$this._ensDocuments ??= new ListBuilder<GEnsDocumentInput>();
  set ensDocuments(ListBuilder<GEnsDocumentInput>? ensDocuments) =>
      _$this._ensDocuments = ensDocuments;

  ListBuilder<String>? _filesId;
  ListBuilder<String> get filesId =>
      _$this._filesId ??= new ListBuilder<String>();
  set filesId(ListBuilder<String>? filesId) => _$this._filesId = filesId;

  GRecipientsIdInputBuilder? _recipientsId;
  GRecipientsIdInputBuilder get recipientsId =>
      _$this._recipientsId ??= new GRecipientsIdInputBuilder();
  set recipientsId(GRecipientsIdInputBuilder? recipientsId) =>
      _$this._recipientsId = recipientsId;

  GFiltersInputBuilder? _filters;
  GFiltersInputBuilder get filters =>
      _$this._filters ??= new GFiltersInputBuilder();
  set filters(GFiltersInputBuilder? filters) => _$this._filters = filters;

  GSendResponseInputBuilder();

  GSendResponseInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _draft = $v.draft;
      _patientId = $v.patientId;
      _replyType = $v.replyType;
      _conversationId = $v.conversationId;
      _messageId = $v.messageId;
      _content = $v.content;
      _subject = $v.subject;
      _medicalProfileFilename = $v.medicalProfileFilename;
      _attachments = $v.attachments?.toBuilder();
      _ensDocuments = $v.ensDocuments?.toBuilder();
      _filesId = $v.filesId?.toBuilder();
      _recipientsId = $v.recipientsId?.toBuilder();
      _filters = $v.filters?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSendResponseInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSendResponseInput;
  }

  @override
  void update(void Function(GSendResponseInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSendResponseInput build() => _build();

  _$GSendResponseInput _build() {
    _$GSendResponseInput _$result;
    try {
      _$result = _$v ??
          new _$GSendResponseInput._(
              draft: draft,
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GSendResponseInput', 'patientId'),
              replyType: replyType,
              conversationId: BuiltValueNullFieldError.checkNotNull(
                  conversationId, r'GSendResponseInput', 'conversationId'),
              messageId: messageId,
              content: BuiltValueNullFieldError.checkNotNull(
                  content, r'GSendResponseInput', 'content'),
              subject: subject,
              medicalProfileFilename: medicalProfileFilename,
              attachments: _attachments?.build(),
              ensDocuments: _ensDocuments?.build(),
              filesId: _filesId?.build(),
              recipientsId: _recipientsId?.build(),
              filters: _filters?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'attachments';
        _attachments?.build();
        _$failedField = 'ensDocuments';
        _ensDocuments?.build();
        _$failedField = 'filesId';
        _filesId?.build();
        _$failedField = 'recipientsId';
        _recipientsId?.build();
        _$failedField = 'filters';
        _filters?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GSendResponseInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GFileInput extends GFileInput {
  @override
  final String name;
  @override
  final String attachment;
  @override
  final String mimeType;

  factory _$GFileInput([void Function(GFileInputBuilder)? updates]) =>
      (new GFileInputBuilder()..update(updates))._build();

  _$GFileInput._(
      {required this.name, required this.attachment, required this.mimeType})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(name, r'GFileInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        attachment, r'GFileInput', 'attachment');
    BuiltValueNullFieldError.checkNotNull(mimeType, r'GFileInput', 'mimeType');
  }

  @override
  GFileInput rebuild(void Function(GFileInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFileInputBuilder toBuilder() => new GFileInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFileInput &&
        name == other.name &&
        attachment == other.attachment &&
        mimeType == other.mimeType;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, attachment.hashCode);
    _$hash = $jc(_$hash, mimeType.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFileInput')
          ..add('name', name)
          ..add('attachment', attachment)
          ..add('mimeType', mimeType))
        .toString();
  }
}

class GFileInputBuilder implements Builder<GFileInput, GFileInputBuilder> {
  _$GFileInput? _$v;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _attachment;
  String? get attachment => _$this._attachment;
  set attachment(String? attachment) => _$this._attachment = attachment;

  String? _mimeType;
  String? get mimeType => _$this._mimeType;
  set mimeType(String? mimeType) => _$this._mimeType = mimeType;

  GFileInputBuilder();

  GFileInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _name = $v.name;
      _attachment = $v.attachment;
      _mimeType = $v.mimeType;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFileInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFileInput;
  }

  @override
  void update(void Function(GFileInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFileInput build() => _build();

  _$GFileInput _build() {
    final _$result = _$v ??
        new _$GFileInput._(
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GFileInput', 'name'),
            attachment: BuiltValueNullFieldError.checkNotNull(
                attachment, r'GFileInput', 'attachment'),
            mimeType: BuiltValueNullFieldError.checkNotNull(
                mimeType, r'GFileInput', 'mimeType'));
    replace(_$result);
    return _$result;
  }
}

class _$GEnsDocumentInput extends GEnsDocumentInput {
  @override
  final String documentId;
  @override
  final String documentTitle;

  factory _$GEnsDocumentInput(
          [void Function(GEnsDocumentInputBuilder)? updates]) =>
      (new GEnsDocumentInputBuilder()..update(updates))._build();

  _$GEnsDocumentInput._({required this.documentId, required this.documentTitle})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        documentId, r'GEnsDocumentInput', 'documentId');
    BuiltValueNullFieldError.checkNotNull(
        documentTitle, r'GEnsDocumentInput', 'documentTitle');
  }

  @override
  GEnsDocumentInput rebuild(void Function(GEnsDocumentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GEnsDocumentInputBuilder toBuilder() =>
      new GEnsDocumentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GEnsDocumentInput &&
        documentId == other.documentId &&
        documentTitle == other.documentTitle;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, documentId.hashCode);
    _$hash = $jc(_$hash, documentTitle.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GEnsDocumentInput')
          ..add('documentId', documentId)
          ..add('documentTitle', documentTitle))
        .toString();
  }
}

class GEnsDocumentInputBuilder
    implements Builder<GEnsDocumentInput, GEnsDocumentInputBuilder> {
  _$GEnsDocumentInput? _$v;

  String? _documentId;
  String? get documentId => _$this._documentId;
  set documentId(String? documentId) => _$this._documentId = documentId;

  String? _documentTitle;
  String? get documentTitle => _$this._documentTitle;
  set documentTitle(String? documentTitle) =>
      _$this._documentTitle = documentTitle;

  GEnsDocumentInputBuilder();

  GEnsDocumentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _documentId = $v.documentId;
      _documentTitle = $v.documentTitle;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GEnsDocumentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GEnsDocumentInput;
  }

  @override
  void update(void Function(GEnsDocumentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GEnsDocumentInput build() => _build();

  _$GEnsDocumentInput _build() {
    final _$result = _$v ??
        new _$GEnsDocumentInput._(
            documentId: BuiltValueNullFieldError.checkNotNull(
                documentId, r'GEnsDocumentInput', 'documentId'),
            documentTitle: BuiltValueNullFieldError.checkNotNull(
                documentTitle, r'GEnsDocumentInput', 'documentTitle'));
    replace(_$result);
    return _$result;
  }
}

class _$GRecipientsIdInput extends GRecipientsIdInput {
  @override
  final BuiltList<String>? to;

  factory _$GRecipientsIdInput(
          [void Function(GRecipientsIdInputBuilder)? updates]) =>
      (new GRecipientsIdInputBuilder()..update(updates))._build();

  _$GRecipientsIdInput._({this.to}) : super._();

  @override
  GRecipientsIdInput rebuild(
          void Function(GRecipientsIdInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GRecipientsIdInputBuilder toBuilder() =>
      new GRecipientsIdInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GRecipientsIdInput && to == other.to;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, to.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GRecipientsIdInput')..add('to', to))
        .toString();
  }
}

class GRecipientsIdInputBuilder
    implements Builder<GRecipientsIdInput, GRecipientsIdInputBuilder> {
  _$GRecipientsIdInput? _$v;

  ListBuilder<String>? _to;
  ListBuilder<String> get to => _$this._to ??= new ListBuilder<String>();
  set to(ListBuilder<String>? to) => _$this._to = to;

  GRecipientsIdInputBuilder();

  GRecipientsIdInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _to = $v.to?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GRecipientsIdInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GRecipientsIdInput;
  }

  @override
  void update(void Function(GRecipientsIdInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GRecipientsIdInput build() => _build();

  _$GRecipientsIdInput _build() {
    _$GRecipientsIdInput _$result;
    try {
      _$result = _$v ?? new _$GRecipientsIdInput._(to: _to?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'to';
        _to?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GRecipientsIdInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GSaveNotificationTokenInput extends GSaveNotificationTokenInput {
  @override
  final String token;
  @override
  final GMobileOsEnum os;

  factory _$GSaveNotificationTokenInput(
          [void Function(GSaveNotificationTokenInputBuilder)? updates]) =>
      (new GSaveNotificationTokenInputBuilder()..update(updates))._build();

  _$GSaveNotificationTokenInput._({required this.token, required this.os})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        token, r'GSaveNotificationTokenInput', 'token');
    BuiltValueNullFieldError.checkNotNull(
        os, r'GSaveNotificationTokenInput', 'os');
  }

  @override
  GSaveNotificationTokenInput rebuild(
          void Function(GSaveNotificationTokenInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GSaveNotificationTokenInputBuilder toBuilder() =>
      new GSaveNotificationTokenInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GSaveNotificationTokenInput &&
        token == other.token &&
        os == other.os;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, token.hashCode);
    _$hash = $jc(_$hash, os.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GSaveNotificationTokenInput')
          ..add('token', token)
          ..add('os', os))
        .toString();
  }
}

class GSaveNotificationTokenInputBuilder
    implements
        Builder<GSaveNotificationTokenInput,
            GSaveNotificationTokenInputBuilder> {
  _$GSaveNotificationTokenInput? _$v;

  String? _token;
  String? get token => _$this._token;
  set token(String? token) => _$this._token = token;

  GMobileOsEnum? _os;
  GMobileOsEnum? get os => _$this._os;
  set os(GMobileOsEnum? os) => _$this._os = os;

  GSaveNotificationTokenInputBuilder();

  GSaveNotificationTokenInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _token = $v.token;
      _os = $v.os;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GSaveNotificationTokenInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GSaveNotificationTokenInput;
  }

  @override
  void update(void Function(GSaveNotificationTokenInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GSaveNotificationTokenInput build() => _build();

  _$GSaveNotificationTokenInput _build() {
    final _$result = _$v ??
        new _$GSaveNotificationTokenInput._(
            token: BuiltValueNullFieldError.checkNotNull(
                token, r'GSaveNotificationTokenInput', 'token'),
            os: BuiltValueNullFieldError.checkNotNull(
                os, r'GSaveNotificationTokenInput', 'os'));
    replace(_$result);
    return _$result;
  }
}

class _$GUserActionInput extends GUserActionInput {
  @override
  final GUserActionEnum? actionNavigation;
  @override
  final String ensUserId;
  @override
  final BuiltList<GUserActionParams>? params;

  factory _$GUserActionInput(
          [void Function(GUserActionInputBuilder)? updates]) =>
      (new GUserActionInputBuilder()..update(updates))._build();

  _$GUserActionInput._(
      {this.actionNavigation, required this.ensUserId, this.params})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        ensUserId, r'GUserActionInput', 'ensUserId');
  }

  @override
  GUserActionInput rebuild(void Function(GUserActionInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserActionInputBuilder toBuilder() =>
      new GUserActionInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserActionInput &&
        actionNavigation == other.actionNavigation &&
        ensUserId == other.ensUserId &&
        params == other.params;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, actionNavigation.hashCode);
    _$hash = $jc(_$hash, ensUserId.hashCode);
    _$hash = $jc(_$hash, params.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserActionInput')
          ..add('actionNavigation', actionNavigation)
          ..add('ensUserId', ensUserId)
          ..add('params', params))
        .toString();
  }
}

class GUserActionInputBuilder
    implements Builder<GUserActionInput, GUserActionInputBuilder> {
  _$GUserActionInput? _$v;

  GUserActionEnum? _actionNavigation;
  GUserActionEnum? get actionNavigation => _$this._actionNavigation;
  set actionNavigation(GUserActionEnum? actionNavigation) =>
      _$this._actionNavigation = actionNavigation;

  String? _ensUserId;
  String? get ensUserId => _$this._ensUserId;
  set ensUserId(String? ensUserId) => _$this._ensUserId = ensUserId;

  ListBuilder<GUserActionParams>? _params;
  ListBuilder<GUserActionParams> get params =>
      _$this._params ??= new ListBuilder<GUserActionParams>();
  set params(ListBuilder<GUserActionParams>? params) => _$this._params = params;

  GUserActionInputBuilder();

  GUserActionInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _actionNavigation = $v.actionNavigation;
      _ensUserId = $v.ensUserId;
      _params = $v.params?.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserActionInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserActionInput;
  }

  @override
  void update(void Function(GUserActionInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserActionInput build() => _build();

  _$GUserActionInput _build() {
    _$GUserActionInput _$result;
    try {
      _$result = _$v ??
          new _$GUserActionInput._(
              actionNavigation: actionNavigation,
              ensUserId: BuiltValueNullFieldError.checkNotNull(
                  ensUserId, r'GUserActionInput', 'ensUserId'),
              params: _params?.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'params';
        _params?.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GUserActionInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GUserActionParams extends GUserActionParams {
  @override
  final String key;
  @override
  final String value;

  factory _$GUserActionParams(
          [void Function(GUserActionParamsBuilder)? updates]) =>
      (new GUserActionParamsBuilder()..update(updates))._build();

  _$GUserActionParams._({required this.key, required this.value}) : super._() {
    BuiltValueNullFieldError.checkNotNull(key, r'GUserActionParams', 'key');
    BuiltValueNullFieldError.checkNotNull(value, r'GUserActionParams', 'value');
  }

  @override
  GUserActionParams rebuild(void Function(GUserActionParamsBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GUserActionParamsBuilder toBuilder() =>
      new GUserActionParamsBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GUserActionParams &&
        key == other.key &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, key.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GUserActionParams')
          ..add('key', key)
          ..add('value', value))
        .toString();
  }
}

class GUserActionParamsBuilder
    implements Builder<GUserActionParams, GUserActionParamsBuilder> {
  _$GUserActionParams? _$v;

  String? _key;
  String? get key => _$this._key;
  set key(String? key) => _$this._key = key;

  String? _value;
  String? get value => _$this._value;
  set value(String? value) => _$this._value = value;

  GUserActionParamsBuilder();

  GUserActionParamsBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _key = $v.key;
      _value = $v.value;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GUserActionParams other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GUserActionParams;
  }

  @override
  void update(void Function(GUserActionParamsBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GUserActionParams build() => _build();

  _$GUserActionParams _build() {
    final _$result = _$v ??
        new _$GUserActionParams._(
            key: BuiltValueNullFieldError.checkNotNull(
                key, r'GUserActionParams', 'key'),
            value: BuiltValueNullFieldError.checkNotNull(
                value, r'GUserActionParams', 'value'));
    replace(_$result);
    return _$result;
  }
}

class _$GTreatmentInput extends GTreatmentInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final String? startDay;
  @override
  final String? startMonth;
  @override
  final String startYear;
  @override
  final String? endDay;
  @override
  final String? endMonth;
  @override
  final String? endYear;
  @override
  final String? dosage;

  factory _$GTreatmentInput([void Function(GTreatmentInputBuilder)? updates]) =>
      (new GTreatmentInputBuilder()..update(updates))._build();

  _$GTreatmentInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      this.startDay,
      this.startMonth,
      required this.startYear,
      this.endDay,
      this.endMonth,
      this.endYear,
      this.dosage})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GTreatmentInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(name, r'GTreatmentInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        startYear, r'GTreatmentInput', 'startYear');
  }

  @override
  GTreatmentInput rebuild(void Function(GTreatmentInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTreatmentInputBuilder toBuilder() =>
      new GTreatmentInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTreatmentInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        startDay == other.startDay &&
        startMonth == other.startMonth &&
        startYear == other.startYear &&
        endDay == other.endDay &&
        endMonth == other.endMonth &&
        endYear == other.endYear &&
        dosage == other.dosage;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, startDay.hashCode);
    _$hash = $jc(_$hash, startMonth.hashCode);
    _$hash = $jc(_$hash, startYear.hashCode);
    _$hash = $jc(_$hash, endDay.hashCode);
    _$hash = $jc(_$hash, endMonth.hashCode);
    _$hash = $jc(_$hash, endYear.hashCode);
    _$hash = $jc(_$hash, dosage.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTreatmentInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('startDay', startDay)
          ..add('startMonth', startMonth)
          ..add('startYear', startYear)
          ..add('endDay', endDay)
          ..add('endMonth', endMonth)
          ..add('endYear', endYear)
          ..add('dosage', dosage))
        .toString();
  }
}

class GTreatmentInputBuilder
    implements Builder<GTreatmentInput, GTreatmentInputBuilder> {
  _$GTreatmentInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _startDay;
  String? get startDay => _$this._startDay;
  set startDay(String? startDay) => _$this._startDay = startDay;

  String? _startMonth;
  String? get startMonth => _$this._startMonth;
  set startMonth(String? startMonth) => _$this._startMonth = startMonth;

  String? _startYear;
  String? get startYear => _$this._startYear;
  set startYear(String? startYear) => _$this._startYear = startYear;

  String? _endDay;
  String? get endDay => _$this._endDay;
  set endDay(String? endDay) => _$this._endDay = endDay;

  String? _endMonth;
  String? get endMonth => _$this._endMonth;
  set endMonth(String? endMonth) => _$this._endMonth = endMonth;

  String? _endYear;
  String? get endYear => _$this._endYear;
  set endYear(String? endYear) => _$this._endYear = endYear;

  String? _dosage;
  String? get dosage => _$this._dosage;
  set dosage(String? dosage) => _$this._dosage = dosage;

  GTreatmentInputBuilder();

  GTreatmentInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _startDay = $v.startDay;
      _startMonth = $v.startMonth;
      _startYear = $v.startYear;
      _endDay = $v.endDay;
      _endMonth = $v.endMonth;
      _endYear = $v.endYear;
      _dosage = $v.dosage;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTreatmentInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTreatmentInput;
  }

  @override
  void update(void Function(GTreatmentInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTreatmentInput build() => _build();

  _$GTreatmentInput _build() {
    final _$result = _$v ??
        new _$GTreatmentInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GTreatmentInput', 'patientId'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GTreatmentInput', 'name'),
            comment: comment,
            startDay: startDay,
            startMonth: startMonth,
            startYear: BuiltValueNullFieldError.checkNotNull(
                startYear, r'GTreatmentInput', 'startYear'),
            endDay: endDay,
            endMonth: endMonth,
            endYear: endYear,
            dosage: dosage);
    replace(_$result);
    return _$result;
  }
}

class _$GTreatmentUpdateInput extends GTreatmentUpdateInput {
  @override
  final String patientId;
  @override
  final String name;
  @override
  final String? comment;
  @override
  final String? startDay;
  @override
  final String? startMonth;
  @override
  final String startYear;
  @override
  final String? endDay;
  @override
  final String? endMonth;
  @override
  final String? endYear;
  @override
  final String? dosage;
  @override
  final String id;

  factory _$GTreatmentUpdateInput(
          [void Function(GTreatmentUpdateInputBuilder)? updates]) =>
      (new GTreatmentUpdateInputBuilder()..update(updates))._build();

  _$GTreatmentUpdateInput._(
      {required this.patientId,
      required this.name,
      this.comment,
      this.startDay,
      this.startMonth,
      required this.startYear,
      this.endDay,
      this.endMonth,
      this.endYear,
      this.dosage,
      required this.id})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GTreatmentUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        name, r'GTreatmentUpdateInput', 'name');
    BuiltValueNullFieldError.checkNotNull(
        startYear, r'GTreatmentUpdateInput', 'startYear');
    BuiltValueNullFieldError.checkNotNull(id, r'GTreatmentUpdateInput', 'id');
  }

  @override
  GTreatmentUpdateInput rebuild(
          void Function(GTreatmentUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GTreatmentUpdateInputBuilder toBuilder() =>
      new GTreatmentUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GTreatmentUpdateInput &&
        patientId == other.patientId &&
        name == other.name &&
        comment == other.comment &&
        startDay == other.startDay &&
        startMonth == other.startMonth &&
        startYear == other.startYear &&
        endDay == other.endDay &&
        endMonth == other.endMonth &&
        endYear == other.endYear &&
        dosage == other.dosage &&
        id == other.id;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, name.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, startDay.hashCode);
    _$hash = $jc(_$hash, startMonth.hashCode);
    _$hash = $jc(_$hash, startYear.hashCode);
    _$hash = $jc(_$hash, endDay.hashCode);
    _$hash = $jc(_$hash, endMonth.hashCode);
    _$hash = $jc(_$hash, endYear.hashCode);
    _$hash = $jc(_$hash, dosage.hashCode);
    _$hash = $jc(_$hash, id.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GTreatmentUpdateInput')
          ..add('patientId', patientId)
          ..add('name', name)
          ..add('comment', comment)
          ..add('startDay', startDay)
          ..add('startMonth', startMonth)
          ..add('startYear', startYear)
          ..add('endDay', endDay)
          ..add('endMonth', endMonth)
          ..add('endYear', endYear)
          ..add('dosage', dosage)
          ..add('id', id))
        .toString();
  }
}

class GTreatmentUpdateInputBuilder
    implements Builder<GTreatmentUpdateInput, GTreatmentUpdateInputBuilder> {
  _$GTreatmentUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _name;
  String? get name => _$this._name;
  set name(String? name) => _$this._name = name;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _startDay;
  String? get startDay => _$this._startDay;
  set startDay(String? startDay) => _$this._startDay = startDay;

  String? _startMonth;
  String? get startMonth => _$this._startMonth;
  set startMonth(String? startMonth) => _$this._startMonth = startMonth;

  String? _startYear;
  String? get startYear => _$this._startYear;
  set startYear(String? startYear) => _$this._startYear = startYear;

  String? _endDay;
  String? get endDay => _$this._endDay;
  set endDay(String? endDay) => _$this._endDay = endDay;

  String? _endMonth;
  String? get endMonth => _$this._endMonth;
  set endMonth(String? endMonth) => _$this._endMonth = endMonth;

  String? _endYear;
  String? get endYear => _$this._endYear;
  set endYear(String? endYear) => _$this._endYear = endYear;

  String? _dosage;
  String? get dosage => _$this._dosage;
  set dosage(String? dosage) => _$this._dosage = dosage;

  String? _id;
  String? get id => _$this._id;
  set id(String? id) => _$this._id = id;

  GTreatmentUpdateInputBuilder();

  GTreatmentUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _name = $v.name;
      _comment = $v.comment;
      _startDay = $v.startDay;
      _startMonth = $v.startMonth;
      _startYear = $v.startYear;
      _endDay = $v.endDay;
      _endMonth = $v.endMonth;
      _endYear = $v.endYear;
      _dosage = $v.dosage;
      _id = $v.id;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GTreatmentUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GTreatmentUpdateInput;
  }

  @override
  void update(void Function(GTreatmentUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GTreatmentUpdateInput build() => _build();

  _$GTreatmentUpdateInput _build() {
    final _$result = _$v ??
        new _$GTreatmentUpdateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GTreatmentUpdateInput', 'patientId'),
            name: BuiltValueNullFieldError.checkNotNull(
                name, r'GTreatmentUpdateInput', 'name'),
            comment: comment,
            startDay: startDay,
            startMonth: startMonth,
            startYear: BuiltValueNullFieldError.checkNotNull(
                startYear, r'GTreatmentUpdateInput', 'startYear'),
            endDay: endDay,
            endMonth: endMonth,
            endYear: endYear,
            dosage: dosage,
            id: BuiltValueNullFieldError.checkNotNull(
                id, r'GTreatmentUpdateInput', 'id'));
    replace(_$result);
    return _$result;
  }
}

class _$GVaccineInput extends GVaccineInput {
  @override
  final String patientId;
  @override
  final String vaccineRefId;
  @override
  final String effectiveTime;
  @override
  final GVaccineTypeOfAdministrationEnum? typeOfAdministration;
  @override
  final String? lotNumber;
  @override
  final String? performer;
  @override
  final String? comment;

  factory _$GVaccineInput([void Function(GVaccineInputBuilder)? updates]) =>
      (new GVaccineInputBuilder()..update(updates))._build();

  _$GVaccineInput._(
      {required this.patientId,
      required this.vaccineRefId,
      required this.effectiveTime,
      this.typeOfAdministration,
      this.lotNumber,
      this.performer,
      this.comment})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GVaccineInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        vaccineRefId, r'GVaccineInput', 'vaccineRefId');
    BuiltValueNullFieldError.checkNotNull(
        effectiveTime, r'GVaccineInput', 'effectiveTime');
  }

  @override
  GVaccineInput rebuild(void Function(GVaccineInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVaccineInputBuilder toBuilder() => new GVaccineInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVaccineInput &&
        patientId == other.patientId &&
        vaccineRefId == other.vaccineRefId &&
        effectiveTime == other.effectiveTime &&
        typeOfAdministration == other.typeOfAdministration &&
        lotNumber == other.lotNumber &&
        performer == other.performer &&
        comment == other.comment;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, vaccineRefId.hashCode);
    _$hash = $jc(_$hash, effectiveTime.hashCode);
    _$hash = $jc(_$hash, typeOfAdministration.hashCode);
    _$hash = $jc(_$hash, lotNumber.hashCode);
    _$hash = $jc(_$hash, performer.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVaccineInput')
          ..add('patientId', patientId)
          ..add('vaccineRefId', vaccineRefId)
          ..add('effectiveTime', effectiveTime)
          ..add('typeOfAdministration', typeOfAdministration)
          ..add('lotNumber', lotNumber)
          ..add('performer', performer)
          ..add('comment', comment))
        .toString();
  }
}

class GVaccineInputBuilder
    implements Builder<GVaccineInput, GVaccineInputBuilder> {
  _$GVaccineInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _vaccineRefId;
  String? get vaccineRefId => _$this._vaccineRefId;
  set vaccineRefId(String? vaccineRefId) => _$this._vaccineRefId = vaccineRefId;

  String? _effectiveTime;
  String? get effectiveTime => _$this._effectiveTime;
  set effectiveTime(String? effectiveTime) =>
      _$this._effectiveTime = effectiveTime;

  GVaccineTypeOfAdministrationEnum? _typeOfAdministration;
  GVaccineTypeOfAdministrationEnum? get typeOfAdministration =>
      _$this._typeOfAdministration;
  set typeOfAdministration(
          GVaccineTypeOfAdministrationEnum? typeOfAdministration) =>
      _$this._typeOfAdministration = typeOfAdministration;

  String? _lotNumber;
  String? get lotNumber => _$this._lotNumber;
  set lotNumber(String? lotNumber) => _$this._lotNumber = lotNumber;

  String? _performer;
  String? get performer => _$this._performer;
  set performer(String? performer) => _$this._performer = performer;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  GVaccineInputBuilder();

  GVaccineInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _vaccineRefId = $v.vaccineRefId;
      _effectiveTime = $v.effectiveTime;
      _typeOfAdministration = $v.typeOfAdministration;
      _lotNumber = $v.lotNumber;
      _performer = $v.performer;
      _comment = $v.comment;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVaccineInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVaccineInput;
  }

  @override
  void update(void Function(GVaccineInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVaccineInput build() => _build();

  _$GVaccineInput _build() {
    final _$result = _$v ??
        new _$GVaccineInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GVaccineInput', 'patientId'),
            vaccineRefId: BuiltValueNullFieldError.checkNotNull(
                vaccineRefId, r'GVaccineInput', 'vaccineRefId'),
            effectiveTime: BuiltValueNullFieldError.checkNotNull(
                effectiveTime, r'GVaccineInput', 'effectiveTime'),
            typeOfAdministration: typeOfAdministration,
            lotNumber: lotNumber,
            performer: performer,
            comment: comment);
    replace(_$result);
    return _$result;
  }
}

class _$GVaccineUpdateInput extends GVaccineUpdateInput {
  @override
  final String patientId;
  @override
  final String vaccineRefId;
  @override
  final String effectiveTime;
  @override
  final GVaccineTypeOfAdministrationEnum? typeOfAdministration;
  @override
  final String? lotNumber;
  @override
  final String? performer;
  @override
  final String? comment;
  @override
  final String vaccineId;

  factory _$GVaccineUpdateInput(
          [void Function(GVaccineUpdateInputBuilder)? updates]) =>
      (new GVaccineUpdateInputBuilder()..update(updates))._build();

  _$GVaccineUpdateInput._(
      {required this.patientId,
      required this.vaccineRefId,
      required this.effectiveTime,
      this.typeOfAdministration,
      this.lotNumber,
      this.performer,
      this.comment,
      required this.vaccineId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GVaccineUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        vaccineRefId, r'GVaccineUpdateInput', 'vaccineRefId');
    BuiltValueNullFieldError.checkNotNull(
        effectiveTime, r'GVaccineUpdateInput', 'effectiveTime');
    BuiltValueNullFieldError.checkNotNull(
        vaccineId, r'GVaccineUpdateInput', 'vaccineId');
  }

  @override
  GVaccineUpdateInput rebuild(
          void Function(GVaccineUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GVaccineUpdateInputBuilder toBuilder() =>
      new GVaccineUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GVaccineUpdateInput &&
        patientId == other.patientId &&
        vaccineRefId == other.vaccineRefId &&
        effectiveTime == other.effectiveTime &&
        typeOfAdministration == other.typeOfAdministration &&
        lotNumber == other.lotNumber &&
        performer == other.performer &&
        comment == other.comment &&
        vaccineId == other.vaccineId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, vaccineRefId.hashCode);
    _$hash = $jc(_$hash, effectiveTime.hashCode);
    _$hash = $jc(_$hash, typeOfAdministration.hashCode);
    _$hash = $jc(_$hash, lotNumber.hashCode);
    _$hash = $jc(_$hash, performer.hashCode);
    _$hash = $jc(_$hash, comment.hashCode);
    _$hash = $jc(_$hash, vaccineId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GVaccineUpdateInput')
          ..add('patientId', patientId)
          ..add('vaccineRefId', vaccineRefId)
          ..add('effectiveTime', effectiveTime)
          ..add('typeOfAdministration', typeOfAdministration)
          ..add('lotNumber', lotNumber)
          ..add('performer', performer)
          ..add('comment', comment)
          ..add('vaccineId', vaccineId))
        .toString();
  }
}

class GVaccineUpdateInputBuilder
    implements Builder<GVaccineUpdateInput, GVaccineUpdateInputBuilder> {
  _$GVaccineUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _vaccineRefId;
  String? get vaccineRefId => _$this._vaccineRefId;
  set vaccineRefId(String? vaccineRefId) => _$this._vaccineRefId = vaccineRefId;

  String? _effectiveTime;
  String? get effectiveTime => _$this._effectiveTime;
  set effectiveTime(String? effectiveTime) =>
      _$this._effectiveTime = effectiveTime;

  GVaccineTypeOfAdministrationEnum? _typeOfAdministration;
  GVaccineTypeOfAdministrationEnum? get typeOfAdministration =>
      _$this._typeOfAdministration;
  set typeOfAdministration(
          GVaccineTypeOfAdministrationEnum? typeOfAdministration) =>
      _$this._typeOfAdministration = typeOfAdministration;

  String? _lotNumber;
  String? get lotNumber => _$this._lotNumber;
  set lotNumber(String? lotNumber) => _$this._lotNumber = lotNumber;

  String? _performer;
  String? get performer => _$this._performer;
  set performer(String? performer) => _$this._performer = performer;

  String? _comment;
  String? get comment => _$this._comment;
  set comment(String? comment) => _$this._comment = comment;

  String? _vaccineId;
  String? get vaccineId => _$this._vaccineId;
  set vaccineId(String? vaccineId) => _$this._vaccineId = vaccineId;

  GVaccineUpdateInputBuilder();

  GVaccineUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _vaccineRefId = $v.vaccineRefId;
      _effectiveTime = $v.effectiveTime;
      _typeOfAdministration = $v.typeOfAdministration;
      _lotNumber = $v.lotNumber;
      _performer = $v.performer;
      _comment = $v.comment;
      _vaccineId = $v.vaccineId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GVaccineUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GVaccineUpdateInput;
  }

  @override
  void update(void Function(GVaccineUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GVaccineUpdateInput build() => _build();

  _$GVaccineUpdateInput _build() {
    final _$result = _$v ??
        new _$GVaccineUpdateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GVaccineUpdateInput', 'patientId'),
            vaccineRefId: BuiltValueNullFieldError.checkNotNull(
                vaccineRefId, r'GVaccineUpdateInput', 'vaccineRefId'),
            effectiveTime: BuiltValueNullFieldError.checkNotNull(
                effectiveTime, r'GVaccineUpdateInput', 'effectiveTime'),
            typeOfAdministration: typeOfAdministration,
            lotNumber: lotNumber,
            performer: performer,
            comment: comment,
            vaccineId: BuiltValueNullFieldError.checkNotNull(
                vaccineId, r'GVaccineUpdateInput', 'vaccineId'));
    replace(_$result);
    return _$result;
  }
}

class _$GCloseEnsInput extends GCloseEnsInput {
  @override
  final String patientId;
  @override
  final String loggedInUserId;
  @override
  final String password;
  @override
  final bool suppressionDemandee;

  factory _$GCloseEnsInput([void Function(GCloseEnsInputBuilder)? updates]) =>
      (new GCloseEnsInputBuilder()..update(updates))._build();

  _$GCloseEnsInput._(
      {required this.patientId,
      required this.loggedInUserId,
      required this.password,
      required this.suppressionDemandee})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GCloseEnsInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        loggedInUserId, r'GCloseEnsInput', 'loggedInUserId');
    BuiltValueNullFieldError.checkNotNull(
        password, r'GCloseEnsInput', 'password');
    BuiltValueNullFieldError.checkNotNull(
        suppressionDemandee, r'GCloseEnsInput', 'suppressionDemandee');
  }

  @override
  GCloseEnsInput rebuild(void Function(GCloseEnsInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GCloseEnsInputBuilder toBuilder() =>
      new GCloseEnsInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GCloseEnsInput &&
        patientId == other.patientId &&
        loggedInUserId == other.loggedInUserId &&
        password == other.password &&
        suppressionDemandee == other.suppressionDemandee;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, loggedInUserId.hashCode);
    _$hash = $jc(_$hash, password.hashCode);
    _$hash = $jc(_$hash, suppressionDemandee.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GCloseEnsInput')
          ..add('patientId', patientId)
          ..add('loggedInUserId', loggedInUserId)
          ..add('password', password)
          ..add('suppressionDemandee', suppressionDemandee))
        .toString();
  }
}

class GCloseEnsInputBuilder
    implements Builder<GCloseEnsInput, GCloseEnsInputBuilder> {
  _$GCloseEnsInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _loggedInUserId;
  String? get loggedInUserId => _$this._loggedInUserId;
  set loggedInUserId(String? loggedInUserId) =>
      _$this._loggedInUserId = loggedInUserId;

  String? _password;
  String? get password => _$this._password;
  set password(String? password) => _$this._password = password;

  bool? _suppressionDemandee;
  bool? get suppressionDemandee => _$this._suppressionDemandee;
  set suppressionDemandee(bool? suppressionDemandee) =>
      _$this._suppressionDemandee = suppressionDemandee;

  GCloseEnsInputBuilder();

  GCloseEnsInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _loggedInUserId = $v.loggedInUserId;
      _password = $v.password;
      _suppressionDemandee = $v.suppressionDemandee;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GCloseEnsInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GCloseEnsInput;
  }

  @override
  void update(void Function(GCloseEnsInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GCloseEnsInput build() => _build();

  _$GCloseEnsInput _build() {
    final _$result = _$v ??
        new _$GCloseEnsInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GCloseEnsInput', 'patientId'),
            loggedInUserId: BuiltValueNullFieldError.checkNotNull(
                loggedInUserId, r'GCloseEnsInput', 'loggedInUserId'),
            password: BuiltValueNullFieldError.checkNotNull(
                password, r'GCloseEnsInput', 'password'),
            suppressionDemandee: BuiltValueNullFieldError.checkNotNull(
                suppressionDemandee, r'GCloseEnsInput', 'suppressionDemandee'));
    replace(_$result);
    return _$result;
  }
}

class _$GDelegationMatchPotentialDelegateInput
    extends GDelegationMatchPotentialDelegateInput {
  @override
  final String ins;
  @override
  final String firstGivenName;
  @override
  final String familyName;
  @override
  final String birthDate;

  factory _$GDelegationMatchPotentialDelegateInput(
          [void Function(GDelegationMatchPotentialDelegateInputBuilder)?
              updates]) =>
      (new GDelegationMatchPotentialDelegateInputBuilder()..update(updates))
          ._build();

  _$GDelegationMatchPotentialDelegateInput._(
      {required this.ins,
      required this.firstGivenName,
      required this.familyName,
      required this.birthDate})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        ins, r'GDelegationMatchPotentialDelegateInput', 'ins');
    BuiltValueNullFieldError.checkNotNull(firstGivenName,
        r'GDelegationMatchPotentialDelegateInput', 'firstGivenName');
    BuiltValueNullFieldError.checkNotNull(
        familyName, r'GDelegationMatchPotentialDelegateInput', 'familyName');
    BuiltValueNullFieldError.checkNotNull(
        birthDate, r'GDelegationMatchPotentialDelegateInput', 'birthDate');
  }

  @override
  GDelegationMatchPotentialDelegateInput rebuild(
          void Function(GDelegationMatchPotentialDelegateInputBuilder)
              updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDelegationMatchPotentialDelegateInputBuilder toBuilder() =>
      new GDelegationMatchPotentialDelegateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDelegationMatchPotentialDelegateInput &&
        ins == other.ins &&
        firstGivenName == other.firstGivenName &&
        familyName == other.familyName &&
        birthDate == other.birthDate;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, ins.hashCode);
    _$hash = $jc(_$hash, firstGivenName.hashCode);
    _$hash = $jc(_$hash, familyName.hashCode);
    _$hash = $jc(_$hash, birthDate.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(
            r'GDelegationMatchPotentialDelegateInput')
          ..add('ins', ins)
          ..add('firstGivenName', firstGivenName)
          ..add('familyName', familyName)
          ..add('birthDate', birthDate))
        .toString();
  }
}

class GDelegationMatchPotentialDelegateInputBuilder
    implements
        Builder<GDelegationMatchPotentialDelegateInput,
            GDelegationMatchPotentialDelegateInputBuilder> {
  _$GDelegationMatchPotentialDelegateInput? _$v;

  String? _ins;
  String? get ins => _$this._ins;
  set ins(String? ins) => _$this._ins = ins;

  String? _firstGivenName;
  String? get firstGivenName => _$this._firstGivenName;
  set firstGivenName(String? firstGivenName) =>
      _$this._firstGivenName = firstGivenName;

  String? _familyName;
  String? get familyName => _$this._familyName;
  set familyName(String? familyName) => _$this._familyName = familyName;

  String? _birthDate;
  String? get birthDate => _$this._birthDate;
  set birthDate(String? birthDate) => _$this._birthDate = birthDate;

  GDelegationMatchPotentialDelegateInputBuilder();

  GDelegationMatchPotentialDelegateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _ins = $v.ins;
      _firstGivenName = $v.firstGivenName;
      _familyName = $v.familyName;
      _birthDate = $v.birthDate;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDelegationMatchPotentialDelegateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDelegationMatchPotentialDelegateInput;
  }

  @override
  void update(
      void Function(GDelegationMatchPotentialDelegateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDelegationMatchPotentialDelegateInput build() => _build();

  _$GDelegationMatchPotentialDelegateInput _build() {
    final _$result = _$v ??
        new _$GDelegationMatchPotentialDelegateInput._(
            ins: BuiltValueNullFieldError.checkNotNull(
                ins, r'GDelegationMatchPotentialDelegateInput', 'ins'),
            firstGivenName: BuiltValueNullFieldError.checkNotNull(
                firstGivenName,
                r'GDelegationMatchPotentialDelegateInput',
                'firstGivenName'),
            familyName: BuiltValueNullFieldError.checkNotNull(familyName,
                r'GDelegationMatchPotentialDelegateInput', 'familyName'),
            birthDate: BuiltValueNullFieldError.checkNotNull(birthDate,
                r'GDelegationMatchPotentialDelegateInput', 'birthDate'));
    replace(_$result);
    return _$result;
  }
}

class _$GDelegationInviteToCaregivingInput
    extends GDelegationInviteToCaregivingInput {
  @override
  final String idp;
  @override
  final String transactionId;

  factory _$GDelegationInviteToCaregivingInput(
          [void Function(GDelegationInviteToCaregivingInputBuilder)?
              updates]) =>
      (new GDelegationInviteToCaregivingInputBuilder()..update(updates))
          ._build();

  _$GDelegationInviteToCaregivingInput._(
      {required this.idp, required this.transactionId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        idp, r'GDelegationInviteToCaregivingInput', 'idp');
    BuiltValueNullFieldError.checkNotNull(
        transactionId, r'GDelegationInviteToCaregivingInput', 'transactionId');
  }

  @override
  GDelegationInviteToCaregivingInput rebuild(
          void Function(GDelegationInviteToCaregivingInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDelegationInviteToCaregivingInputBuilder toBuilder() =>
      new GDelegationInviteToCaregivingInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDelegationInviteToCaregivingInput &&
        idp == other.idp &&
        transactionId == other.transactionId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, idp.hashCode);
    _$hash = $jc(_$hash, transactionId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDelegationInviteToCaregivingInput')
          ..add('idp', idp)
          ..add('transactionId', transactionId))
        .toString();
  }
}

class GDelegationInviteToCaregivingInputBuilder
    implements
        Builder<GDelegationInviteToCaregivingInput,
            GDelegationInviteToCaregivingInputBuilder> {
  _$GDelegationInviteToCaregivingInput? _$v;

  String? _idp;
  String? get idp => _$this._idp;
  set idp(String? idp) => _$this._idp = idp;

  String? _transactionId;
  String? get transactionId => _$this._transactionId;
  set transactionId(String? transactionId) =>
      _$this._transactionId = transactionId;

  GDelegationInviteToCaregivingInputBuilder();

  GDelegationInviteToCaregivingInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _idp = $v.idp;
      _transactionId = $v.transactionId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDelegationInviteToCaregivingInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDelegationInviteToCaregivingInput;
  }

  @override
  void update(
      void Function(GDelegationInviteToCaregivingInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDelegationInviteToCaregivingInput build() => _build();

  _$GDelegationInviteToCaregivingInput _build() {
    final _$result = _$v ??
        new _$GDelegationInviteToCaregivingInput._(
            idp: BuiltValueNullFieldError.checkNotNull(
                idp, r'GDelegationInviteToCaregivingInput', 'idp'),
            transactionId: BuiltValueNullFieldError.checkNotNull(transactionId,
                r'GDelegationInviteToCaregivingInput', 'transactionId'));
    replace(_$result);
    return _$result;
  }
}

class _$GDelegationAcceptInvitationInput
    extends GDelegationAcceptInvitationInput {
  @override
  final String invitationId;

  factory _$GDelegationAcceptInvitationInput(
          [void Function(GDelegationAcceptInvitationInputBuilder)? updates]) =>
      (new GDelegationAcceptInvitationInputBuilder()..update(updates))._build();

  _$GDelegationAcceptInvitationInput._({required this.invitationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        invitationId, r'GDelegationAcceptInvitationInput', 'invitationId');
  }

  @override
  GDelegationAcceptInvitationInput rebuild(
          void Function(GDelegationAcceptInvitationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDelegationAcceptInvitationInputBuilder toBuilder() =>
      new GDelegationAcceptInvitationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDelegationAcceptInvitationInput &&
        invitationId == other.invitationId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, invitationId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDelegationAcceptInvitationInput')
          ..add('invitationId', invitationId))
        .toString();
  }
}

class GDelegationAcceptInvitationInputBuilder
    implements
        Builder<GDelegationAcceptInvitationInput,
            GDelegationAcceptInvitationInputBuilder> {
  _$GDelegationAcceptInvitationInput? _$v;

  String? _invitationId;
  String? get invitationId => _$this._invitationId;
  set invitationId(String? invitationId) => _$this._invitationId = invitationId;

  GDelegationAcceptInvitationInputBuilder();

  GDelegationAcceptInvitationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _invitationId = $v.invitationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDelegationAcceptInvitationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDelegationAcceptInvitationInput;
  }

  @override
  void update(void Function(GDelegationAcceptInvitationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDelegationAcceptInvitationInput build() => _build();

  _$GDelegationAcceptInvitationInput _build() {
    final _$result = _$v ??
        new _$GDelegationAcceptInvitationInput._(
            invitationId: BuiltValueNullFieldError.checkNotNull(invitationId,
                r'GDelegationAcceptInvitationInput', 'invitationId'));
    replace(_$result);
    return _$result;
  }
}

class _$GDelegationRefuseInvitationInput
    extends GDelegationRefuseInvitationInput {
  @override
  final String invitationId;

  factory _$GDelegationRefuseInvitationInput(
          [void Function(GDelegationRefuseInvitationInputBuilder)? updates]) =>
      (new GDelegationRefuseInvitationInputBuilder()..update(updates))._build();

  _$GDelegationRefuseInvitationInput._({required this.invitationId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        invitationId, r'GDelegationRefuseInvitationInput', 'invitationId');
  }

  @override
  GDelegationRefuseInvitationInput rebuild(
          void Function(GDelegationRefuseInvitationInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDelegationRefuseInvitationInputBuilder toBuilder() =>
      new GDelegationRefuseInvitationInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDelegationRefuseInvitationInput &&
        invitationId == other.invitationId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, invitationId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDelegationRefuseInvitationInput')
          ..add('invitationId', invitationId))
        .toString();
  }
}

class GDelegationRefuseInvitationInputBuilder
    implements
        Builder<GDelegationRefuseInvitationInput,
            GDelegationRefuseInvitationInputBuilder> {
  _$GDelegationRefuseInvitationInput? _$v;

  String? _invitationId;
  String? get invitationId => _$this._invitationId;
  set invitationId(String? invitationId) => _$this._invitationId = invitationId;

  GDelegationRefuseInvitationInputBuilder();

  GDelegationRefuseInvitationInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _invitationId = $v.invitationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDelegationRefuseInvitationInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDelegationRefuseInvitationInput;
  }

  @override
  void update(void Function(GDelegationRefuseInvitationInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDelegationRefuseInvitationInput build() => _build();

  _$GDelegationRefuseInvitationInput _build() {
    final _$result = _$v ??
        new _$GDelegationRefuseInvitationInput._(
            invitationId: BuiltValueNullFieldError.checkNotNull(invitationId,
                r'GDelegationRefuseInvitationInput', 'invitationId'));
    replace(_$result);
    return _$result;
  }
}

class _$GDelegationRevokeInput extends GDelegationRevokeInput {
  @override
  final String delegationId;

  factory _$GDelegationRevokeInput(
          [void Function(GDelegationRevokeInputBuilder)? updates]) =>
      (new GDelegationRevokeInputBuilder()..update(updates))._build();

  _$GDelegationRevokeInput._({required this.delegationId}) : super._() {
    BuiltValueNullFieldError.checkNotNull(
        delegationId, r'GDelegationRevokeInput', 'delegationId');
  }

  @override
  GDelegationRevokeInput rebuild(
          void Function(GDelegationRevokeInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GDelegationRevokeInputBuilder toBuilder() =>
      new GDelegationRevokeInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GDelegationRevokeInput &&
        delegationId == other.delegationId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, delegationId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GDelegationRevokeInput')
          ..add('delegationId', delegationId))
        .toString();
  }
}

class GDelegationRevokeInputBuilder
    implements Builder<GDelegationRevokeInput, GDelegationRevokeInputBuilder> {
  _$GDelegationRevokeInput? _$v;

  String? _delegationId;
  String? get delegationId => _$this._delegationId;
  set delegationId(String? delegationId) => _$this._delegationId = delegationId;

  GDelegationRevokeInputBuilder();

  GDelegationRevokeInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _delegationId = $v.delegationId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GDelegationRevokeInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GDelegationRevokeInput;
  }

  @override
  void update(void Function(GDelegationRevokeInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GDelegationRevokeInput build() => _build();

  _$GDelegationRevokeInput _build() {
    final _$result = _$v ??
        new _$GDelegationRevokeInput._(
            delegationId: BuiltValueNullFieldError.checkNotNull(
                delegationId, r'GDelegationRevokeInput', 'delegationId'));
    replace(_$result);
    return _$result;
  }
}

class _$GHealthQuizResponseInput extends GHealthQuizResponseInput {
  @override
  final String patientId;
  @override
  final String quizCode;
  @override
  final String quizVersion;
  @override
  final BuiltList<GResponseInput> details;
  @override
  final GHealthQuizCompletionStatus status;
  @override
  final double? questionToDisplay;

  factory _$GHealthQuizResponseInput(
          [void Function(GHealthQuizResponseInputBuilder)? updates]) =>
      (new GHealthQuizResponseInputBuilder()..update(updates))._build();

  _$GHealthQuizResponseInput._(
      {required this.patientId,
      required this.quizCode,
      required this.quizVersion,
      required this.details,
      required this.status,
      this.questionToDisplay})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GHealthQuizResponseInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        quizCode, r'GHealthQuizResponseInput', 'quizCode');
    BuiltValueNullFieldError.checkNotNull(
        quizVersion, r'GHealthQuizResponseInput', 'quizVersion');
    BuiltValueNullFieldError.checkNotNull(
        details, r'GHealthQuizResponseInput', 'details');
    BuiltValueNullFieldError.checkNotNull(
        status, r'GHealthQuizResponseInput', 'status');
  }

  @override
  GHealthQuizResponseInput rebuild(
          void Function(GHealthQuizResponseInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GHealthQuizResponseInputBuilder toBuilder() =>
      new GHealthQuizResponseInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GHealthQuizResponseInput &&
        patientId == other.patientId &&
        quizCode == other.quizCode &&
        quizVersion == other.quizVersion &&
        details == other.details &&
        status == other.status &&
        questionToDisplay == other.questionToDisplay;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, quizCode.hashCode);
    _$hash = $jc(_$hash, quizVersion.hashCode);
    _$hash = $jc(_$hash, details.hashCode);
    _$hash = $jc(_$hash, status.hashCode);
    _$hash = $jc(_$hash, questionToDisplay.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GHealthQuizResponseInput')
          ..add('patientId', patientId)
          ..add('quizCode', quizCode)
          ..add('quizVersion', quizVersion)
          ..add('details', details)
          ..add('status', status)
          ..add('questionToDisplay', questionToDisplay))
        .toString();
  }
}

class GHealthQuizResponseInputBuilder
    implements
        Builder<GHealthQuizResponseInput, GHealthQuizResponseInputBuilder> {
  _$GHealthQuizResponseInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  String? _quizCode;
  String? get quizCode => _$this._quizCode;
  set quizCode(String? quizCode) => _$this._quizCode = quizCode;

  String? _quizVersion;
  String? get quizVersion => _$this._quizVersion;
  set quizVersion(String? quizVersion) => _$this._quizVersion = quizVersion;

  ListBuilder<GResponseInput>? _details;
  ListBuilder<GResponseInput> get details =>
      _$this._details ??= new ListBuilder<GResponseInput>();
  set details(ListBuilder<GResponseInput>? details) =>
      _$this._details = details;

  GHealthQuizCompletionStatus? _status;
  GHealthQuizCompletionStatus? get status => _$this._status;
  set status(GHealthQuizCompletionStatus? status) => _$this._status = status;

  double? _questionToDisplay;
  double? get questionToDisplay => _$this._questionToDisplay;
  set questionToDisplay(double? questionToDisplay) =>
      _$this._questionToDisplay = questionToDisplay;

  GHealthQuizResponseInputBuilder();

  GHealthQuizResponseInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _quizCode = $v.quizCode;
      _quizVersion = $v.quizVersion;
      _details = $v.details.toBuilder();
      _status = $v.status;
      _questionToDisplay = $v.questionToDisplay;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GHealthQuizResponseInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GHealthQuizResponseInput;
  }

  @override
  void update(void Function(GHealthQuizResponseInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GHealthQuizResponseInput build() => _build();

  _$GHealthQuizResponseInput _build() {
    _$GHealthQuizResponseInput _$result;
    try {
      _$result = _$v ??
          new _$GHealthQuizResponseInput._(
              patientId: BuiltValueNullFieldError.checkNotNull(
                  patientId, r'GHealthQuizResponseInput', 'patientId'),
              quizCode: BuiltValueNullFieldError.checkNotNull(
                  quizCode, r'GHealthQuizResponseInput', 'quizCode'),
              quizVersion: BuiltValueNullFieldError.checkNotNull(
                  quizVersion, r'GHealthQuizResponseInput', 'quizVersion'),
              details: details.build(),
              status: BuiltValueNullFieldError.checkNotNull(
                  status, r'GHealthQuizResponseInput', 'status'),
              questionToDisplay: questionToDisplay);
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'details';
        details.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GHealthQuizResponseInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GResponseInput extends GResponseInput {
  @override
  final String questionCode;
  @override
  final BuiltList<String> value;

  factory _$GResponseInput([void Function(GResponseInputBuilder)? updates]) =>
      (new GResponseInputBuilder()..update(updates))._build();

  _$GResponseInput._({required this.questionCode, required this.value})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        questionCode, r'GResponseInput', 'questionCode');
    BuiltValueNullFieldError.checkNotNull(value, r'GResponseInput', 'value');
  }

  @override
  GResponseInput rebuild(void Function(GResponseInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GResponseInputBuilder toBuilder() =>
      new GResponseInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GResponseInput &&
        questionCode == other.questionCode &&
        value == other.value;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, questionCode.hashCode);
    _$hash = $jc(_$hash, value.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GResponseInput')
          ..add('questionCode', questionCode)
          ..add('value', value))
        .toString();
  }
}

class GResponseInputBuilder
    implements Builder<GResponseInput, GResponseInputBuilder> {
  _$GResponseInput? _$v;

  String? _questionCode;
  String? get questionCode => _$this._questionCode;
  set questionCode(String? questionCode) => _$this._questionCode = questionCode;

  ListBuilder<String>? _value;
  ListBuilder<String> get value => _$this._value ??= new ListBuilder<String>();
  set value(ListBuilder<String>? value) => _$this._value = value;

  GResponseInputBuilder();

  GResponseInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _questionCode = $v.questionCode;
      _value = $v.value.toBuilder();
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GResponseInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GResponseInput;
  }

  @override
  void update(void Function(GResponseInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GResponseInput build() => _build();

  _$GResponseInput _build() {
    _$GResponseInput _$result;
    try {
      _$result = _$v ??
          new _$GResponseInput._(
              questionCode: BuiltValueNullFieldError.checkNotNull(
                  questionCode, r'GResponseInput', 'questionCode'),
              value: value.build());
    } catch (_) {
      late String _$failedField;
      try {
        _$failedField = 'value';
        value.build();
      } catch (e) {
        throw new BuiltValueNestedFieldError(
            r'GResponseInput', _$failedField, e.toString());
      }
      rethrow;
    }
    replace(_$result);
    return _$result;
  }
}

class _$GFinalityConsentToUpdateInput extends GFinalityConsentToUpdateInput {
  @override
  final String patientId;
  @override
  final bool consent;
  @override
  final GFinalityCode finalityCode;

  factory _$GFinalityConsentToUpdateInput(
          [void Function(GFinalityConsentToUpdateInputBuilder)? updates]) =>
      (new GFinalityConsentToUpdateInputBuilder()..update(updates))._build();

  _$GFinalityConsentToUpdateInput._(
      {required this.patientId,
      required this.consent,
      required this.finalityCode})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GFinalityConsentToUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        consent, r'GFinalityConsentToUpdateInput', 'consent');
    BuiltValueNullFieldError.checkNotNull(
        finalityCode, r'GFinalityConsentToUpdateInput', 'finalityCode');
  }

  @override
  GFinalityConsentToUpdateInput rebuild(
          void Function(GFinalityConsentToUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GFinalityConsentToUpdateInputBuilder toBuilder() =>
      new GFinalityConsentToUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GFinalityConsentToUpdateInput &&
        patientId == other.patientId &&
        consent == other.consent &&
        finalityCode == other.finalityCode;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, consent.hashCode);
    _$hash = $jc(_$hash, finalityCode.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GFinalityConsentToUpdateInput')
          ..add('patientId', patientId)
          ..add('consent', consent)
          ..add('finalityCode', finalityCode))
        .toString();
  }
}

class GFinalityConsentToUpdateInputBuilder
    implements
        Builder<GFinalityConsentToUpdateInput,
            GFinalityConsentToUpdateInputBuilder> {
  _$GFinalityConsentToUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  bool? _consent;
  bool? get consent => _$this._consent;
  set consent(bool? consent) => _$this._consent = consent;

  GFinalityCode? _finalityCode;
  GFinalityCode? get finalityCode => _$this._finalityCode;
  set finalityCode(GFinalityCode? finalityCode) =>
      _$this._finalityCode = finalityCode;

  GFinalityConsentToUpdateInputBuilder();

  GFinalityConsentToUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _consent = $v.consent;
      _finalityCode = $v.finalityCode;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GFinalityConsentToUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GFinalityConsentToUpdateInput;
  }

  @override
  void update(void Function(GFinalityConsentToUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GFinalityConsentToUpdateInput build() => _build();

  _$GFinalityConsentToUpdateInput _build() {
    final _$result = _$v ??
        new _$GFinalityConsentToUpdateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GFinalityConsentToUpdateInput', 'patientId'),
            consent: BuiltValueNullFieldError.checkNotNull(
                consent, r'GFinalityConsentToUpdateInput', 'consent'),
            finalityCode: BuiltValueNullFieldError.checkNotNull(finalityCode,
                r'GFinalityConsentToUpdateInput', 'finalityCode'));
    replace(_$result);
    return _$result;
  }
}

class _$GBloodGroupInput extends GBloodGroupInput {
  @override
  final String patientId;
  @override
  final GBloodGroupEnum bloodGroup;

  factory _$GBloodGroupInput(
          [void Function(GBloodGroupInputBuilder)? updates]) =>
      (new GBloodGroupInputBuilder()..update(updates))._build();

  _$GBloodGroupInput._({required this.patientId, required this.bloodGroup})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GBloodGroupInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        bloodGroup, r'GBloodGroupInput', 'bloodGroup');
  }

  @override
  GBloodGroupInput rebuild(void Function(GBloodGroupInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBloodGroupInputBuilder toBuilder() =>
      new GBloodGroupInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBloodGroupInput &&
        patientId == other.patientId &&
        bloodGroup == other.bloodGroup;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, bloodGroup.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBloodGroupInput')
          ..add('patientId', patientId)
          ..add('bloodGroup', bloodGroup))
        .toString();
  }
}

class GBloodGroupInputBuilder
    implements Builder<GBloodGroupInput, GBloodGroupInputBuilder> {
  _$GBloodGroupInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GBloodGroupEnum? _bloodGroup;
  GBloodGroupEnum? get bloodGroup => _$this._bloodGroup;
  set bloodGroup(GBloodGroupEnum? bloodGroup) =>
      _$this._bloodGroup = bloodGroup;

  GBloodGroupInputBuilder();

  GBloodGroupInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _bloodGroup = $v.bloodGroup;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBloodGroupInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBloodGroupInput;
  }

  @override
  void update(void Function(GBloodGroupInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBloodGroupInput build() => _build();

  _$GBloodGroupInput _build() {
    final _$result = _$v ??
        new _$GBloodGroupInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GBloodGroupInput', 'patientId'),
            bloodGroup: BuiltValueNullFieldError.checkNotNull(
                bloodGroup, r'GBloodGroupInput', 'bloodGroup'));
    replace(_$result);
    return _$result;
  }
}

class _$GBloodGroupUpdateInput extends GBloodGroupUpdateInput {
  @override
  final String patientId;
  @override
  final GBloodGroupEnum bloodGroup;
  @override
  final String bloodGroupId;

  factory _$GBloodGroupUpdateInput(
          [void Function(GBloodGroupUpdateInputBuilder)? updates]) =>
      (new GBloodGroupUpdateInputBuilder()..update(updates))._build();

  _$GBloodGroupUpdateInput._(
      {required this.patientId,
      required this.bloodGroup,
      required this.bloodGroupId})
      : super._() {
    BuiltValueNullFieldError.checkNotNull(
        patientId, r'GBloodGroupUpdateInput', 'patientId');
    BuiltValueNullFieldError.checkNotNull(
        bloodGroup, r'GBloodGroupUpdateInput', 'bloodGroup');
    BuiltValueNullFieldError.checkNotNull(
        bloodGroupId, r'GBloodGroupUpdateInput', 'bloodGroupId');
  }

  @override
  GBloodGroupUpdateInput rebuild(
          void Function(GBloodGroupUpdateInputBuilder) updates) =>
      (toBuilder()..update(updates)).build();

  @override
  GBloodGroupUpdateInputBuilder toBuilder() =>
      new GBloodGroupUpdateInputBuilder()..replace(this);

  @override
  bool operator ==(Object other) {
    if (identical(other, this)) return true;
    return other is GBloodGroupUpdateInput &&
        patientId == other.patientId &&
        bloodGroup == other.bloodGroup &&
        bloodGroupId == other.bloodGroupId;
  }

  @override
  int get hashCode {
    var _$hash = 0;
    _$hash = $jc(_$hash, patientId.hashCode);
    _$hash = $jc(_$hash, bloodGroup.hashCode);
    _$hash = $jc(_$hash, bloodGroupId.hashCode);
    _$hash = $jf(_$hash);
    return _$hash;
  }

  @override
  String toString() {
    return (newBuiltValueToStringHelper(r'GBloodGroupUpdateInput')
          ..add('patientId', patientId)
          ..add('bloodGroup', bloodGroup)
          ..add('bloodGroupId', bloodGroupId))
        .toString();
  }
}

class GBloodGroupUpdateInputBuilder
    implements Builder<GBloodGroupUpdateInput, GBloodGroupUpdateInputBuilder> {
  _$GBloodGroupUpdateInput? _$v;

  String? _patientId;
  String? get patientId => _$this._patientId;
  set patientId(String? patientId) => _$this._patientId = patientId;

  GBloodGroupEnum? _bloodGroup;
  GBloodGroupEnum? get bloodGroup => _$this._bloodGroup;
  set bloodGroup(GBloodGroupEnum? bloodGroup) =>
      _$this._bloodGroup = bloodGroup;

  String? _bloodGroupId;
  String? get bloodGroupId => _$this._bloodGroupId;
  set bloodGroupId(String? bloodGroupId) => _$this._bloodGroupId = bloodGroupId;

  GBloodGroupUpdateInputBuilder();

  GBloodGroupUpdateInputBuilder get _$this {
    final $v = _$v;
    if ($v != null) {
      _patientId = $v.patientId;
      _bloodGroup = $v.bloodGroup;
      _bloodGroupId = $v.bloodGroupId;
      _$v = null;
    }
    return this;
  }

  @override
  void replace(GBloodGroupUpdateInput other) {
    ArgumentError.checkNotNull(other, 'other');
    _$v = other as _$GBloodGroupUpdateInput;
  }

  @override
  void update(void Function(GBloodGroupUpdateInputBuilder)? updates) {
    if (updates != null) updates(this);
  }

  @override
  GBloodGroupUpdateInput build() => _build();

  _$GBloodGroupUpdateInput _build() {
    final _$result = _$v ??
        new _$GBloodGroupUpdateInput._(
            patientId: BuiltValueNullFieldError.checkNotNull(
                patientId, r'GBloodGroupUpdateInput', 'patientId'),
            bloodGroup: BuiltValueNullFieldError.checkNotNull(
                bloodGroup, r'GBloodGroupUpdateInput', 'bloodGroup'),
            bloodGroupId: BuiltValueNullFieldError.checkNotNull(
                bloodGroupId, r'GBloodGroupUpdateInput', 'bloodGroupId'));
    replace(_$result);
    return _$result;
  }
}

// ignore_for_file: deprecated_member_use_from_same_package,type=lint
